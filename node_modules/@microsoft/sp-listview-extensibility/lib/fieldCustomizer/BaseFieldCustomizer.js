var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { virtual } from '@microsoft/decorators';
import { BaseExtension } from '@microsoft/sp-extension-base';
/**
 * This is the base class that third parties should extend when implementing
 * a client-side extension that customizes the appearance of fields in
 * a SharePoint ListView.
 *
 * In the component manifest, the "extensionType" should be set to "FieldCustomizer".
 *
 * @public
 */
var BaseFieldCustomizer = /** @class */ (function (_super) {
    __extends(BaseFieldCustomizer, _super);
    function BaseFieldCustomizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BaseFieldCustomizer.prototype.onRenderCell = function (event) {
        var text = "" + event.fieldValue;
        event.fieldValue.innerText = text;
    };
    BaseFieldCustomizer.prototype.onDisposeCell = function (event) {
        // (implemented by child class)
    };
    __decorate([
        virtual
    ], BaseFieldCustomizer.prototype, "onRenderCell", null);
    __decorate([
        virtual
    ], BaseFieldCustomizer.prototype, "onDisposeCell", null);
    return BaseFieldCustomizer;
}(BaseExtension));
export default BaseFieldCustomizer;
//# sourceMappingURL=BaseFieldCustomizer.js.map