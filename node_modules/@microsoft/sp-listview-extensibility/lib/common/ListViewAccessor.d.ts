import { SPField } from '@microsoft/sp-page-context';
import { SPEvent, SPEventArgs } from '@microsoft/sp-core-library';
import ListItemAccessor from './ListItemAccessor';
/**
 * Provides access to a ListView column, which is the visual presentation
 * of a field.
 *
 * @remarks
 *
 * A SharePoint "field" (SPField) defines the data storage for a property of a list item.
 * (If the list item represents a document, then the field is sometimes called a "property".)
 *
 * A "column" is the visual presentation of a field, when displayed by the ListView.
 *
 * @public
 */
export declare abstract class ColumnAccessor {
    /** @internal */
    constructor();
    /**
     * The server-side definition of the field.
     * This property is read-only.
     */
    abstract readonly field: SPField;
    /**
     * Whether to show this column in the list view.
     * This property is read-only.
     */
    abstract readonly visible: boolean;
}
/**
 * Provides access to a ListView row, which is the visual presentation
 * of a SharePoint list item.
 *
 * @remarks
 *
 * A SharePoint "list item" (SPListItem) is a data storage record in the content
 * management system; it stores an array of values for the associated fields.
 *
 * A "row" is the visual presentation of a list item, when displayed by the ListView;
 * it stores an array of cell values for the associated columns.
 *
 * @public
 */
export declare abstract class RowAccessor extends ListItemAccessor {
    /**
     * @internal
     */
    constructor();
}
/**
 * Arguments for the selected rows changed event.
 *
 * @public
 */
export declare class SelectedRowsChangedEventArgs extends SPEventArgs {
    /**
     * The list of rows that were selected in the list view at the time when the event was fired.
     */
    selectedRows: ReadonlyArray<RowAccessor>;
}
/**
 * Provides access to a SharePoint ListView control.
 *
 * @public
 */
declare abstract class ListViewAccessor {
    /**
     * SPEvent name when the selected rows in a list have changed.
     * @internal
     */
    static _selectedRowsChangedEventName: string;
    private _selectedRowsChangedEvent;
    /**
     * @internal
     */
    constructor();
    /**
     * The columns in associated with this view, including hidden columns.
     */
    abstract readonly columns: ReadonlyArray<ColumnAccessor>;
    /**
     * Returns the list view column corresponding to the field with the specified internal name,
     * or undefined if none is found.
     */
    abstract tryGetColumnByName(internalName: string): ColumnAccessor | undefined;
    /**
     * Event that gets raised every time the selected items in the list view change.
     * @eventproperty
     */
    readonly selectedRowsChangedEvent: SPEvent<SelectedRowsChangedEventArgs>;
}
export default ListViewAccessor;
//# sourceMappingURL=ListViewAccessor.d.ts.map