{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Copyright (c) Quid, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @flow\nconst notFocusVisibleRgxp = /:not\\(:focus-visible\\)/g;\nconst focusVisibleRgxp = /:focus-visible/g;\n\nconst trim = selector => selector.trim().replace(/\\s+/g, ' ');\n\nexport default (\n  context: number,\n  content: string,\n  selectors: Array<string>,\n  parents: Array<string>,\n  line: number,\n  column: number,\n  length: number\n) => {\n  if (context === 2) {\n    selectors.forEach((selector, index) => {\n      if (selector.match(notFocusVisibleRgxp)) {\n        const cleanSelector = selector.replace(notFocusVisibleRgxp, ':focus');\n        selectors[index] = trim(`\n          [data-whatinput]:not([data-whatinput=\"keyboard\"]) ${cleanSelector},\n          [data-whatinput]:not([data-whatinput=\"initial\"]) ${cleanSelector}\n        `);\n      } else if (selector.match(focusVisibleRgxp)) {\n        const cleanSelector = selector.replace(focusVisibleRgxp, ':focus');\n        selectors[index] = trim(`\n          [data-whatinput=\"keyboard\"] ${cleanSelector},\n          [data-whatinput=\"initial\"] ${cleanSelector}\n        `);\n      }\n    });\n  }\n\n  return content;\n};\n"],"names":["notFocusVisibleRgxp","focusVisibleRgxp","trim","selector","replace","context","content","selectors","parents","line","column","length","forEach","index","match","cleanSelector"],"mappings":"AAOA,IAAMA,EAAsB,0BACtBC,EAAmB,kBAEnBC,EAAO,SAAAC,UAAYA,EAASD,OAAOE,QAAQ,OAAQ,8BAGvDC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAoBA,OAlBgB,IAAZN,GACFE,EAAUK,SAAQ,SAACT,EAAUU,GAC3B,GAAIV,EAASW,MAAMd,GAAsB,CACvC,IAAMe,EAAgBZ,EAASC,QAAQJ,EAAqB,UAC5DO,EAAUM,GAASX,mEACmCa,mEACDA,wBAE5CZ,EAASW,MAAMb,GAAmB,CAC3C,IAAMc,EAAgBZ,EAASC,QAAQH,EAAkB,UACzDM,EAAUM,GAASX,6CACaa,6CACDA,oBAM9BT"}