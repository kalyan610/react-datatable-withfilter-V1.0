{"version":3,"file":"odata.es5.umd.js","sources":["../../../../packages/odata/src/caching.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../packages/odata/src/parsers.ts","../../../../packages/odata/src/pipeline.ts","../../../../packages/odata/src/queryable.ts","../../../../packages/odata/src/odatabatch.ts"],"sourcesContent":["import { ODataParser } from \"./parsers\";\nimport { RuntimeConfig, dateAdd, PnPClientStore, PnPClientStorage } from \"@pnp/common\";\n\nexport interface ICachingOptions {\n    expiration?: Date;\n    storeName?: \"session\" | \"local\";\n    key: string;\n}\n\nexport class CachingOptions implements ICachingOptions {\n\n    protected static storage = new PnPClientStorage();\n\n    public expiration = dateAdd(new Date(), \"second\", RuntimeConfig.defaultCachingTimeoutSeconds);\n\n    public storeName: \"session\" | \"local\" = RuntimeConfig.defaultCachingStore;\n\n    constructor(public key: string) { }\n\n    public get store(): PnPClientStore {\n        if (this.storeName === \"local\") {\n            return CachingOptions.storage.local;\n        } else {\n            return CachingOptions.storage.session;\n        }\n    }\n}\n\nexport class CachingParserWrapper<T> implements ODataParser<T> {\n\n    constructor(\n        public parser: ODataParser<T>,\n        public cacheOptions: CachingOptions) { }\n\n    public parse(response: Response): Promise<T> {\n        return this.parser.parse(response).then(r => this.cacheData(r));\n    }\n\n    protected cacheData(data: any): any {\n        if (this.cacheOptions.store !== null) {\n            this.cacheOptions.store.put(this.cacheOptions.key, data, this.cacheOptions.expiration);\n        }\n        return data;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { isFunc, hOP } from \"@pnp/common\";\n\nexport interface ODataParser<T> {\n    hydrate?: (d: any) => T;\n    parse(r: Response): Promise<T>;\n}\n\nexport class HttpRequestError extends Error {\n\n    public isHttpRequestError = true;\n\n    constructor(message: string, public response: Response, public status = response.status, public statusText = response.statusText) {\n        super(message);\n    }\n\n    public static init(r: Response): Promise<HttpRequestError> {\n\n        return r.clone().text().then(t => {\n            return new HttpRequestError(`Error making HttpClient request in queryable [${r.status}] ${r.statusText} ::> ${t}`, r.clone());\n        });\n    }\n}\n\nexport abstract class ODataParserBase<T> implements ODataParser<T> {\n\n    protected rawJson: any = {};\n\n    public parse(r: Response): Promise<T> {\n\n        return new Promise<T>((resolve, reject) => {\n            if (this.handleError(r, reject)) {\n                this.parseImpl(r, resolve, reject);\n            }\n        });\n    }\n\n    protected parseImpl(r: Response, resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: Error) => void): void {\n        if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")!) === 0) || r.status === 204) {\n            resolve(<T>{});\n        } else {\n\n            // patch to handle cases of 200 response with no or whitespace only bodies (#487 & #545)\n            r.text()\n                .then(txt => txt.replace(/\\s/ig, \"\").length > 0 ? JSON.parse(txt) : {})\n                .then(json => resolve(this.parseODataJSON<T>(json)))\n                .catch(e => reject(e));\n        }\n    }\n\n    /**\n     * Handles a response with ok === false by parsing the body and creating a ProcessHttpClientResponseException\n     * which is passed to the reject delegate. This method returns true if there is no error, otherwise false\n     *\n     * @param r Current response object\n     * @param reject reject delegate for the surrounding promise\n     */\n    protected handleError(r: Response, reject: (err?: Error) => void): boolean {\n        if (!r.ok) {\n            HttpRequestError.init(r).then(reject);\n        }\n\n        return r.ok;\n    }\n\n    /**\n     * Normalizes the json response by removing the various nested levels\n     *\n     * @param json json object to parse\n     */\n    protected parseODataJSON<U>(json: any): U {\n        this.rawJson = json;\n        let result = json;\n        if (hOP(json, \"d\")) {\n            if (hOP(json.d, \"results\")) {\n                result = json.d.results;\n            } else {\n                result = json.d;\n            }\n        } else if (hOP(json, \"value\")) {\n            result = json.value;\n        }\n        return result;\n    }\n}\n\nexport class ODataDefaultParser<T = any> extends ODataParserBase<T> {\n}\n\nexport class TextParser extends ODataParserBase<string> {\n\n    protected parseImpl(r: Response, resolve: (value: any) => void): void {\n        r.text().then(resolve);\n    }\n}\n\nexport class BlobParser extends ODataParserBase<Blob> {\n\n    protected parseImpl(r: Response, resolve: (value: any) => void): void {\n        r.blob().then(resolve);\n    }\n}\n\nexport class JSONParser extends ODataParserBase<any> {\n\n    protected parseImpl(r: Response, resolve: (value: any) => void): void {\n        r.json().then(resolve);\n    }\n}\n\nexport class BufferParser extends ODataParserBase<ArrayBuffer> {\n\n    protected parseImpl(r: Response, resolve: (value: any) => void): void {\n\n        if (isFunc(r.arrayBuffer)) {\n            r.arrayBuffer().then(resolve);\n        } else {\n            (<any>r).buffer().then(resolve);\n        }\n    }\n}\n\nexport class LambdaParser<T = any> extends ODataParserBase<T> {\n\n    constructor(private parser: (r: Response) => Promise<T>) {\n        super();\n    }\n\n    protected parseImpl(r: Response, resolve: (value: any) => void): void {\n        this.parser(r).then(resolve);\n    }\n}\n","import { FetchOptions, RequestClient, extend, isFunc, hOP } from \"@pnp/common\";\nimport { LogLevel, Logger } from \"@pnp/logging\";\nimport { CachingOptions, CachingParserWrapper, ICachingOptions } from \"./caching\";\nimport { ODataBatch } from \"./odatabatch\";\nimport { ODataParser } from \"./parsers\";\n\nexport type PipelineMethod<T> = (c: RequestContext<T>) => Promise<RequestContext<T>>;\n\n/**\n * Defines the context for a given request to be processed in the pipeline\n */\nexport interface RequestContext<T> {\n    batch: ODataBatch;\n    batchDependency: () => void;\n    cachingOptions: ICachingOptions;\n    hasResult?: boolean;\n    isBatched: boolean;\n    isCached: boolean;\n    options: FetchOptions;\n    parser: ODataParser<T>;\n    pipeline: PipelineMethod<T>[];\n    requestAbsoluteUrl: string;\n    requestId: string;\n    result?: T;\n    verb: string;\n    clientFactory: () => RequestClient;\n}\n\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult<T>(context: RequestContext<T>): Promise<T> {\n\n    Logger.log({\n        data: Logger.activeLogLevel === LogLevel.Verbose ? context.result : {},\n        level: LogLevel.Info,\n        message: `[${context.requestId}] (${(new Date()).getTime()}) Returning result from pipeline. Set logging to verbose to see data.`,\n    });\n\n    return Promise.resolve(context.result!);\n}\n\n/**\n * Sets the result on the context\n */\nexport function setResult<T>(context: RequestContext<T>, value: any): Promise<RequestContext<T>> {\n\n    return new Promise<RequestContext<T>>((resolve) => {\n\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\n\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next<T>(c: RequestContext<T>): Promise<RequestContext<T>> {\n\n    if (c.pipeline.length > 0) {\n        return c.pipeline.shift()!(c);\n    } else {\n        return Promise.resolve(c);\n    }\n}\n\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nexport function pipe<T>(context: RequestContext<T>): Promise<T> {\n\n    if (context.pipeline.length < 1) {\n        Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Request pipeline contains no methods!`, LogLevel.Warning);\n    }\n\n    const promise = next(context).then(ctx => returnResult(ctx)).catch((e: Error) => {\n        Logger.error(e);\n        throw e;\n    });\n\n    if (context.isBatched) {\n        // this will block the batch's execute method from returning until the child requets have been resolved\n        context.batch.addResolveBatchDependency(promise);\n    }\n\n    return promise;\n}\n\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nexport function requestPipelineMethod(alwaysRun = false) {\n\n    return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n\n        const method = descriptor.value;\n\n        descriptor.value = function (...args: any[]) {\n\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && hOP(args[0], \"hasResult\") && args[0].hasResult) {\n                Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Skipping request pipeline method ${propertyKey}, existing result in pipeline.`, LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n\n            // apply the tagged method\n            Logger.write(`[${args[0].requestId}] (${(new Date()).getTime()}) Calling request pipeline method ${propertyKey}.`, LogLevel.Verbose);\n\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then((ctx: RequestContext<any>) => next(ctx));\n        };\n    };\n}\n\n/**\n * Contains the methods used within the request pipeline\n */\nexport class PipelineMethods {\n\n    /**\n     * Logs the start of the request\n     */\n    @requestPipelineMethod(true)\n    public static logStart<T>(context: RequestContext<T>): Promise<RequestContext<T>> {\n        return new Promise<RequestContext<T>>(resolve => {\n\n            Logger.log({\n                data: Logger.activeLogLevel === LogLevel.Info ? {} : context,\n                level: LogLevel.Info,\n                message: `[${context.requestId}] (${(new Date()).getTime()}) Beginning ${context.verb} request (${context.requestAbsoluteUrl})`,\n            });\n\n            resolve(context);\n        });\n    }\n\n    /**\n     * Handles caching of the request\n     */\n    @requestPipelineMethod()\n    public static caching<T>(context: RequestContext<T>): Promise<RequestContext<T>> {\n\n        return new Promise<RequestContext<T>>(resolve => {\n\n            // handle caching, if applicable\n            if (context.isCached) {\n\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Caching is enabled for request, checking cache...`, LogLevel.Info);\n\n                let cacheOptions = new CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (context.cachingOptions !== undefined) {\n                    cacheOptions = extend(cacheOptions, context.cachingOptions);\n                }\n\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    let data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any held batch dependency we are resolving from the cache\n                        Logger.log({\n                            data: Logger.activeLogLevel === LogLevel.Info ? {} : data,\n                            level: LogLevel.Info,\n                            message: `[${context.requestId}] (${(new Date()).getTime()}) Value returned from cache.`,\n                        });\n                        if (isFunc(context.batchDependency)) {\n                            context.batchDependency();\n                        }\n                        // handle the case where a parser needs to take special actions with a cached result\n                        if (hOP(context.parser, \"hydrate\")) {\n                            data = context.parser.hydrate(data);\n                        }\n                        return setResult(context, data).then(ctx => resolve(ctx));\n                    }\n                }\n\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Value not found in cache.`, LogLevel.Info);\n\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new CachingParserWrapper(context.parser, cacheOptions);\n            }\n\n            return resolve(context);\n        });\n    }\n\n    /**\n     * Sends the request\n     */\n    @requestPipelineMethod()\n    public static send<T>(context: RequestContext<T>): Promise<RequestContext<T>> {\n\n        return new Promise<RequestContext<T>>((resolve, reject) => {\n            // send or batch the request\n            if (context.isBatched) {\n\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                const p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser, context.requestId);\n\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                if (isFunc(context.batchDependency)) {\n                    context.batchDependency();\n                }\n\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Batching request in batch ${context.batch.batchId}.`, LogLevel.Info);\n\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n\n            } else {\n\n                Logger.write(`[${context.requestId}] (${(new Date()).getTime()}) Sending request.`, LogLevel.Info);\n\n                // we are not part of a batch, so proceed as normal\n                const client = context.clientFactory();\n                const opts = extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(response => context.parser.parse(response))\n                    .then(result => setResult(context, result))\n                    .then(ctx => resolve(ctx))\n                    .catch(e => reject(e));\n            }\n        });\n    }\n\n    /**\n     * Logs the end of the request\n     */\n    @requestPipelineMethod(true)\n    public static logEnd<T>(context: RequestContext<T>): Promise<RequestContext<T>> {\n\n        return new Promise<RequestContext<T>>(resolve => {\n\n            if (context.isBatched) {\n\n                Logger.log({\n                    data: Logger.activeLogLevel === LogLevel.Info ? {} : context,\n                    level: LogLevel.Info,\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) ${context.verb} request will complete in batch ${context.batch.batchId}.`,\n                });\n\n            } else {\n\n                Logger.log({\n                    data: Logger.activeLogLevel === LogLevel.Info ? {} : context,\n                    level: LogLevel.Info,\n                    message: `[${context.requestId}] (${(new Date()).getTime()}) Completing ${context.verb} request.`,\n                });\n            }\n\n            resolve(context);\n        });\n    }\n}\n\nexport function getDefaultPipeline() {\n    return [\n        PipelineMethods.logStart,\n        PipelineMethods.caching,\n        PipelineMethods.send,\n        PipelineMethods.logEnd,\n    ].slice(0);\n}\n","import {\n    combine,\n    RuntimeConfig,\n    FetchOptions,\n    ConfigOptions,\n    mergeOptions,\n    objectDefinedNotNull,\n    isArray,\n} from \"@pnp/common\";\nimport { ODataParser, ODataDefaultParser, JSONParser } from \"./parsers\";\nimport { ICachingOptions } from \"./caching\";\nimport { ODataBatch } from \"./odatabatch\";\nimport {\n    RequestContext,\n    getDefaultPipeline,\n    pipe,\n    PipelineMethod,\n} from \"./pipeline\";\n\nexport abstract class Queryable<GetType> {\n\n    /**\n     * Additional options to be set before sending actual http request\n     */\n    protected _options: ConfigOptions;\n\n    /**\n     * Tracks the query parts of the url\n     */\n    protected _query: Map<string, string>;\n\n    /**\n     * Tracks the url as it is built\n     */\n    protected _url: string;\n\n    /**\n     * Stores the parent url used to create this instance, for recursing back up the tree if needed\n     */\n    protected _parentUrl: string;\n\n    /**\n     * Explicitly tracks if we are using caching for this request\n     */\n    protected _useCaching: boolean;\n\n    /**\n     * Any options that were supplied when caching was enabled\n     */\n    protected _cachingOptions: ICachingOptions | null;\n\n    /**\n     * Flag used to indicate if the object from which this was cloned's _usingCaching flag was true\n     */\n    protected _cloneParentWasCaching: boolean;\n\n    /**\n     * The cache options from the clone parent if it was caching\n     */\n    protected _cloneParentCacheOptions: ICachingOptions | null;\n\n    /**\n     * If a specific request pipeline is set, it will be used\n     */\n    protected _requestPipeline: PipelineMethod<any>[] | null;\n\n    constructor() {\n        this._query = new Map<string, string>();\n        this._options = {};\n        this._url = \"\";\n        this._parentUrl = \"\";\n        this._useCaching = false;\n        this._cachingOptions = null;\n        this._cloneParentWasCaching = false;\n        this._cloneParentCacheOptions = null;\n        this._requestPipeline = null;\n    }\n\n    /**\n     * Gets the full url with query information\n     *\n     */\n    public abstract toUrlAndQuery(): string;\n\n    /**\n    * Gets the currentl url\n    *\n    */\n    public toUrl(): string {\n        return this._url;\n    }\n\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    public concat(pathPart: string): this {\n        this._url += pathPart;\n        return this;\n    }\n\n    /**\n     * Provides access to the query builder for this url\n     *\n     */\n    public get query(): Map<string, string> {\n        return this._query;\n    }\n\n    /**\n     * Sets custom options for current object and all derived objects accessible via chaining\n     * \n     * @param options custom options\n     */\n    public configure(options: ConfigOptions): this {\n        mergeOptions(this._options, options);\n        return this;\n    }\n\n    /**\n     * Configures this instance from the configure options of the supplied instance\n     * \n     * @param o Instance from which options should be taken\n     */\n    public configureFrom(o: Queryable<any>): this {\n        mergeOptions(this._options, o._options);\n        return this;\n    }\n\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    public usingCaching(options?: ICachingOptions): this {\n        if (!RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            if (options !== undefined) {\n                this._cachingOptions = options;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Allows you to set a request specific processing pipeline\n     * \n     * @param pipeline The set of methods, in order, to execute a given request\n     */\n    public withPipeline(pipeline: PipelineMethod<any>[]): this {\n        this._requestPipeline = pipeline.slice(0);\n        return this;\n    }\n\n    protected getCore<T = GetType>(parser: ODataParser<T> = new JSONParser(), options: FetchOptions = {}): Promise<T> {\n        // Fix for #304 - when we clone objects we in some cases then execute a get request\n        // in these cases the caching settings were getting dropped from the request\n        // this tracks if the object from which this was cloned was caching and applies that to an immediate get request\n        // does not affect objects cloned from this as we are using different fields to track the settings so it won't\n        // be triggered\n        if (this._cloneParentWasCaching) {\n            this.usingCaching(this._cloneParentCacheOptions);\n        }\n        return this.reqImpl(\"GET\", options, parser);\n    }\n\n    protected postCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new JSONParser()): Promise<T> {\n        return this.reqImpl(\"POST\", options, parser);\n    }\n\n    protected patchCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new JSONParser()): Promise<T> {\n        return this.reqImpl(\"PATCH\", options, parser);\n    }\n\n    protected deleteCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new JSONParser()): Promise<T> {\n        return this.reqImpl(\"DELETE\", options, parser);\n    }\n\n    protected putCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new JSONParser()): Promise<T> {\n        return this.reqImpl(\"PUT\", options, parser);\n    }\n\n    protected reqImpl<T>(method: string, options: FetchOptions = {}, parser: ODataParser<T>): Promise<T> {\n        return this.getRequestPipeline<T>(method, options, parser)\n            .then(pipeline => this.toRequestContext<T>(method, options, parser, pipeline))\n            .then(context => pipe(context));\n    }\n\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    protected append(pathPart: string) {\n        this._url = combine(this._url, pathPart);\n    }\n\n    /**\n     * Gets the parent url used when creating this instance\n     *\n     */\n    protected get parentUrl(): string {\n        return this._parentUrl;\n    }\n\n    /**\n     * Extends this queryable from the provided parent \n     * \n     * @param parent Parent queryable from which we will derive a base url\n     * @param path Additional path\n     */\n    protected extend(parent: Queryable<any>, path?: string) {\n        this._parentUrl = parent._url;\n        this._url = combine(this._parentUrl, path || \"\");\n        this.configureFrom(parent);\n    }\n\n    /**\n     * Configures a cloned object from this instance\n     * \n     * @param clone\n     */\n    protected _clone(clone: Queryable<any>, _0: any): any {\n\n        clone.configureFrom(this);\n\n        if (this._useCaching) {\n            clone._cloneParentWasCaching = true;\n            clone._cloneParentCacheOptions = this._cachingOptions;\n        }\n\n        return clone;\n    }\n\n    /**\n     * Handles getting the request pipeline to run for a given request\n     */\n    // @ts-ignore\n    // justified because we want to show that all these arguments are passed to the method so folks inheriting and potentially overriding\n    // clearly see how the method is invoked inside the class\n    protected getRequestPipeline<T>(method: string, options: FetchOptions = {}, parser: ODataParser<T>): Promise<PipelineMethod<T>[]> {\n\n        return new Promise(resolve => {\n            if (objectDefinedNotNull(this._requestPipeline) && isArray(this._requestPipeline)) {\n                resolve(this._requestPipeline);\n            } else {\n                resolve(getDefaultPipeline());\n            }\n        });\n    }\n\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    protected abstract toRequestContext<T>(\n        verb: string,\n        options: FetchOptions,\n        parser: ODataParser<T>,\n        pipeline: Array<(c: RequestContext<T>) => Promise<RequestContext<T>>>): Promise<RequestContext<T>>;\n}\n\nexport abstract class ODataQueryable<BatchType extends ODataBatch, GetType = any> extends Queryable<GetType> {\n\n    /**\n     * Tracks the batch of which this query may be part\n     */\n    protected _batch: BatchType | null;\n\n    /**\n     * Allows us to properly block batch execution until everything is loaded\n     */\n    protected _batchDependency: () => void | null;\n\n    constructor() {\n        super();\n        this._batch = null;\n        this._batchDependency = null;\n    }\n\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    public inBatch(batch: BatchType): this {\n\n        if (this.batch !== null) {\n            throw Error(\"This query is already part of a batch.\");\n        }\n\n        if (objectDefinedNotNull(batch)) {\n            this._batch = batch;\n        }\n\n        return this;\n    }\n\n    /**\n     * Gets the currentl url\n     *\n     */\n    public toUrl(): string {\n        return this._url;\n    }\n\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    public get<T = GetType>(parser: ODataParser<T> = new ODataDefaultParser(), options: FetchOptions = {}): Promise<T> {\n        return this.getCore(parser, options);\n    }\n\n    protected getCore<T = GetType>(parser: ODataParser<T> = new ODataDefaultParser(), options: FetchOptions = {}): Promise<T> {\n        return super.getCore<T>(parser, options);\n    }\n\n    protected postCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new ODataDefaultParser()): Promise<T> {\n        return super.postCore<T>(options, parser);\n    }\n\n    protected patchCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new ODataDefaultParser()): Promise<T> {\n        return super.patchCore<T>(options, parser);\n    }\n\n    protected deleteCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new ODataDefaultParser()): Promise<T> {\n        return super.deleteCore<T>(options, parser);\n    }\n\n    protected putCore<T = any>(options: FetchOptions = {}, parser: ODataParser<T> = new ODataDefaultParser()): Promise<T> {\n        return super.putCore<T>(options, parser);\n    }\n\n    protected reqImpl<T>(method: string, options: FetchOptions = {}, parser: ODataParser<T>): Promise<T> {\n\n        if (this.hasBatch) {\n            this._batchDependency = this.addBatchDependency();\n        }\n\n        return super.reqImpl(method, options, parser);\n    }\n\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n    */\n    protected addBatchDependency(): () => void {\n        if (this._batch !== null) {\n            return this._batch.addDependency();\n        }\n\n        return () => null;\n    }\n\n    /**\n     * Indicates if the current query has a batch associated\n     *\n     */\n    protected get hasBatch(): boolean {\n        return objectDefinedNotNull(this._batch);\n    }\n\n    /**\n     * The batch currently associated with this query or null\n     *\n     */\n    protected get batch(): BatchType | null {\n        return this.hasBatch ? this._batch : null;\n    }\n\n    /**\n     * Configures a cloned object from this instance\n     * \n     * @param clone \n     */\n    protected _clone(clone: ODataQueryable<any, any>, cloneSettings: { includeBatch: boolean }): any {\n\n        clone = super._clone(clone, cloneSettings);\n\n        if (cloneSettings.includeBatch) {\n            clone = clone.inBatch(this._batch);\n        }\n\n        return clone;\n    }\n}\n","import { FetchOptions, getGUID } from \"@pnp/common\";\nimport { ODataParser } from \"./parsers\";\n\nexport interface ODataBatchRequestInfo {\n    url: string;\n    method: string;\n    options: FetchOptions;\n    parser: ODataParser<any>;\n    resolve: ((d: any) => void) | null;\n    reject: ((error: any) => void) | null;\n    id: string;\n}\n\nexport abstract class ODataBatch {\n\n    protected _deps: Promise<void>[];\n    protected _reqs: ODataBatchRequestInfo[];\n    protected _rDeps: Promise<void>[];\n\n    constructor(private _batchId = getGUID()) {\n        this._reqs = [];\n        this._deps = [];\n        this._rDeps = [];\n    }\n\n    public get batchId(): string {\n        return this._batchId;\n    }\n\n    /**\n     * The requests contained in this batch\n     */\n    protected get requests(): ODataBatchRequestInfo[] {\n        return this._reqs;\n    }\n\n    /**\n     * \n     * @param url Request url\n     * @param method Request method (GET, POST, etc)\n     * @param options Any request options\n     * @param parser The parser used to handle the eventual return from the query\n     * @param id An identifier used to track a request within a batch\n     */\n    public add<T>(url: string, method: string, options: FetchOptions, parser: ODataParser<T>, id: string): Promise<T> {\n\n        const info: ODataBatchRequestInfo = {\n            id,\n            method: method.toUpperCase(),\n            options,\n            parser,\n            reject: null,\n            resolve: null,\n            url,\n        };\n\n        const p = new Promise<T>((resolve, reject) => {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n\n        this._reqs.push(info);\n\n        return p;\n    }\n\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    public addDependency(): () => void {\n\n        let resolver: () => void = () => void (0);\n\n        this._deps.push(new Promise<void>((resolve) => {\n            resolver = resolve;\n        }));\n\n        return resolver;\n    }\n\n    /**\n     * The batch's execute method will not resolve util any promises added here resolve\n     * \n     * @param p The dependent promise\n     */\n    public addResolveBatchDependency(p: Promise<any>): void {\n        this._rDeps.push(p);\n    }\n\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    public execute(): Promise<void> {\n\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added during the first set resolving\n        return Promise.all(this._deps)\n            .then(() => Promise.all(this._deps))\n            .then(() => this.executeImpl())\n            .then(() => Promise.all(this._rDeps))\n            .then(() => void (0));\n    }\n\n    protected abstract executeImpl(): Promise<void>;\n}\n"],"names":["dateAdd","RuntimeConfig","PnPClientStorage","tslib_1.__extends","hOP","isFunc","Logger","extend","tslib_1.__decorate","mergeOptions","combine","objectDefinedNotNull","isArray","getGUID"],"mappings":"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"}