import * as React from 'react';
import * as ReactDom from 'react-dom';
import { PropertyPaneFieldType } from '@microsoft/sp-webpart-base';
import PropertyPanePropertyEditorHost from './PropertyPanePropertyEditorHost';
var PropertyPanePropertyEditorBuilder = /** @class */ (function () {
    function PropertyPanePropertyEditorBuilder(_properties) {
        //Properties defined by IPropertyPaneField
        this.type = PropertyPaneFieldType.Custom;
        this.properties = {
            key: _properties.key,
            webpart: _properties.webpart,
            onRender: this.onRender.bind(this)
        };
    }
    PropertyPanePropertyEditorBuilder.prototype.render = function () {
        if (!this.elem) {
            return;
        }
        this.onRender(this.elem);
    };
    PropertyPanePropertyEditorBuilder.prototype.onRender = function (elem, ctx, changeCallback) {
        if (!this.elem) {
            this.elem = elem;
        }
        var element = React.createElement(PropertyPanePropertyEditorHost, {
            webpart: this.properties.webpart
        });
        ReactDom.render(element, elem);
    };
    return PropertyPanePropertyEditorBuilder;
}());
export function PropertyPanePropertyEditor(properties) {
    return new PropertyPanePropertyEditorBuilder(properties);
}
//# sourceMappingURL=PropertyPanePropertyEditor.js.map