var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import * as React from 'react';
import { FilePicker } from './filePickerControls';
import styles from './PropertyFieldFilePickerHost.module.scss';
import { GeneralHelper } from '../../helpers/GeneralHelper';
import * as telemetry from '../../common/telemetry';
/**
* Renders the control for PropertyFieldFilePicker component
*/
var PropertyFieldFilePickerHost = /** @class */ (function (_super) {
    __extends(PropertyFieldFilePickerHost, _super);
    function PropertyFieldFilePickerHost(props) {
        var _this = _super.call(this, props) || this;
        _this.handleFileSave = function (filePickerResult) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.props.onSave(filePickerResult);
                this.props.properties[this.props.targetProperty] = filePickerResult;
                this.props.onPropertyChange(this.props.targetProperty, this.props.filePickerResult, filePickerResult);
                if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {
                    this.props.onChange(this.props.targetProperty, filePickerResult);
                }
                return [2 /*return*/];
            });
        }); };
        _this.handleFileChange = function (filePickerResult) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                this.props.onChanged(filePickerResult);
                if (typeof this.props.onChange !== 'undefined' && this.props.onChange !== null) {
                    this.props.onChange(this.props.targetProperty, filePickerResult);
                }
                return [2 /*return*/];
            });
        }); };
        telemetry.track('PropertyFieldFilePicker', {
            disabled: props.disabled
        });
        return _this;
    }
    PropertyFieldFilePickerHost.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", null,
            this.props.filePickerResult && this.props.filePickerResult.fileAbsoluteUrl && (React.createElement("div", { className: styles.filePreview },
                GeneralHelper.isImage(this.props.filePickerResult.fileName) &&
                    React.createElement("img", { className: styles.filePreviewImage, src: this.props.filePickerResult.fileAbsoluteUrl, alt: this.props.filePickerResult.fileName }),
                React.createElement("div", null, this.props.filePickerResult.fileName))),
            React.createElement(FilePicker, { required: this.props.required, disabled: this.props.disabled, bingAPIKey: this.props.bingAPIKey, accepts: this.props.accepts ? this.props.accepts : [], buttonIcon: this.props.buttonIcon ? this.props.buttonIcon : "FileImage", onSave: function (filePickerResult) { _this.handleFileSave(filePickerResult); }, onChanged: function (filePickerResult) { _this.handleFileChange(filePickerResult); }, context: this.props.context, filePickerResult: this.props.filePickerResult, buttonClassName: this.props.buttonClassName, buttonLabel: this.props.buttonLabel, label: this.props.label, key: this.props.key, itemsCountQueryLimit: this.props.itemsCountQueryLimit !== undefined ? this.props.itemsCountQueryLimit : 100, hideWebSearchTab: this.props.hideWebSearchTab !== undefined ? this.props.hideWebSearchTab : true, hideRecentTab: this.props.hideRecentTab !== undefined ? this.props.hideRecentTab : false, hideSiteFilesTab: this.props.hideSiteFilesTab !== undefined ? this.props.hideSiteFilesTab : false, hideLocalUploadTab: this.props.hideLocalUploadTab !== undefined ? this.props.hideLocalUploadTab : false, hideLinkUploadTab: this.props.hideLinkUploadTab !== undefined ? this.props.hideLinkUploadTab : false, hideOneDriveTab: this.props.hideOneDriveTab !== undefined ? this.props.hideOneDriveTab : false, hideOrganisationalAssetTab: this.props.hideOrganisationalAssetTab !== undefined ? this.props.hideOrganisationalAssetTab : false, hideStockImages: this.props.hideStockImages !== undefined ? this.props.hideStockImages : false, panelClassName: this.props.panelClassName, storeLastActiveTab: this.props.storeLastActiveTab })));
    };
    return PropertyFieldFilePickerHost;
}(React.Component));
export default PropertyFieldFilePickerHost;
//# sourceMappingURL=PropertyFieldFilePickerHost.js.map