var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { PropertyFieldTermPickerBuilder } from "./PropertyFieldTermPicker";
import PnPTermStorePickerService from "../../services/PnPTermStorePickerService";
/**
 * Helper method to create a Enterprise Term Picker on the PropertyPane.
 * @param targetProperty - Target property the Term Picker is associated to.
 * @param properties - Strongly typed Term Picker Picker properties.
 */
export function PropertyFieldEnterpriseTermPicker(targetProperty, properties) {
    // Calls the PropertyFieldEnterpriseTermPicker builder object
    // This object will simulate a PropertyFieldCustom to manage its rendering process
    var termPickerInternalProps = properties;
    return new PropertyFieldTermPickerBuilder(targetProperty, __assign({}, termPickerInternalProps, { targetProperty: targetProperty, onRender: null, onDispose: null, termService: new PnPTermStorePickerService(properties, properties.context) }));
}
//# sourceMappingURL=PropertyFieldEnterpriseTermPicker.js.map