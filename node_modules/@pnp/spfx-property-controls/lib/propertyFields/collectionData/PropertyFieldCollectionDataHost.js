var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import * as telemetry from '../../common/telemetry';
import { DefaultButton } from 'office-ui-fabric-react/lib/components/Button';
import { Panel, PanelType } from 'office-ui-fabric-react/lib/components/Panel';
import { Label } from 'office-ui-fabric-react/lib/components/Label';
import { CollectionDataViewer } from './collectionDataViewer';
import FieldErrorMessage from '../errorMessage/FieldErrorMessage';
import * as strings from 'PropertyControlStrings';
var PropertyFieldCollectionDataHost = /** @class */ (function (_super) {
    __extends(PropertyFieldCollectionDataHost, _super);
    function PropertyFieldCollectionDataHost(props) {
        var _this = _super.call(this, props) || this;
        /**
         * Open the panel
         */
        _this.openPanel = function () {
            _this.setState({
                panelOpen: true
            });
        };
        /**
         * Closes the panel
         */
        _this.closePanel = function () {
            _this.setState({
                panelOpen: false
            });
        };
        /**
         * On save action
         */
        _this.onSave = function (items) {
            _this.props.onChanged(items);
            _this.setState({
                panelOpen: false
            });
        };
        _this.state = {
            panelOpen: false
        };
        telemetry.track('PropertyFieldCollectionData', {});
        return _this;
    }
    PropertyFieldCollectionDataHost.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement(Label, null, this.props.label),
            React.createElement(DefaultButton, { text: this.props.manageBtnLabel, onClick: this.openPanel, disabled: this.props.fields.length === 0 || this.props.disabled }),
            this.props.fields.length === 0 && React.createElement(FieldErrorMessage, { errorMessage: strings.CollectionDataEmptyFields }),
            React.createElement(Panel, { isOpen: this.state.panelOpen, onDismiss: this.closePanel, type: PanelType.large, headerText: this.props.panelHeader, onOuterClick: function () { }, className: "PropertyFieldCollectionData__panel " + (this.props.panelClassName || "") },
                this.props.panelDescription && (React.createElement("p", { className: "PropertyFieldCollectionData__panel__description" }, this.props.panelDescription)),
                React.createElement(CollectionDataViewer, __assign({}, this.props, { fOnSave: this.onSave, fOnClose: this.closePanel })))));
    };
    return PropertyFieldCollectionDataHost;
}(React.Component));
export { PropertyFieldCollectionDataHost };
//# sourceMappingURL=PropertyFieldCollectionDataHost.js.map