var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from "react";
import { TextField } from "office-ui-fabric-react/lib/TextField";
import { Guid } from '@microsoft/sp-core-library';
import { GeneralHelper } from "../../helpers/GeneralHelper";
import * as strings from 'PropertyControlStrings';
import * as telemetry from '../../common/telemetry';
var PropertyFieldGuidHost = /** @class */ (function (_super) {
    __extends(PropertyFieldGuidHost, _super);
    function PropertyFieldGuidHost(props) {
        var _this = _super.call(this, props) || this;
        _this._validateGuid = function (value) {
            return GeneralHelper.isDefined(value) &&
                GeneralHelper.isDefined(Guid.tryParse(value)) &&
                Guid.isValid(value)
                ? ''
                : GeneralHelper.isDefined(_this.props.errorMessage)
                    ? _this.props.errorMessage
                    : strings.IncorrectGuidValidationMessage;
        };
        _this._onChange = function (event, value) {
            _this.setState({ value: value });
            if (GeneralHelper.isDefined(value)) {
                if (GeneralHelper.isDefined(Guid.tryParse(value)) && Guid.isValid(value)) {
                    _this.props.onChanged(Guid.tryParse(value)["_guid"]);
                }
            }
            else {
                _this.props.onChanged(undefined);
            }
        };
        _this.state = {
            value: _this.props.value
        };
        telemetry.track('PropertyFieldButton', {});
        return _this;
    }
    ///
    PropertyFieldGuidHost.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (prevProps.value !== this.props.value) {
            this.setState({ value: this.props.value });
        }
    };
    PropertyFieldGuidHost.prototype.render = function () {
        return (React.createElement("div", null,
            React.createElement(TextField, { label: this.props.label ? this.props.label : null, value: this.state.value, onGetErrorMessage: this._validateGuid, onChange: this._onChange })));
    };
    return PropertyFieldGuidHost;
}(React.Component));
export default PropertyFieldGuidHost;
//# sourceMappingURL=PropertyFieldGuidHost.js.map