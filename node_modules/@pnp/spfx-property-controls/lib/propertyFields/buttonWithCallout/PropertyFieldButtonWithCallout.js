var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import * as ReactDOM from 'react-dom';
import { PropertyPaneFieldType } from '@microsoft/sp-webpart-base';
import PropertyFieldButtonHost from './PropertyFieldButtonWithCalloutHost';
import { ButtonType } from 'office-ui-fabric-react/lib/components/Button';
import omit from 'lodash/omit';
/**
 * Represents a PropertyFieldButtonWithCallout object
 */
var PropertyFieldButtonWithCalloutBuilder = /** @class */ (function () {
    function PropertyFieldButtonWithCalloutBuilder(_targetProperty, _properties) {
        this.type = PropertyPaneFieldType.Custom;
        this.targetProperty = _targetProperty;
        this.properties = _properties;
        this.properties.onRender = this._render.bind(this);
        this.properties.onDispose = this._dispose.bind(this);
    }
    PropertyFieldButtonWithCalloutBuilder.prototype._render = function (elem, context, changeCallback) {
        var props = this.properties;
        //
        // PropertyPaneButtonType is not assignable to ButtonType
        //
        var buttonTypeString = ButtonType[this.properties.buttonType];
        var buttonType = ButtonType[buttonTypeString];
        var element = React.createElement(PropertyFieldButtonHost, __assign({}, omit(props, ['icon', 'buttonType']), { buttonType: buttonType }));
        ReactDOM.render(element, elem);
    };
    PropertyFieldButtonWithCalloutBuilder.prototype._dispose = function (elem) {
        ReactDOM.unmountComponentAtNode(elem);
    };
    return PropertyFieldButtonWithCalloutBuilder;
}());
/**
 * Helper method to create a Button with Callout component on the PropertyPane.
 * @param targetProperty - Target property the Button with Callout component is associated to.
 * @param properties - Strongly typed Button with Callout component properties.
 */
export function PropertyFieldButtonWithCallout(targetProperty, properties) {
    return new PropertyFieldButtonWithCalloutBuilder(targetProperty, __assign({}, properties, { onRender: null, onDispose: null }));
}
//# sourceMappingURL=PropertyFieldButtonWithCallout.js.map