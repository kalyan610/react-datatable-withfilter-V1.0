import { __awaiter, __generator } from "tslib";
import { combine } from "@pnp/common";
import { _List, List } from "../lists/types";
import { SiteScripts } from "./types";
import "../folders/list";
import { Web } from "../webs/types";
import { extractWebUrl } from "../utils/extractweburl";
_List.prototype.getSiteScript = function () {
    return __awaiter(this, void 0, void 0, function () {
        var rootFolder, web, absoluteListUrl;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, this.clone(List).rootFolder.get()];
                case 1:
                    rootFolder = _a.sent();
                    return [4 /*yield*/, Web(extractWebUrl(this.toUrl())).select("Url").get()];
                case 2:
                    web = _a.sent();
                    absoluteListUrl = combine(web.Url, "Lists", rootFolder.Name);
                    return [2 /*return*/, SiteScripts(this, "").getSiteScriptFromList(absoluteListUrl)];
            }
        });
    });
};
//# sourceMappingURL=list.js.map