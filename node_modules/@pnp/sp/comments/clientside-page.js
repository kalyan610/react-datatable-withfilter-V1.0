import { __awaiter } from "tslib";
import { _ClientsidePage } from "../clientside-pages/types.js";
import { Comment } from "./types.js";
import { spODataEntity } from "../odata.js";
import { tag } from "../telemetry.js";
import { Item } from "../items/index.js";
import { spPost } from "../operations.js";
import { SharePointQueryable } from "../sharepointqueryable.js";
_ClientsidePage.prototype.addComment = function (info) {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem();
        return item.comments.add(info);
    });
};
_ClientsidePage.prototype.getCommentById = function (id) {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem();
        return item.comments.getById(id).usingParser(spODataEntity(Comment))();
    });
};
_ClientsidePage.prototype.clearComments = function () {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem();
        return item.comments.clear();
    });
};
_ClientsidePage.prototype.getComments = function () {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem();
        return tag.configure(item, "").comments();
    });
};
_ClientsidePage.prototype.like = function () {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem("ID");
        return spPost(SharePointQueryable(item, "like"));
    });
};
_ClientsidePage.prototype.unlike = function () {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem("ID");
        return spPost(SharePointQueryable(item, "unlike"));
    });
};
_ClientsidePage.prototype.getLikedByInformation = function () {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem("ID");
        return item.getLikedByInformation();
    });
};
_ClientsidePage.prototype.enableComments = function () {
    return __awaiter(this, void 0, void 0, function* () {
        tag.configure(this, "csp.enableComments");
        return this.setCommentsOn(true).then(r => {
            this.commentsDisabled = false;
            return r;
        });
    });
};
_ClientsidePage.prototype.disableComments = function () {
    return __awaiter(this, void 0, void 0, function* () {
        tag.configure(this, "csp.disableComments");
        return this.setCommentsOn(false).then(r => {
            this.commentsDisabled = true;
            return r;
        });
    });
};
_ClientsidePage.prototype.setCommentsOn = function (on) {
    return __awaiter(this, void 0, void 0, function* () {
        const item = yield this.getItem();
        return Item(item, `SetCommentsDisabled(${!on})`).update({});
    });
};
//# sourceMappingURL=clientside-page.js.map