import { __awaiter } from "tslib";
import { addProp } from "@pnp/odata";
import { _Web, Web } from "../webs/types.js";
import { SiteGroups } from "./types.js";
import { spPost } from "../operations.js";
import { escapeQueryStrValue } from "../utils/escapeQueryStrValue.js";
import "../security/web.js";
addProp(_Web, "siteGroups", SiteGroups);
addProp(_Web, "associatedOwnerGroup", SiteGroups, "associatedownergroup");
addProp(_Web, "associatedMemberGroup", SiteGroups, "associatedmembergroup");
addProp(_Web, "associatedVisitorGroup", SiteGroups, "associatedvisitorgroup");
_Web.prototype.createDefaultAssociatedGroups = function (groupNameSeed, siteOwner, copyRoleAssignments = false, clearSubscopes = true, siteOwner2) {
    return __awaiter(this, void 0, void 0, function* () {
        yield this.breakRoleInheritance(copyRoleAssignments, clearSubscopes);
        const q = this.clone(Web, "createDefaultAssociatedGroups(userLogin=@u,userLogin2=@v,groupNameSeed=@s)");
        q.query.set("@u", `'${escapeQueryStrValue(siteOwner || "")}'`);
        q.query.set("@v", `'${escapeQueryStrValue(siteOwner2 || "")}'`);
        q.query.set("@s", `'${escapeQueryStrValue(groupNameSeed || "")}'`);
        return spPost(q);
    });
};
//# sourceMappingURL=web.js.map