import { SPRest } from "../rest.js";
import { _Search } from "./query.js";
import { Search } from "./query.js";
import { Suggest } from "./suggest.js";
export * from "./types.js";
export { SearchQueryBuilder, SearchResults, Search, } from "./query.js";
export { Suggest, } from "./suggest.js";
SPRest.prototype.search = function (query) {
    return this.childConfigHook(({ options, baseUrl, runtime }) => {
        return Search(baseUrl, options, runtime)(query);
    });
};
SPRest.prototype.searchWithCaching = function (query, cacheOptions) {
    return this.childConfigHook(({ options, baseUrl, runtime }) => {
        return (new _Search(baseUrl)).configure(options).setRuntime(runtime).usingCaching(cacheOptions).execute(query);
    });
};
SPRest.prototype.searchSuggest = function (query) {
    return this.childConfigHook(({ options, baseUrl, runtime }) => {
        return Suggest(baseUrl, options, runtime)(typeof query === "string" ? { querytext: query } : query);
    });
};
//# sourceMappingURL=index.js.map