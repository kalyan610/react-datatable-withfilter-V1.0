"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var utils_1 = require("./utils");
/**
 * This hook returns context selected value by selectors.
 * It will only accept context created by `createContext`.
 * It will trigger re-render if only the selected value is referencially changed.
 */
exports.useContextSelectors = function (context, selectors) {
    var _a = React.useContext(context), subscribe = _a.subscribe, value = _a.value;
    var _b = React.useReducer(function (c) { return c + 1; }, 0), forceUpdate = _b[1];
    var ref = React.useRef();
    var selected = {};
    Object.keys(selectors).forEach(function (key) {
        selected[key] = selectors[key](value);
    });
    utils_1.useIsomorphicLayoutEffect(function () {
        ref.current = {
            selectors: selectors,
            value: value,
            selected: selected,
        };
    });
    utils_1.useIsomorphicLayoutEffect(function () {
        var callback = function (nextState) {
            try {
                var reference_1 = ref.current;
                if (reference_1.value === nextState ||
                    Object.keys(reference_1.selected).every(function (key) {
                        return Object.is(reference_1.selected[key], reference_1.selectors[key](nextState));
                    })) {
                    // not changed
                    return;
                }
            }
            catch (e) {
                // ignored (stale props or some other reason)
            }
            forceUpdate();
        };
        return subscribe(callback);
    }, [subscribe]);
    return selected;
};
