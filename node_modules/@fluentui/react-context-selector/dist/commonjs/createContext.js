"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.createContext = void 0;

var React = _interopRequireWildcard(require("react"));

// Stops React Context propagation
// https://github.com/facebook/react/blob/95bd7aad7daa80c381faa3215c80b0906ab5ead5/packages/react-reconciler/src/ReactFiberBeginWork.js#L2656
var calculateChangedBits = function calculateChangedBits() {
  return 0;
};

var createProvider = function createProvider(Original) {
  var Provider = function Provider(props) {
    var listeners = React.useRef([]); // We call listeners in render intentionally. Listeners are not technically pure, but
    // otherwise we can't get benefits from concurrent mode.
    //
    // We make sure to work with double or more invocation of listeners.

    listeners.current.forEach(function (listener) {
      return listener(props.value);
    }); // Disables updates propogation for React Context as `value` is always shallow equal

    var subscribe = React.useCallback(function (listener) {
      listeners.current.push(listener);

      var unsubscribe = function unsubscribe() {
        var index = listeners.current.indexOf(listener);
        listeners.current.splice(index, 1);
      };

      return unsubscribe;
    }, []);
    return /*#__PURE__*/React.createElement(Original, {
      value: {
        subscribe: subscribe,
        value: props.value
      }
    }, props.children);
  };
  /* istanbul ignore else */


  if (process.env.NODE_ENV !== 'production') {
    Provider.displayName = 'ContextSelector.Provider';
  }

  return Provider;
};

var createContext = function createContext(defaultValue, options) {
  if (options === void 0) {
    options = {};
  }

  var _options = options,
      _options$strict = _options.strict,
      strict = _options$strict === void 0 ? true : _options$strict;
  var context = /*#__PURE__*/React.createContext({
    get subscribe() {
      if (strict) {
        /* istanbul ignore next */
        throw new Error(process.env.NODE_ENV === 'production' ? '' : "Please use <Provider /> component from \"@fluentui/react-context-selector\"");
      }
      /* istanbul ignore next */


      return function () {
        return function () {};
      };
    },

    value: defaultValue
  }, calculateChangedBits);
  context.Provider = createProvider(context.Provider); // We don't support Consumer API

  delete context.Consumer;
  return context;
};

exports.createContext = createContext;
//# sourceMappingURL=createContext.js.map
