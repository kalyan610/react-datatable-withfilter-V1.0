{"version":3,"sources":["behaviors/Toolbar/menuAsToolbarBehavior.ts"],"names":["FocusZoneDirection","menuItemAsToolbarButtonBehavior","menuAsToolbarBehavior","attributes","root","role","focusZone","props","shouldFocusInnerElementWhenReceivedFocus","direction","bidirectionalDomOrder","childBehaviors","item"],"mappings":"AACA,SAASA,kBAAT,QAAmC,uBAAnC;AACA,SAASC,+BAAT,QAAgD,mCAAhD;AAEA;;;;;;;;;;AASA,OAAO,IAAMC,qBAAoC,GAAG,SAAvCA,qBAAuC;AAAA,SAAO;AACzDC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AADF;AADI,KAD6C;AAMzDC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,wCAAwC,EAAE,IADrC;AAELC,QAAAA,SAAS,EAAET,kBAAkB,CAACU;AAFzB;AADE,KAN8C;AAYzDC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEX;AADQ;AAZyC,GAAP;AAAA,CAA7C","sourcesContent":["import { Accessibility } from '../../types';\nimport { FocusZoneDirection } from '../../focusZone/types';\nimport { menuItemAsToolbarButtonBehavior } from './menuItemAsToolbarButtonBehavior';\n\n/**\n * @description\n * Implements ARIA Toolbar design pattern.\n * Child item components need to have menuItemAsToolbarButtonBehavior assigned.\n * @specification\n * Adds role 'toolbar' to 'root' slot.\n * Provides arrow key navigation in bidirectionalDomOrder direction.\n * When component's container element receives focus, focus will be set to the default focusable child element of the component.\n */\nexport const menuAsToolbarBehavior: Accessibility = () => ({\n  attributes: {\n    root: {\n      role: 'toolbar',\n    },\n  },\n  focusZone: {\n    props: {\n      shouldFocusInnerElementWhenReceivedFocus: true,\n      direction: FocusZoneDirection.bidirectionalDomOrder,\n    },\n  },\n  childBehaviors: {\n    item: menuItemAsToolbarButtonBehavior,\n  },\n});\n"],"file":"menuAsToolbarBehavior.js"}