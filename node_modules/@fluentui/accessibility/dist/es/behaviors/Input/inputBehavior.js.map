{"version":3,"sources":["behaviors/Input/inputBehavior.ts"],"names":["keyboardKey","inputBehavior","props","attributes","root","disabled","required","error","keyActions","input","clear","keyCombinations","keyCode","Escape"],"mappings":"AACA,SAASA,WAAT,QAA4B,wBAA5B;AAEA;;;;;;AAKA,OAAO,IAAMC,aAAgD,GAAG,SAAnDA,aAAmD,CAAAC,KAAK;AAAA,SAAK;AACxEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI;AACF,yBAAiBF,KAAK,CAACG;AADrB,SAEEH,KAAK,CAACI,QAAN,IAAkB;AAAE,yBAAiB;AAAnB,OAFpB,EAGEJ,KAAK,CAACK,KAAN,IAAe;AAAE,wBAAgB;AAAlB,OAHjB;AADM,KAD4D;AAQxEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEZ,WAAW,CAACa;AAAvB,WAAD;AADZ;AADF;AADG;AAR4D,GAAL;AAAA,CAA9D","sourcesContent":["import { Accessibility } from '../../types';\nimport { keyboardKey } from '@fluentui/keyboard-key';\n\n/**\n * @specification\n * Adds attribute 'aria-disabled=true' based on the property 'disabled'. This can be overriden by providing 'aria-disabled' property directly to the component.\n * Triggers 'clear' action with 'Escape' on 'input'.\n */\nexport const inputBehavior: Accessibility<InputBehaviorProps> = props => ({\n  attributes: {\n    root: {\n      'aria-disabled': props.disabled,\n      ...(props.required && { 'aria-required': true }),\n      ...(props.error && { 'aria-invalid': true }),\n    },\n  },\n  keyActions: {\n    input: {\n      clear: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type InputBehaviorProps = {\n  disabled?: boolean;\n  required?: boolean;\n  error?: boolean;\n};\n"],"file":"inputBehavior.js"}