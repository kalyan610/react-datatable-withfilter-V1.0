{"version":3,"sources":["behaviors/Chat/chatMessageBehavior.ts"],"names":["chatMessageBehavior","attributes","root","IS_FOCUSABLE_ATTRIBUTE","tabIndex","focusZone","props","handleTabKey","FocusZoneTabbableElements","all","isCircularNavigation","direction","FocusZoneDirection","vertical","pagingSupportDisabled","keyActions","preventDefault","keyCombinations","keyCode","keyboardKey","ArrowUp","ArrowDown","focus","Escape"],"mappings":";;;;;AAAA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;AAaO,IAAMA,mBAA4D,GAAG,SAA/DA,mBAA+D;AAAA;;AAAA,SAAO;AACjFC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,qBACDC,kCADC,IACwB,IADxB,QAEFC,QAFE,GAEQ,CAAC,CAFT;AADM,KADqE;AAOjFC,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EAAEC,iCAA0BC,GADnC;AAELC,QAAAA,oBAAoB,EAAE,IAFjB;AAGLC,QAAAA,SAAS,EAAEC,0BAAmBC,QAHzB;AAILC,QAAAA,qBAAqB,EAAE;AAJlB;AADE,KAPsE;AAejFC,IAAAA,UAAU,EAAE;AACVb,MAAAA,IAAI,EAAE;AACJ;AACAc,QAAAA,cAAc,EAAE;AACdC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,yBAAYC;AAAvB,WAAD,EAAmC;AAAEF,YAAAA,OAAO,EAAEC,yBAAYE;AAAvB,WAAnC;AADH,SAFZ;AAKJC,QAAAA,KAAK,EAAE;AACLL,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC,yBAAYI;AAAvB,WAAD;AADZ;AALH;AADI;AAfqE,GAAP;AAAA,CAArE","sourcesContent":["import { keyboardKey } from '@fluentui/keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility } from '../../types';\nimport { FocusZoneTabbableElements, FocusZoneDirection } from '../../focusZone/types';\n\n/**\n * @description\n * Sets the message to be a focusable element.\n * Adds a vertical circular focus zone navigation where a user navigates using a Tab key.\n * Adds a key action which prevents up and down arrow keys from navigating in FocusZone, we only want a Tab key to navigate.\n * Adds an escape key action which focuses the chat message, i.e., moves key handling from inside a message back to the chat list.\n *\n * @specification\n * Provides arrow key navigation in vertical direction.\n * Keyboard navigation is circular.\n * Focus is moved within the focusable children of the component using TAB key.\n * Does not handle PageDown and PageUp.\n */\nexport const chatMessageBehavior: Accessibility<ChatMessageBehaviorProps> = () => ({\n  attributes: {\n    root: {\n      [IS_FOCUSABLE_ATTRIBUTE]: true,\n      tabIndex: -1,\n    },\n  },\n  focusZone: {\n    props: {\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      direction: FocusZoneDirection.vertical,\n      pagingSupportDisabled: true,\n    },\n  },\n  keyActions: {\n    root: {\n      // prevents default FocusZone behavior, in this case, prevents using arrow keys as navigation (we only want a Tab key to navigate)\n      preventDefault: {\n        keyCombinations: [{ keyCode: keyboardKey.ArrowUp }, { keyCode: keyboardKey.ArrowDown }],\n      },\n      focus: {\n        keyCombinations: [{ keyCode: keyboardKey.Escape }],\n      },\n    },\n  },\n});\n\nexport type ChatMessageBehaviorProps = never;\n"],"file":"chatMessageBehavior.js"}