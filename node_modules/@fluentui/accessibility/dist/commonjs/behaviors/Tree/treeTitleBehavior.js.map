{"version":3,"sources":["behaviors/Tree/treeTitleBehavior.ts"],"names":["treeTitleBehavior","props","definition","attributes","root","hasSubtree","tabIndex","IS_FOCUSABLE_ATTRIBUTE","role","treeSize","index","level","selectable","selected","undefined","keyActions","performClick","keyCombinations","keyCode","SpacebarKey","process","env","NODE_ENV"],"mappings":";;;;;AAAA;;AAEA;;AAGA;;;;;;;;;;;;AAYO,IAAMA,iBAAwD,GAAG,SAA3DA,iBAA2D,CAAAC,KAAK,EAAI;AAAA;;AAC/E,MAAMC,UAAU,GAAG;AACjBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,oBACE,CAACH,KAAK,CAACI,UAAP;AACFC,QAAAA,QAAQ,EAAE,CAAC;AADT,cAEDC,kCAFC,IAEwB,IAFxB,OAGFC,IAHE,GAGI,UAHJ,OAIF,cAJE,IAIcP,KAAK,CAACQ,QAJpB,OAKF,eALE,IAKeR,KAAK,CAACS,KALrB,OAMF,YANE,IAMYT,KAAK,CAACU,KANlB,OAOF,eAPE,IAOeV,KAAK,CAACW,UAAN,GAAmBX,KAAK,CAACY,QAAN,IAAkB,KAArC,GAA6CC,SAP5D,OADF;AADM,KADK;AAcjBC,IAAAA,UAAU,EAAE;AACVX,MAAAA,IAAI,EAAE;AACJY,QAAAA,YAAY,EAAE;AACZC,UAAAA,eAAe,EAAE,CAAC;AAAEC,YAAAA,OAAO,EAAEC;AAAX,WAAD;AADL;AADV;AADI;AAdK,GAAnB;;AAuBA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCrB,KAAK,CAACI,UAAnD,EAA+D;AAC7D;AACAH,IAAAA,UAAU,CAACC,UAAX,CAAsBC,IAAtB,CAA2B,eAA3B,IAA8C,qBAA9C;AACD;;AAED,SAAOF,UAAP;AACD,CA9BM","sourcesContent":["import { SpacebarKey } from '@fluentui/keyboard-key';\n\nimport { IS_FOCUSABLE_ATTRIBUTE } from '../../attributes';\nimport { Accessibility, AriaRole } from '../../types';\n\n/**\n * @description\n *  Adds attribute 'aria-selected=true' based on the properties 'selectable' & 'selected' if the component has 'hasSubtree' property false or undefined. Does not set anything if true.\n *  Triggers 'performClick' action with 'Spacebar' on 'root', when tree title is selectable.\n *  @specification\n * Adds attribute 'tabIndex=-1' to 'root' slot if 'hasSubtree' property is false or undefined. Does not set the attribute if true.\n * Adds attribute 'role=treeitem' to 'root' slot if 'hasSubtree' property is false or undefined. Does not set the attribute if true.\n * Adds attribute 'aria-setsize=3' based on the property 'treeSize' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..\n * Adds attribute 'aria-posinset=2' based on the property 'index' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..\n * Adds attribute 'aria-level=1' based on the property 'level' if the component has 'hasSubtree' property false or undefined. Does not set anything if true..\n * Triggers 'performClick' action with 'Spacebar' on 'root'.\n */\nexport const treeTitleBehavior: Accessibility<TreeTitleBehaviorProps> = props => {\n  const definition = {\n    attributes: {\n      root: {\n        ...(!props.hasSubtree && {\n          tabIndex: -1,\n          [IS_FOCUSABLE_ATTRIBUTE]: true,\n          role: 'treeitem' as AriaRole,\n          'aria-setsize': props.treeSize,\n          'aria-posinset': props.index,\n          'aria-level': props.level,\n          'aria-selected': props.selectable ? props.selected || false : undefined,\n        }),\n      },\n    },\n    keyActions: {\n      root: {\n        performClick: {\n          keyCombinations: [{ keyCode: SpacebarKey }],\n        },\n      },\n    },\n  };\n\n  if (process.env.NODE_ENV !== 'production' && props.hasSubtree) {\n    // Override the default trigger's accessibility schema class.\n    definition.attributes.root['data-aa-class'] = 'ExpandableTreeTitle';\n  }\n\n  return definition;\n};\n\nexport type TreeTitleBehaviorProps = {\n  /** Indicated if tree title has a subtree */\n  hasSubtree?: boolean;\n  level?: number;\n  treeSize?: number;\n  index?: number;\n  selected?: boolean;\n  selectable?: boolean;\n};\n"],"file":"treeTitleBehavior.js"}