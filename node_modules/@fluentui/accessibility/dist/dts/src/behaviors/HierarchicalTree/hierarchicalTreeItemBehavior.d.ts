import { Accessibility } from '../../types';
/**
 * @description
 * Adds role 'treeitem' to a non-leaf item and 'none' to a leaf item.
 * Adds 'aria-expanded' with a value based on the 'open' prop if item is not a leaf.
 * Adds 'tabIndex' as '-1' if the item is not a leaf.
 *
 * @specification
 * Triggers 'performClick' action with 'Enter' or 'Spacebar' on 'root'.
 * Triggers 'receiveFocus' action with 'ArrowLeft' on 'root', when has an opened subtree.
 * Triggers 'collapse' action with 'ArrowLeft' on 'root', when has an opened subtree.
 * Triggers 'expand' action with 'ArrowRight' on 'root', when has a closed subtree.
 * Triggers 'focusSubtree' action with 'ArrowRight' on 'root', when has an opened subtree.
 */
export declare const hierarchicalTreeItemBehavior: Accessibility<HierarchicalTreeItemBehaviorProps>;
export declare type HierarchicalTreeItemBehaviorProps = {
    /** If item is a subtree, it contains items. */
    hasItems?: boolean;
    /** If item is a subtree, it indicates if it's open. */
    open?: boolean;
};
