{"version":3,"sources":["mergeThemes.ts"],"names":["callable","isEnabled","isDebugEnabled","deepmerge","objectKeyToValues","toCompactArray","withDebugId","emptyTheme","siteVariables","fontSizes","componentVariables","componentStyles","fontFaces","staticStyles","animations","mergeComponentStyles__PROD","initial","sources","reduce","partStylesPrepared","stylesByPart","Object","keys","forEach","partName","partStyle","originalTarget","originalSource","length","styleParam","mergeComponentStyles__DEV","_debug","undefined","styles","debugId","_debugId","targetDebug","targetStyles","sourceDebug","sourceStyles","merged","concat","mergeComponentStyles","process","env","NODE_ENV","mergeComponentVariables__PROD","filteredSources","filter","Boolean","acc","next","mergeComponentVariables","accumulatedVariables","fn","computedComponentVariables","mergeComponentVariables__DEV","computedDebug","resolved","input","_invertedKeys","mergeSiteVariables__PROD","mergeSiteVariables__DEV","accumulatedSiteVariables","nextSiteVariables","key","mergeSiteVariables","mergeThemeVariables__PROD","displayNames","displayName","mergeThemeVariables__DEV","source","mergeThemeVariables","mergeThemeStyles","themeComponentStyles","mergeFontFaces","mergeStaticStyles","mergeAnimations","assign","mergeStyles","args","mergeThemes","themes","nextDebugId"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\n\nimport { callable } from './callable';\nimport {\n  ComponentSlotStyle,\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentVariablesInput,\n  ComponentVariablesPrepared,\n  FontFace,\n  SiteVariablesInput,\n  SiteVariablesPrepared,\n  StaticStyle,\n  ThemeAnimation,\n  ThemeComponentStylesInput,\n  ThemeComponentStylesPrepared,\n  ThemeComponentVariablesInput,\n  ThemeComponentVariablesPrepared,\n  ThemeInput,\n  ThemePrepared,\n} from './types';\n\nimport { isEnabled as isDebugEnabled } from './debugEnabled';\nimport { deepmerge } from './deepmerge';\nimport { objectKeyToValues } from './objectKeysToValues';\nimport { toCompactArray } from './toCompactArray';\nimport { withDebugId } from './withDebugId';\n\nexport const emptyTheme: ThemePrepared = {\n  siteVariables: {\n    fontSizes: {},\n  },\n  componentVariables: {},\n  componentStyles: {},\n  fontFaces: [],\n  staticStyles: [],\n  animations: {},\n};\n\n// ----------------------------------------\n// Component level merge functions\n// ----------------------------------------\n\n/**\n * Merges a single component's styles (keyed by component part) with another component's styles.\n */\nexport const mergeComponentStyles__PROD = (\n  ...sources: (ComponentSlotStylesInput | null | undefined)[]\n): ComponentSlotStylesPrepared => {\n  const initial: ComponentSlotStylesPrepared = {};\n\n  return sources.reduce<ComponentSlotStylesPrepared>((partStylesPrepared, stylesByPart) => {\n    // The of \"[].forEach()\" instead of \"_.forEach\" has zero sense, but somehow it solves a reported memory leak.\n    // There is no 100% confidence that it actually fixes anything.\n    if (_.isPlainObject(stylesByPart)) {\n      Object.keys(stylesByPart).forEach(partName => {\n        const partStyle = stylesByPart[partName];\n\n        // Break references to avoid an infinite loop.\n        // We are replacing functions with a new ones that calls the originals.\n        const originalTarget = partStylesPrepared[partName];\n        const originalSource = partStyle;\n\n        // if there is no source, merging is a no-op, skip it\n        if (\n          typeof originalSource === 'undefined' ||\n          originalSource === null ||\n          (typeof originalSource === 'object' && Object.keys(originalSource).length === 0)\n        ) {\n          return;\n        }\n\n        // no target means source doesn't need to merge onto anything\n        // just ensure source is callable (prepared format)\n        if (typeof originalTarget === 'undefined') {\n          partStylesPrepared[partName] = callable(originalSource);\n          return;\n        }\n\n        // We have both target and source, replace with merge fn\n        partStylesPrepared[partName] = styleParam => {\n          // originalTarget is always prepared, fn is guaranteed\n          return _.merge(originalTarget(styleParam), callable(originalSource)(styleParam));\n        };\n      });\n    }\n\n    return partStylesPrepared;\n  }, initial);\n};\n\nexport const mergeComponentStyles__DEV = (\n  ...sources: (ComponentSlotStylesInput | null | undefined)[]\n): ComponentSlotStylesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeComponentStyles__PROD(...sources);\n  }\n  const initial: ComponentSlotStylesPrepared = {};\n\n  return sources.reduce<ComponentSlotStylesPrepared>((partStylesPrepared, stylesByPart) => {\n    _.forEach(stylesByPart, (partStyle, partName) => {\n      // Break references to avoid an infinite loop.\n      // We are replacing functions with a new ones that calls the originals.\n      const originalTarget = partStylesPrepared[partName];\n      const originalSource = partStyle;\n\n      // if there is no source, merging is a no-op, skip it\n      if (\n        typeof originalSource === 'undefined' ||\n        originalSource === null ||\n        (typeof originalSource === 'object' && Object.keys(originalSource).length === 0)\n      ) {\n        return;\n      }\n\n      // no target means source doesn't need to merge onto anything\n      // just ensure source is callable (prepared format) and has _debug\n      if (typeof originalTarget === 'undefined') {\n        partStylesPrepared[partName] = styleParam => {\n          // originalTarget is always prepared, fn is guaranteed, _debug always exists\n          const { _debug = undefined, ...styles } = callable(originalSource)(styleParam) || {};\n\n          // new object required to prevent circular JSON structure error in <Debug />\n          return {\n            ...styles,\n            _debug: _debug || [{ styles: { ...styles }, debugId: stylesByPart._debugId }],\n          };\n        };\n\n        return;\n      }\n\n      // We have both target and source, replace with merge fn\n      partStylesPrepared[partName] = styleParam => {\n        // originalTarget is always prepared, fn is guaranteed, _debug always exists\n        const { _debug: targetDebug, ...targetStyles } = originalTarget(styleParam);\n        const { _debug: sourceDebug = undefined, ...sourceStyles } = callable(originalSource)(styleParam) || {};\n\n        const merged = _.merge(targetStyles, sourceStyles);\n        merged._debug = targetDebug.concat(sourceDebug || { styles: sourceStyles, debugId: stylesByPart._debugId });\n        return merged;\n      };\n    });\n\n    return partStylesPrepared;\n  }, initial);\n};\n\nexport const mergeComponentStyles: (\n  ...sources: (ComponentSlotStylesInput | null | undefined)[]\n) => ComponentSlotStylesPrepared =\n  process.env.NODE_ENV === 'production' ? mergeComponentStyles__PROD : mergeComponentStyles__DEV;\n\n/**\n * Merges a single component's variables with another component's variables.\n */\nexport const mergeComponentVariables__PROD = (...sources: ComponentVariablesInput[]): ComponentVariablesPrepared => {\n  const initial = () => ({});\n\n  // filtering is required as some arguments can be undefined\n  const filteredSources = sources.filter(Boolean);\n\n  // a short circle to avoid calls of deepmerge()\n  if (filteredSources.length === 1) {\n    return typeof filteredSources[0] === 'function' ? filteredSources[0] : callable(filteredSources[0]);\n  }\n\n  return filteredSources.reduce<ComponentVariablesPrepared>((acc, next) => {\n    return function mergeComponentVariables(...args) {\n      const accumulatedVariables = acc(...args);\n      const fn = typeof next === 'function' ? next : callable(next);\n      const computedComponentVariables = fn(...args);\n\n      return deepmerge(accumulatedVariables, computedComponentVariables);\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables__DEV = (...sources: ComponentVariablesInput[]): ComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeComponentVariables__PROD(...sources);\n  }\n  const initial = () => ({});\n\n  return sources.reduce<ComponentVariablesPrepared>((acc, next) => {\n    return siteVariables => {\n      const { _debug = [], ...accumulatedVariables } = acc(siteVariables);\n      const { _debug: computedDebug = undefined, _debugId = undefined, ...computedComponentVariables } =\n        callable(next)(siteVariables) || {};\n\n      const merged = deepmerge(accumulatedVariables, computedComponentVariables);\n\n      merged._debug = _debug.concat(\n        computedDebug || {\n          resolved: computedComponentVariables,\n          debugId: _debugId,\n          input: siteVariables\n            ? siteVariables._invertedKeys && callable(next)(siteVariables._invertedKeys)\n            : callable(next)(),\n        },\n      );\n      return merged;\n    };\n  }, initial);\n};\n\nexport const mergeComponentVariables =\n  process.env.NODE_ENV === 'production' ? mergeComponentVariables__PROD : mergeComponentVariables__DEV;\n\n// ----------------------------------------\n// Theme level merge functions\n// ----------------------------------------\n\n/**\n * Site variables can safely be merged at each Provider in the tree.\n * They are flat objects and do not depend on render-time values, such as props.\n */\nexport const mergeSiteVariables__PROD = (\n  ...sources: (SiteVariablesInput | null | undefined)[]\n): SiteVariablesPrepared => {\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n  return deepmerge(initial, ...sources);\n};\n\nexport const mergeSiteVariables__DEV = (\n  ...sources: (SiteVariablesInput | null | undefined)[]\n): SiteVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeSiteVariables__PROD(...sources);\n  }\n\n  const initial: SiteVariablesPrepared = {\n    fontSizes: {},\n  };\n\n  return sources.reduce<SiteVariablesPrepared>((acc, next) => {\n    const { _debug = [], ...accumulatedSiteVariables } = acc;\n    const { _debug: computedDebug = undefined, _invertedKeys = undefined, _debugId = undefined, ...nextSiteVariables } =\n      next || {};\n\n    const merged = deepmerge({ ...accumulatedSiteVariables, _invertedKeys: undefined }, nextSiteVariables);\n    merged._debug = _debug.concat(computedDebug || { resolved: nextSiteVariables, debugId: _debugId });\n    merged._invertedKeys = _invertedKeys || objectKeyToValues(merged, key => `siteVariables.${key}`);\n    return merged;\n  }, initial);\n};\n\nexport const mergeSiteVariables =\n  process.env.NODE_ENV === 'production' ? mergeSiteVariables__PROD : mergeSiteVariables__DEV;\n\n/**\n * Component variables can be objects, functions, or an array of these.\n * The functions must be called with the final result of siteVariables, otherwise\n *   the component variable objects would have no ability to apply siteVariables.\n * Therefore, componentVariables must be resolved by the component at render time.\n * We instead pass down call stack of component variable functions to be resolved later.\n */\n\nexport const mergeThemeVariables__PROD = (\n  ...sources: (ThemeComponentVariablesInput | null | undefined)[]\n): ThemeComponentVariablesPrepared => {\n  const displayNames = _.union(..._.map(sources, _.keys));\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(..._.map(sources, displayName));\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables__DEV = (\n  ...sources: (ThemeComponentVariablesInput | null | undefined)[]\n): ThemeComponentVariablesPrepared => {\n  if (!isDebugEnabled) {\n    return mergeThemeVariables__PROD(...sources);\n  }\n\n  const displayNames = _.union(..._.map(sources, _.keys));\n  return displayNames.reduce((componentVariables, displayName) => {\n    componentVariables[displayName] = mergeComponentVariables(\n      ..._.map(sources, source => source && withDebugId(source[displayName], source._debugId)),\n    );\n    return componentVariables;\n  }, {});\n};\n\nexport const mergeThemeVariables =\n  process.env.NODE_ENV === 'production' ? mergeThemeVariables__PROD : mergeThemeVariables__DEV;\n\n/**\n * See mergeThemeVariables() description.\n * Component styles adhere to the same pattern as component variables, except\n *   that they return style objects.\n */\nexport const mergeThemeStyles = (\n  ...sources: (ThemeComponentStylesInput | null | undefined)[]\n): ThemeComponentStylesPrepared => {\n  const initial: ThemeComponentStylesPrepared = {};\n\n  return sources.reduce<ThemeComponentStylesPrepared>((themeComponentStyles, next) => {\n    _.forEach(next, (stylesByPart, displayName) => {\n      themeComponentStyles[displayName] = mergeComponentStyles(\n        themeComponentStyles[displayName],\n        withDebugId(stylesByPart, (next as ThemeComponentStylesPrepared & { _debugId: string })._debugId),\n      );\n    });\n\n    return themeComponentStyles;\n  }, initial);\n};\n\nexport const mergeFontFaces = (...sources: FontFace[]) => {\n  return toCompactArray<FontFace>(...sources);\n};\n\nexport const mergeStaticStyles = (...sources: StaticStyle[]) => {\n  return toCompactArray<StaticStyle>(...sources);\n};\n\nexport const mergeAnimations = (...sources: { [key: string]: ThemeAnimation }[]): { [key: string]: ThemeAnimation } => {\n  return Object.assign({}, ...sources);\n};\n\nexport const mergeStyles = (...sources: ComponentSlotStyle[]) => {\n  return (...args) => {\n    return sources.reduce((acc, next) => {\n      return _.merge(acc, callable(next)(...args));\n    }, {});\n  };\n};\n\nexport const mergeThemes = (...themes: ThemeInput[]): ThemePrepared => {\n  return themes.reduce<ThemePrepared>(\n    (acc: ThemePrepared, next: ThemeInput) => {\n      if (!next) return acc;\n      const nextDebugId = next['_debugId'];\n\n      acc.siteVariables = mergeSiteVariables(acc.siteVariables, withDebugId(next.siteVariables, nextDebugId));\n\n      acc.componentVariables = mergeThemeVariables(\n        acc.componentVariables,\n        withDebugId(next.componentVariables, nextDebugId),\n      );\n\n      acc.componentStyles = mergeThemeStyles(acc.componentStyles, withDebugId(next.componentStyles, nextDebugId));\n\n      acc.fontFaces = mergeFontFaces(...acc.fontFaces, ...(next.fontFaces || []));\n\n      acc.staticStyles = mergeStaticStyles(...acc.staticStyles, ...(next.staticStyles || []));\n\n      acc.animations = mergeAnimations(acc.animations, next.animations);\n\n      return acc;\n    },\n    // .reduce() will modify \"emptyTheme\" object, so we should clone it before actual usage\n    { ...emptyTheme },\n  );\n};\n"],"file":"mergeThemes.js"}