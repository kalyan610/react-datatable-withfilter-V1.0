{"version":3,"file":"computeDisplayNames.js","sourceRoot":"../src/","sources":["computeDisplayNames.ts"],"names":[],"mappings":"AACA;;;GAGG;AACH,MAAM,UAAU,mBAAmB,CAAC,YAA4B,EAAE,aAAqC;IACrG,IAAI,YAAY,CAAC,cAAc,EAAE;QAC/B,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,OAAO,CAAa,CAAC;KAC/D;IACD,0EAA0E;IAC1E,OAAO,YAAY,CAAC,WAAW;QAC7B,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;QAC7D,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC;AACjC,CAAC","sourcesContent":["import { ComposeOptions, ComposePreparedOptions } from './types';\n/**\n * Given input/parent options, which are both assumed to be defined and populated with\n * displayNames array, return a string array of display names.\n */\nexport function computeDisplayNames(inputOptions: ComposeOptions, parentOptions: ComposePreparedOptions): string[] {\n  if (inputOptions.overrideStyles) {\n    return [inputOptions.displayName].filter(Boolean) as string[];\n  }\n  // To support styles composition we need to properly pick up display names\n  return inputOptions.displayName\n    ? parentOptions.displayNames.concat(inputOptions.displayName)\n    : parentOptions.displayNames;\n}\n"]}