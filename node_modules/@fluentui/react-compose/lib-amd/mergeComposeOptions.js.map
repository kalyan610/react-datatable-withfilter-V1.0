{"version":3,"file":"mergeComposeOptions.js","sourceRoot":"../src/","sources":["mergeComposeOptions.ts"],"names":[],"mappings":";;;IAIA,SAAgB,mBAAmB,CACjC,KAAY,EACZ,YAA4B,EAC5B,aAAuE;QAAvE,8BAAA,EAAA,gBAAkD,6CAAqB;QAEvE,IAAM,wBAAwB,GAAG,YAAY,CAAC,SAAS;YACrD,CAAC,wBAAK,aAAa,CAAC,SAAS,GAAE,YAAY,CAAC,SAAS,GACrD,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC;QAE5B,IAAM,gBAAgB,GAAG,UAAS,KAAQ;YACxC,OAAA,wBAAwB,CAAC,MAAM,CAAyB,UAAC,GAAG,EAAE,UAAU;gBACtE,IAAM,SAAS,wBAAQ,UAAU,CAAC,KAAK,CAAC,CAAE,CAAC;gBAC3C,IAAM,KAAK,0BAAiB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAK,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACzE,IAAM,eAAe,GAA2B,EAAE,CAAC;gBAEnD,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;oBAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE;wBAC1B,eAAe,CAAC,IAAI,CAAC,yCAChB,GAAG,CAAC,IAAI,CAAC,GACT,SAAS,CAAC,IAAI,CAAC,CACnB,CAAC;qBACH;gBACH,CAAC,CAAC,CAAC;gBAEH,OAAO,eAAe,CAAC;YACzB,CAAC,EAAE,EAAE,CAAC;QAfN,CAeM,CAAC;QAET,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAEzG,IAAM,KAAK,GAAoC,UAAC,KAAK,EAAE,GAAG,EAAE,OAAO;YACjE,IAAI,YAAY,CAAC,KAAK,EAAE;gBACtB,OAAO,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;aACnF;YAED,OAAO,aAAa,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC;QAEF,OAAO;YACL,SAAS,EAAE,YAAY,CAAC,SAAS,IAAI,aAAa,CAAC,SAAS;YAC5D,OAAO,yBAAM,aAAa,CAAC,OAAO,EAAK,YAAY,CAAC;YAEpD,WAAW,EAAE,YAAY,CAAC,WAAW,IAAI,aAAa,CAAC,WAAW;YAClE,YAAY,EAAE,yCAAmB,CAAC,YAAY,EAAE,aAAa,CAAC;YAE9D,0BAA0B,EAAE,YAAY,CAAC,qBAAqB;gBAC5D,CAAC,wBAAK,aAAa,CAAC,0BAA0B,GAAE,YAAY,CAAC,qBAAqB,GAClF,CAAC,CAAC,aAAa,CAAC,0BAA0B;YAE5C,MAAM,EAAE,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM;YAElE,YAAY,yBAAM,aAAa,CAAC,YAAY,EAAK,CAAE,YAAY,CAAC,YAAwB,IAAK,EAAc,CAAC,CAAC;YAE7G,cAAc,EAAE,YAAY,CAAC,cAAc,IAAI,KAAK;YAEpD,KAAK,wCACA,aAAa,CAAC,KAAK,GACnB,YAAY,CAAC,KAAK,CACtB;YAED,SAAS,EAAE,wBAAwB;YAEnC,KAAK,OAAA;YAEL,gBAAgB,kBAAA;YAEhB,eAAe,wCACV,aAAa,CAAC,eAAe,GAC7B,YAAY,CAAC,eAAe,CAChC;SACF,CAAC;IACJ,CAAC;IAtED,kDAsEC","sourcesContent":["import { ComposeOptions, ComposePreparedOptions, Input } from './types';\nimport { computeDisplayNames } from './computeDisplayNames';\nimport { defaultComposeOptions } from './defaultComposeOptions';\n\nexport function mergeComposeOptions(\n  input: Input,\n  inputOptions: ComposeOptions,\n  parentOptions: Required<ComposePreparedOptions> = defaultComposeOptions,\n): Required<ComposePreparedOptions> {\n  const mapPropsToSlotPropsChain = inputOptions.slotProps\n    ? [...parentOptions.slotProps, inputOptions.slotProps]\n    : parentOptions.slotProps;\n\n  const resolveSlotProps = <P = {}>(props: P) =>\n    mapPropsToSlotPropsChain.reduce<Record<string, object>>((acc, definition) => {\n      const nextProps = { ...definition(props) };\n      const slots: string[] = [...Object.keys(acc), ...Object.keys(nextProps)];\n      const mergedSlotProps: Record<string, object> = {};\n\n      slots.forEach(slot => {\n        if (!mergedSlotProps[slot]) {\n          mergedSlotProps[slot] = {\n            ...acc[slot],\n            ...nextProps[slot],\n          };\n        }\n      });\n\n      return mergedSlotProps;\n    }, {});\n\n  const inputClasses = Array.isArray(inputOptions.classes) ? inputOptions.classes : [inputOptions.classes];\n\n  const state: ComposePreparedOptions['state'] = (props, ref, options) => {\n    if (inputOptions.state) {\n      return inputOptions.state(parentOptions.state(props, ref, options), ref, options);\n    }\n\n    return parentOptions.state(props, ref, options);\n  };\n\n  return {\n    className: inputOptions.className || parentOptions.className,\n    classes: [...parentOptions.classes, ...inputClasses],\n\n    displayName: inputOptions.displayName || parentOptions.displayName,\n    displayNames: computeDisplayNames(inputOptions, parentOptions),\n\n    mapPropsToStylesPropsChain: inputOptions.mapPropsToStylesProps\n      ? [...parentOptions.mapPropsToStylesPropsChain, inputOptions.mapPropsToStylesProps]\n      : parentOptions.mapPropsToStylesPropsChain,\n\n    render: typeof input === 'function' ? input : parentOptions.render,\n\n    handledProps: [...parentOptions.handledProps, ...((inputOptions.handledProps as never[]) || ([] as never[]))],\n\n    overrideStyles: inputOptions.overrideStyles || false,\n\n    slots: {\n      ...parentOptions.slots,\n      ...inputOptions.slots,\n    },\n\n    slotProps: mapPropsToSlotPropsChain,\n\n    state,\n\n    resolveSlotProps,\n\n    shorthandConfig: {\n      ...parentOptions.shorthandConfig,\n      ...inputOptions.shorthandConfig,\n    },\n  };\n}\n"]}