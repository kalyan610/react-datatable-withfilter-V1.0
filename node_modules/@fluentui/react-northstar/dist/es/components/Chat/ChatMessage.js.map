{"version":3,"sources":["components/Chat/ChatMessage.tsx"],"names":["IS_FOCUSABLE_ATTRIBUTE","chatMessageBehavior","menuAsToolbarBehavior","getElementType","useUnhandledProps","useAccessibility","useFluentContext","useStyles","useTelemetry","useContextSelector","Ref","customPropTypes","cx","PropTypes","React","getScrollParent","Popper","partitionPopperPropsFromShorthand","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","createShorthand","Box","Label","Menu","Text","Reaction","ChatItemContext","ChatMessageHeader","ChatMessageDetails","chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","timestamp","badge","content","reactionGroup","ChatMessage","props","context","displayName","telemetry","setStart","setEnd","parentAttached","v","attached","accessibility","badgePosition","children","className","design","mine","positionActionMenu","reactionGroupPosition","styles","variables","header","details","overflow","unstable_overflow","positioningProps","useState","focused","setFocused","messageNode","setMessageNode","updateActionsMenuPosition","useRef","getA11Props","actionHandlers","preventDefault","event","currentTarget","target","focus","stopPropagation","mapPropsToStyles","hasBadge","hasReactionGroup","mapPropsToInlineStyles","rtl","classes","resolvedStyles","handleFocus","e","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","renderActionMenu","actionMenuElement","create","defaultProps","modifiers","name","options","fallbackPlacements","boundary","scheduleUpdate","current","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","reactionGroupElement","Group","authorElement","size","timestampElement","messageContent","detailsElement","headerElement","overrideProps","element","unstable_wrapWithFocusZone","onBlur","onFocus","onMouseEnter","getAttributes","forElements","propTypes","createCommon","oneOfType","itemShorthand","collectionShorthand","bool","oneOf","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  IS_FOCUSABLE_ATTRIBUTE,\n  chatMessageBehavior,\n  menuAsToolbarBehavior,\n  ChatMessageBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  getScrollParent,\n  Popper,\n  PopperShorthandProps,\n  partitionPopperPropsFromShorthand,\n  PopperModifiers,\n} from '../../utils/positioner';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthand,\n} from '../../utils';\nimport { ShorthandValue, ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { Text, TextProps } from '../Text/Text';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  timestamp: string;\n  badge: string;\n  content: string;\n  reactionGroup: string;\n}\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /** Menu with actions of the message. */\n  actionMenu?: ShorthandValue<MenuProps & { popper?: PopperShorthandProps }> | ShorthandCollection<MenuItemProps>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /** A message cane have a custom header */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Message details info slot for the header. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'mine'> & {\n  focused: boolean;\n  hasBadge: boolean;\n  hasReactionGroup: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n  badge: `${chatMessageClassName}__badge`,\n  content: `${chatMessageClassName}__content`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n};\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage: ComponentWithAs<'div', ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    content,\n    design,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    timestamp,\n    styles,\n    variables,\n    header,\n    details,\n    unstable_overflow: overflow,\n  } = props;\n  const [actionMenu, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n\n  const [focused, setFocused] = React.useState<boolean>(false);\n  const [messageNode, setMessageNode] = React.useState<HTMLElement | null>(null);\n\n  const updateActionsMenuPosition = React.useRef<(() => void) | null>(null);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        if (messageNode) {\n          messageNode.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      focused,\n      mine,\n      hasBadge: !!badge,\n      hasReactionGroup: !!reactionGroup,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n    });\n\n    if (!actionMenuElement) {\n      return actionMenuElement;\n    }\n\n    const modifiers: PopperModifiers | undefined = positionActionMenu && [\n      // https://popper.js.org/docs/v2/modifiers/flip/\n      // Forces to flip only in \"top-*\" positions\n      { name: 'flip', options: { fallbackPlacements: ['top'] } },\n      overflow && {\n        name: 'preventOverflow',\n        options: { boundary: getScrollParent(messageNode) },\n      },\n    ];\n\n    return (\n      <Popper\n        enabled={positionActionMenu}\n        align=\"end\"\n        modifiers={modifiers}\n        position=\"above\"\n        positionFixed={overflow}\n        targetRef={messageNode}\n        {...positioningProps}\n      >\n        {({ scheduleUpdate }) => {\n          updateActionsMenuPosition.current = scheduleUpdate;\n\n          return actionMenuElement;\n        }}\n      </Popper>\n    );\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = Box.create(content, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ mine }),\n  });\n\n  const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n    overrideProps: () => ({\n      content: (\n        <>\n          {authorElement}\n          {timestampElement}\n          {detailsElement}\n          {reactionGroupPosition === 'start' && reactionGroupElement}\n        </>\n      ),\n    }),\n  });\n\n  const element = (\n    <Ref innerRef={setMessageNode}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? (\n            children\n          ) : (\n            <>\n              {actionMenuElement}\n              {badgePosition === 'start' && badgeElement}\n              {headerElement}\n              {messageContent}\n              {reactionGroupPosition === 'end' && reactionGroupElement}\n              {badgePosition === 'end' && badgeElement}\n            </>\n          )}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n};\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  accessibility: chatMessageBehavior,\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  details: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  timestamp: customPropTypes.itemShorthand,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  unstable_overflow: PropTypes.bool,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"file":"ChatMessage.js"}