import { Accessibility, ListItemBehaviorProps } from '@fluentui/accessibility';
import { ComponentWithAs } from '@fluentui/react-bindings';
import { BoxProps } from '../Box/Box';
import { ShorthandValue, ComponentEventHandler, FluentComponentStaticProps } from '../../types';
import { UIComponentProps, ContentComponentProps } from '../../utils';
export interface ListItemSlotClassNames {
    header: string;
    headerMedia: string;
    headerWrapper: string;
    content: string;
    contentMedia: string;
    contentWrapper: string;
    main: string;
    media: string;
    endMedia: string;
}
export interface ListItemProps extends UIComponentProps, ContentComponentProps<ShorthandValue<BoxProps>> {
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<ListItemBehaviorProps>;
    contentMedia?: ShorthandValue<BoxProps>;
    /** Toggle debug mode. */
    debug?: boolean;
    header?: ShorthandValue<BoxProps>;
    endMedia?: ShorthandValue<BoxProps>;
    headerMedia?: ShorthandValue<BoxProps>;
    /** A list item can appear more important and draw the user's attention. */
    important?: boolean;
    media?: ShorthandValue<BoxProps>;
    index?: number;
    /** A list item can indicate that it can be selected. */
    selectable?: boolean;
    /** A list item can indicate that it can be navigable. */
    navigable?: boolean;
    /** Indicates if the current list item is selected. */
    selected?: boolean;
    truncateContent?: boolean;
    truncateHeader?: boolean;
    /**
     * Called on click.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props.
     */
    onClick?: ComponentEventHandler<ListItemProps>;
}
export declare type ListItemStylesProps = Pick<ListItemProps, 'debug' | 'important' | 'navigable' | 'selectable' | 'selected' | 'truncateContent' | 'truncateHeader'> & {
    hasContent?: boolean;
    hasContentMedia?: boolean;
    hasHeader?: boolean;
    hasHeaderMedia?: boolean;
};
export declare const listItemClassName = "ui-list__item";
export declare const listItemSlotClassNames: ListItemSlotClassNames;
/**
 * A ListItem contains a single piece of content within a List.
 */
export declare const ListItem: ComponentWithAs<'li', ListItemProps & {
    index: number;
}> & FluentComponentStaticProps<ListItemProps>;
