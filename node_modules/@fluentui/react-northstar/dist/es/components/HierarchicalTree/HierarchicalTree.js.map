{"version":3,"sources":["components/HierarchicalTree/HierarchicalTree.tsx"],"names":["hierarchicalTreeBehavior","customPropTypes","PropTypes","React","HierarchicalTreeItem","childrenExist","commonPropTypes","createShorthandFactory","rtlTextContainer","useTelemetry","useFluentContext","useAutoControlled","useUnhandledProps","getElementType","useAccessibility","useStyles","hierarchicalTreeClassName","HierarchicalTree","props","context","displayName","telemetry","setStart","setEnd","children","className","design","styles","variables","items","renderItemTitle","exclusive","defaultValue","defaultActiveIndex","value","activeIndex","initialValue","setActiveIndex","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","expandSiblings","e","preventDefault","stopPropagation","reduce","acc","item","index","trySetActiveIndexAndTriggerEvent","mapPropsToBehavior","rtl","mapPropsToInlineStyles","classes","getActiveIndexes","computeNewIndex","treeItemProps","activeIndexes","handleTreeItemOverrides","predefinedProps","onTitleClick","renderContent","create","defaultProps","open","overrideProps","element","root","getAttributes","forElements","propTypes","createCommon","content","every","disallow","oneOfType","arrayOf","number","bool","collectionShorthand","func","onActiveIndexChange","as","Object","keys","Component","mappedArrayProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  hierarchicalTreeBehavior,\n  HierarchicalTreeBehaviorBehaviorProps,\n} from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { HierarchicalTreeItem, HierarchicalTreeItemProps } from './HierarchicalTreeItem';\nimport { HierarchicalTreeTitleProps } from './HierarchicalTreeTitle';\nimport {\n  childrenExist,\n  commonPropTypes,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ShorthandValue,\n  ShorthandRenderFunction,\n  ShorthandCollection,\n  ComponentEventHandler,\n  FluentComponentStaticProps,\n} from '../../types';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  useFluentContext,\n  useAutoControlled,\n  useUnhandledProps,\n  getElementType,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface HierarchicalTreeProps extends UIComponentProps, ChildrenComponentProps {\n  /** Index of the currently active subtree. */\n  activeIndex?: number[] | number;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<HierarchicalTreeBehaviorBehaviorProps>;\n\n  /** Initial activeIndex value. */\n  defaultActiveIndex?: number[] | number;\n\n  /** Only allow one subtree to be open at a time. */\n  exclusive?: boolean;\n\n  /** Shorthand array of props for Tree. */\n  items?: ShorthandCollection<HierarchicalTreeItemProps>;\n\n  /**\n   * A custom render function for the title slot.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<HierarchicalTreeTitleProps>;\n\n  /** Called when activeIndex changes.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onActiveIndexChange?: ComponentEventHandler<HierarchicalTreeProps>;\n}\n\nexport interface HierarchicalTreeState {\n  activeIndex: number[] | number;\n}\n\nexport const hierarchicalTreeClassName = 'ui-hierarchicaltree';\n\nexport type HierarchicalTreeStylesProps = never;\n\n/**\n * (DEPRECATED) A Tree displays data organised in tree hierarchy.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const HierarchicalTree: ComponentWithAs<'ul', HierarchicalTreeProps> &\n  FluentComponentStaticProps<HierarchicalTreeProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HierarchicalTree.displayName, context.telemetry);\n  setStart();\n\n  const { children, className, design, styles, variables, items, renderItemTitle, exclusive } = props;\n\n  const [activeIndex, setActiveIndex] = useAutoControlled({\n    defaultValue: props.defaultActiveIndex,\n    value: props.activeIndex,\n    initialValue: exclusive ? -1 : [],\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HierarchicalTree.handledProps, props);\n\n  const getA11yProps = useAccessibility<HierarchicalTreeBehaviorBehaviorProps>(props.accessibility, {\n    debugName: HierarchicalTree.displayName,\n    actionHandlers: {\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (exclusive) {\n          return;\n        }\n\n        const activeIndex = items\n          ? items.reduce((acc: HierarchicalTreeItemProps[], item, index) => {\n              if (item['items']) {\n                return [...acc, index];\n              }\n              return acc;\n            }, [])\n          : [];\n        trySetActiveIndexAndTriggerEvent(e, activeIndex);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      'aria-labelledby': props['aria-labelledby'],\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<HierarchicalTreeStylesProps>(HierarchicalTree.displayName, {\n    className: hierarchicalTreeClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const trySetActiveIndexAndTriggerEvent = (e, activeIndex) => {\n    setActiveIndex(activeIndex);\n    _.invoke(props, 'onActiveIndexChange', e, { ...props, activeIndex });\n  };\n\n  const getActiveIndexes = (): number[] => {\n    return _.isArray(activeIndex) ? activeIndex : [activeIndex];\n  };\n\n  const computeNewIndex = (treeItemProps: HierarchicalTreeItemProps) => {\n    const { index, items } = treeItemProps;\n    const activeIndexes = getActiveIndexes();\n    const { exclusive } = props;\n    if (!items) {\n      return activeIndexes;\n    }\n\n    if (exclusive) return index;\n\n    // check to see if index is in array, and remove it, if not then add it\n    return _.includes(activeIndexes, index) ? _.without(activeIndexes, index) : [...activeIndexes, index];\n  };\n\n  const handleTreeItemOverrides = (predefinedProps: HierarchicalTreeItemProps) => ({\n    onTitleClick: (e: React.SyntheticEvent, treeItemProps: HierarchicalTreeItemProps) => {\n      trySetActiveIndexAndTriggerEvent(e, computeNewIndex(treeItemProps));\n      _.invoke(predefinedProps, 'onTitleClick', e, treeItemProps);\n    },\n  });\n\n  const renderContent = () => {\n    const activeIndexes = getActiveIndexes();\n\n    return _.map(items, (item: ShorthandValue<HierarchicalTreeItemProps>, index: number) =>\n      HierarchicalTreeItem.create(item, {\n        defaultProps: () => ({\n          index,\n          exclusive,\n          renderItemTitle,\n          open: exclusive ? index === activeIndex : _.includes(activeIndexes, index),\n        }),\n        overrideProps: handleTreeItemOverrides,\n      }),\n    );\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children) ? children : renderContent()}\n    </ElementType>\n  );\n\n  setEnd();\n  return element;\n};\n\nHierarchicalTree.displayName = 'HierarchicalTree';\n\nHierarchicalTree.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  activeIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  defaultActiveIndex: customPropTypes.every([\n    customPropTypes.disallow(['children']),\n    PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number]),\n  ]),\n  exclusive: PropTypes.bool,\n  items: customPropTypes.collectionShorthand,\n  renderItemTitle: PropTypes.func,\n  onActiveIndexChange: PropTypes.func,\n};\n\nHierarchicalTree.defaultProps = {\n  as: 'ul',\n  accessibility: hierarchicalTreeBehavior,\n};\n\nHierarchicalTree.handledProps = Object.keys(HierarchicalTree.propTypes) as any;\n\nHierarchicalTree.create = createShorthandFactory({\n  Component: HierarchicalTree,\n  mappedArrayProp: 'items',\n});\n"],"file":"HierarchicalTree.js"}