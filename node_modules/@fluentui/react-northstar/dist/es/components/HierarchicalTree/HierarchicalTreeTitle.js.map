{"version":3,"sources":["components/HierarchicalTree/HierarchicalTreeTitle.tsx"],"names":["hierarchicalTreeTitleBehavior","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getElementType","useUnhandledProps","useFluentContext","useTelemetry","useAccessibility","useStyles","hierarchicalTreeTitleClassName","HierarchicalTreeTitle","props","context","displayName","telemetry","setStart","setEnd","children","content","open","hasSubtree","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","e","preventDefault","handleClick","mapPropsToBehavior","rtl","mapPropsToInlineStyles","classes","element","root","onClick","getAttributes","forElements","propTypes","createCommon","func","bool","defaultProps","as","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  hierarchicalTreeTitleBehavior,\n  HierarchicalTreeTitleBehaviorProps,\n} from '@fluentui/accessibility';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface HierarchicalTreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<HierarchicalTreeTitleBehaviorProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<HierarchicalTreeTitleProps>;\n\n  /** Whether or not the subtree of the item is in the open state. */\n  open?: boolean;\n\n  /** Whether or not the item has a subtree. */\n  hasSubtree?: boolean;\n}\n\nexport const hierarchicalTreeTitleClassName = 'ui-hierarchicaltree__title';\n\nexport type HierarchicalTreeTitleStylesProps = never;\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport const HierarchicalTreeTitle: ComponentWithAs<'a', HierarchicalTreeTitleProps> &\n  FluentComponentStaticProps<HierarchicalTreeTitleProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HierarchicalTreeTitle.displayName, context.telemetry);\n  setStart();\n\n  const { children, content, open, hasSubtree, className, design, styles, variables } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HierarchicalTreeTitle.handledProps, props);\n\n  const getA11yProps = useAccessibility<HierarchicalTreeTitleBehaviorProps>(props.accessibility, {\n    debugName: HierarchicalTreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      open,\n      hasSubtree,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<HierarchicalTreeTitleStylesProps>(HierarchicalTreeTitle.displayName, {\n    className: hierarchicalTreeTitleClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleClick = e => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nHierarchicalTreeTitle.displayName = 'HierarchicalTreeTitle';\n\nHierarchicalTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  hasSubtree: PropTypes.bool,\n};\n\nHierarchicalTreeTitle.defaultProps = {\n  as: 'a',\n  accessibility: hierarchicalTreeTitleBehavior,\n};\n\nHierarchicalTreeTitle.handledProps = Object.keys(HierarchicalTreeTitle.propTypes) as any;\n\nHierarchicalTreeTitle.create = createShorthandFactory({\n  Component: HierarchicalTreeTitle,\n  mappedProp: 'content',\n});\n"],"file":"HierarchicalTreeTitle.js"}