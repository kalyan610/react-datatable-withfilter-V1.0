import { Accessibility, HierarchicalTreeTitleBehaviorProps } from '@fluentui/accessibility';
import { UIComponentProps, ChildrenComponentProps, ContentComponentProps } from '../../utils';
import { ComponentEventHandler, FluentComponentStaticProps } from '../../types';
import { ComponentWithAs } from '@fluentui/react-bindings';
export interface HierarchicalTreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {
    /** Accessibility behavior if overridden by the user. */
    accessibility?: Accessibility<HierarchicalTreeTitleBehaviorProps>;
    /**
     * Called on click.
     *
     * @param event - React's original SyntheticEvent.
     * @param data - All props.
     */
    onClick?: ComponentEventHandler<HierarchicalTreeTitleProps>;
    /** Whether or not the subtree of the item is in the open state. */
    open?: boolean;
    /** Whether or not the item has a subtree. */
    hasSubtree?: boolean;
}
export declare const hierarchicalTreeTitleClassName = "ui-hierarchicaltree__title";
export declare type HierarchicalTreeTitleStylesProps = never;
/**
 * A TreeTitle renders a title of TreeItem.
 */
export declare const HierarchicalTreeTitle: ComponentWithAs<'a', HierarchicalTreeTitleProps> & FluentComponentStaticProps<HierarchicalTreeTitleProps>;
