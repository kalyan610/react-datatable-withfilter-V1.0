{"version":3,"sources":["components/Popup/PopupContent.tsx"],"names":["AutoFocusZone","FocusTrapZone","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","cx","PropTypes","React","childrenExist","createShorthandFactory","commonPropTypes","rtlTextContainer","getBasePlacement","popupContentClassName","popupContentSlotClassNames","content","PopupContent","props","context","displayName","telemetry","setStart","setEnd","accessibility","autoFocus","children","className","design","placement","pointing","pointerRef","styles","trapFocus","variables","getA11yProps","debugName","rtl","mapPropsToStyles","basePlacement","mapPropsToInlineStyles","classes","ElementType","unhandledProps","handledProps","handleMouseEnter","e","handleMouseLeave","popupContentProps","root","getAttributes","forElements","onMouseEnter","onMouseLeave","popupContent","pointer","element","focusTrapZoneProps","length","as","autoFocusZoneProps","propTypes","createCommon","oneOf","bool","func","ref","oneOfType","object","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  AutoFocusZone,\n  AutoFocusZoneProps,\n  FocusTrapZone,\n  FocusTrapZoneProps,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PopperJs from '@popperjs/core';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n} from '../../utils';\nimport { getBasePlacement, PopperChildrenProps } from '../../utils/positioner';\n\nexport interface PopupContentSlotClassNames {\n  content: string;\n}\n\nexport interface PopupContentProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<never>;\n\n  /**\n   * Called after user's mouse enter.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<PopupContentProps>;\n\n  /**\n   * Called after user's mouse leave.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseLeave?: ComponentEventHandler<PopupContentProps>;\n\n  /** An actual placement value from Popper. */\n  placement?: PopperChildrenProps['placement'];\n\n  /** A popup can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /** A ref to a pointer element. */\n  pointerRef?: React.Ref<HTMLDivElement>;\n\n  /** Controls whether or not focus trap should be applied, using boolean or FocusTrapZoneProps type value. */\n  trapFocus?: boolean | FocusTrapZoneProps;\n\n  /** Controls whether or not auto focus should be applied, using boolean or AutoFocusZoneProps type value. */\n  autoFocus?: boolean | AutoFocusZoneProps;\n}\n\nexport type PopupContentStylesProps = Required<Pick<PopupContentProps, 'pointing'>> & {\n  basePlacement: PopperJs.BasePlacement;\n};\n\nexport const popupContentClassName = 'ui-popup__content';\nexport const popupContentSlotClassNames: PopupContentSlotClassNames = {\n  content: `${popupContentClassName}__content`,\n};\n\n/**\n * A PopupContent displays the content of a Popup component.\n */\nexport const PopupContent: ComponentWithAs<'div', PopupContentProps> &\n  FluentComponentStaticProps<PopupContentProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(PopupContent.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    autoFocus,\n    children,\n    className,\n    content,\n    design,\n    placement,\n    pointing,\n    pointerRef,\n    styles,\n    trapFocus,\n    variables,\n  } = props;\n\n  const getA11yProps = useAccessibility(accessibility, {\n    debugName: PopupContent.displayName,\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<PopupContentStylesProps>(PopupContent.displayName, {\n    className: popupContentClassName,\n    mapPropsToStyles: () => ({\n      basePlacement: getBasePlacement(placement, context.rtl),\n      pointing,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(PopupContent.handledProps, props);\n\n  const handleMouseEnter = e => {\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const handleMouseLeave = e => {\n    _.invoke(props, 'onMouseLeave', e, props);\n  };\n\n  const popupContentProps: PopupContentProps = getA11yProps('root', {\n    className: classes.root,\n    ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n    ...unhandledProps,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  });\n  const popupContent = (\n    <>\n      {pointing && <div className={classes.pointer} ref={pointerRef} />}\n      <div className={cx(popupContentSlotClassNames.content, classes.content)}>\n        {childrenExist(children) ? children : content}\n      </div>\n    </>\n  );\n\n  let element: React.ReactElement;\n\n  if (trapFocus) {\n    const focusTrapZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(trapFocus).length && trapFocus) as FocusTrapZoneProps),\n      as: ElementType,\n    };\n    element = <FocusTrapZone {...focusTrapZoneProps}>{popupContent}</FocusTrapZone>;\n  } else if (autoFocus) {\n    const autoFocusZoneProps = {\n      ...popupContentProps,\n      ...((_.keys(autoFocus).length && autoFocus) as AutoFocusZoneProps),\n      as: ElementType,\n    };\n    element = <AutoFocusZone {...autoFocusZoneProps}>{popupContent}</AutoFocusZone>;\n  } else {\n    element = <ElementType {...popupContentProps}>{popupContent}</ElementType>;\n  }\n\n  setEnd();\n\n  return element;\n};\n\nPopupContent.displayName = 'PopupContent';\n\nPopupContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  placement: PropTypes.oneOf<PopperJs.Placement>([\n    'auto-start',\n    'auto',\n    'auto-end',\n    'top-start',\n    'top',\n    'top-end',\n    'right-start',\n    'right',\n    'right-end',\n    'bottom-end',\n    'bottom',\n    'bottom-start',\n    'left-end',\n    'left',\n    'left-start',\n  ]),\n  pointing: PropTypes.bool,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pointerRef: customPropTypes.ref,\n  trapFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  autoFocus: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\nPopupContent.handledProps = Object.keys(PopupContent.propTypes) as any;\n\nPopupContent.create = createShorthandFactory({ Component: PopupContent, mappedProp: 'content' });\n"],"file":"PopupContent.js"}