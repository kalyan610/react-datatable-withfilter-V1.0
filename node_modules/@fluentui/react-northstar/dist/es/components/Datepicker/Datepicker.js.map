{"version":3,"sources":["components/Datepicker/Datepicker.tsx"],"names":["datepickerBehavior","DateRangeType","DayOfWeek","FirstWeekOfYear","DEFAULT_CALENDAR_STRINGS","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","useAutoControlled","CalendarIcon","customPropTypes","handleRef","PropTypes","React","commonPropTypes","createShorthand","createShorthandFactory","Button","Input","Popup","DatepickerCalendar","DatepickerCalendarCell","DatepickerCalendarCellButton","DatepickerCalendarHeader","DatepickerCalendarHeaderAction","DatepickerCalendarHeaderCell","DatepickerCalendarGrid","DatepickerCalendarGridRow","validateDate","format","datepickerClassName","formatRestrictedInput","restrictedOptions","localizationStrings","formattedString","minDate","maxDate","inputBoundedFormatString","formatMonthDayYear","inputMinBoundedFormatString","inputMaxBoundedFormatString","inputAriaLabel","Datepicker","props","context","displayName","telemetry","setStart","setEnd","inputRef","useRef","dateFormatting","formatDay","formatYear","formatMonthYear","parseDate","months","shortMonths","days","shortDays","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","goToToday","openCalendarTitle","inputPlaceholder","prevMonthAriaLabel","nextMonthAriaLabel","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","calendar","popup","input","className","design","styles","variables","allowManualInput","valueFormatter","date","defaultValue","defaultCalendarOpenState","value","calendarOpenState","initialValue","openState","setOpenState","defaultSelectedDate","selectedDate","undefined","setSelectedDate","useState","formattedDate","setFormattedDate","restrictedDatesOptions","restrictedDates","required","error","setError","calendarOptions","navigatedDate","today","Date","firstDayOfWeek","firstWeekOfYear","dateRangeType","daysToSelectInDayView","showWeekNumbers","workWeekDays","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","open","e","preventDefault","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","overrideDatepickerCalendarProps","predefinedProps","onDateChange","itemProps","targetDay","originalDate","calendarElement","defaultProps","overrideProps","overrideInputProps","onClick","onChange","target","parsedDate","validationError","onBlur","fallbackToLastCorrectDateOnBlur","futureFormattedDate","node","current","triggerButtonElement","inputOnly","disabled","element","unstable_wrapWithFocusZone","root","buttonOnly","placeholder","readOnly","trapFocus","disableFirstFocus","position","align","trigger","content","onOpenChange","type","propTypes","createCommon","itemShorthand","bool","func","onDateChangeError","instanceOf","arrayOf","oneOf","Object","keys","map","name","number","string","Monday","FirstDay","Day","create","Component","Calendar","CalendarHeader","CalendarHeaderAction","CalendarHeaderCell","CalendarCell","CalendarCellButton","CalendarGrid","CalendarGridRow"],"mappings":"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","sourcesContent":["import { Accessibility, datepickerBehavior, DatepickerBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  FirstWeekOfYear,\n  DEFAULT_CALENDAR_STRINGS,\n  IDayGridOptions,\n  ICalendarStrings,\n  IDatepickerOptions,\n  IRestrictedDatesOptions,\n} from '../../utils/date-time-utilities';\n\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n  useAutoControlled,\n} from '@fluentui/react-bindings';\n\nimport { CalendarIcon } from '@fluentui/react-icons-northstar';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport { handleRef } from '@fluentui/react-component-ref';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, createShorthandFactory, UIComponentProps } from '../../utils';\nimport { Button } from '../Button/Button';\nimport { Input, InputProps } from '../Input/Input';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { DatepickerCalendar, DatepickerCalendarProps } from './DatepickerCalendar';\nimport { DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeader } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarHeaderAction } from './DatepickerCalendarHeaderAction';\nimport { DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { DatepickerCalendarGrid } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow } from './DatepickerCalendarGridRow';\nimport { validateDate } from './validateDate';\nimport { format } from '@uifabric/utilities';\n\nexport interface DatepickerProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDatepickerOptions> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerBehaviorProps>;\n\n  /** Shorthand for the datepicker calendar. */\n  calendar?: ShorthandValue<DatepickerCalendarProps>;\n\n  /** Shorthand for the datepicker popup. */\n  popup?: ShorthandValue<PopupProps>;\n\n  /** Shorthand for the date text input. */\n  input?: ShorthandValue<InputProps>;\n\n  /** Datepicker shows it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Date needs to be entered, otherwise datepicker produces an error state. */\n  required?: boolean;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerProps & { value: Date }>;\n\n  /**\n   * Called on error when changing the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChangeError?: ComponentEventHandler<DatepickerProps & { error: string }>;\n\n  /** Target dates can be also entered through the input field. */\n  allowManualInput?: boolean;\n\n  /** The component automatically overrides faulty manual input upon blur. */\n  fallbackToLastCorrectDateOnBlur?: boolean;\n\n  /** Initial 'calendarOpenState' value. */\n  defaultCalendarOpenState?: boolean;\n\n  /** Controls the calendar's open state. */\n  calendarOpenState?: boolean;\n\n  /** Initial 'selectedDate' value. */\n  defaultSelectedDate?: Date;\n\n  /** Controls the calendar's 'selectedDate'. */\n  selectedDate?: Date;\n\n  /** Marks that the datepicker should only render the input field and not the trigger button with an icon. */\n  inputOnly?: boolean;\n\n  /** Marks that the datepicker should only render the trigger button with an icon and not the input field. */\n  buttonOnly?: boolean;\n}\n\nexport type DatepickerStylesProps = Pick<DatepickerProps, 'allowManualInput'>;\n\nexport const datepickerClassName = 'ui-datepicker';\n\nconst formatRestrictedInput = (restrictedOptions: IRestrictedDatesOptions, localizationStrings: ICalendarStrings) => {\n  let formattedString = '';\n  if (!!restrictedOptions.minDate && !!restrictedOptions.maxDate) {\n    formattedString = format(\n      localizationStrings.inputBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.minDate, localizationStrings),\n      localizationStrings.formatMonthDayYear(restrictedOptions.maxDate, localizationStrings),\n    );\n  } else if (!!restrictedOptions.minDate) {\n    formattedString = format(\n      localizationStrings.inputMinBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.minDate, localizationStrings),\n    );\n  } else if (!!restrictedOptions.maxDate) {\n    formattedString = format(\n      localizationStrings.inputMaxBoundedFormatString,\n      localizationStrings.formatMonthDayYear(restrictedOptions.maxDate, localizationStrings),\n    );\n  } else {\n    formattedString = localizationStrings.inputAriaLabel;\n  }\n\n  return formattedString;\n};\n\n/**\n * A Datepicker is a control which is used to display dates grid and allow user to select them.\n */\nexport const Datepicker: ComponentWithAs<'div', DatepickerProps> &\n  FluentComponentStaticProps<DatepickerProps> & {\n    Calendar: typeof DatepickerCalendar;\n    CalendarHeader: typeof DatepickerCalendarHeader;\n    CalendarHeaderAction: typeof DatepickerCalendarHeaderAction;\n    CalendarHeaderCell: typeof DatepickerCalendarHeaderCell;\n    CalendarCell: typeof DatepickerCalendarCell;\n    CalendarCellButton: typeof DatepickerCalendarCellButton;\n    CalendarGrid: typeof DatepickerCalendarGrid;\n    CalendarGridRow: typeof DatepickerCalendarGridRow;\n    Input: typeof Input;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Datepicker.displayName, context.telemetry);\n  setStart();\n  const inputRef = React.useRef<HTMLElement>();\n\n  const dateFormatting: ICalendarStrings = {\n    formatDay: props.formatDay,\n    formatYear: props.formatYear,\n    formatMonthDayYear: props.formatMonthDayYear,\n    formatMonthYear: props.formatMonthYear,\n    parseDate: props.parseDate,\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n    isRequiredErrorMessage: props.isRequiredErrorMessage,\n    invalidInputErrorMessage: props.invalidInputErrorMessage,\n    isOutOfBoundsErrorMessage: props.isOutOfBoundsErrorMessage,\n    goToToday: props.goToToday,\n    openCalendarTitle: props.openCalendarTitle,\n    inputPlaceholder: props.inputPlaceholder,\n    prevMonthAriaLabel: props.prevMonthAriaLabel,\n    nextMonthAriaLabel: props.nextMonthAriaLabel,\n    prevYearAriaLabel: props.prevYearAriaLabel,\n    nextYearAriaLabel: props.nextYearAriaLabel,\n    prevYearRangeAriaLabel: props.prevYearRangeAriaLabel,\n    nextYearRangeAriaLabel: props.nextYearRangeAriaLabel,\n    monthPickerHeaderAriaLabel: props.monthPickerHeaderAriaLabel,\n    yearPickerHeaderAriaLabel: props.yearPickerHeaderAriaLabel,\n    closeButtonAriaLabel: props.closeButtonAriaLabel,\n    weekNumberFormatString: props.weekNumberFormatString,\n    selectedDateFormatString: props.selectedDateFormatString,\n    todayDateFormatString: props.todayDateFormatString,\n    inputAriaLabel: props.inputAriaLabel,\n    inputBoundedFormatString: props.inputBoundedFormatString,\n    inputMinBoundedFormatString: props.inputMinBoundedFormatString,\n    inputMaxBoundedFormatString: props.inputMaxBoundedFormatString,\n  };\n\n  const { calendar, popup, input, className, design, styles, variables, formatMonthDayYear, allowManualInput } = props;\n  const valueFormatter = date => (date ? formatMonthDayYear(date, dateFormatting) : '');\n\n  const [openState, setOpenState] = useAutoControlled<boolean>({\n    defaultValue: props.defaultCalendarOpenState,\n    value: props.calendarOpenState,\n    initialValue: false,\n  });\n\n  const [selectedDate, setSelectedDate] = useAutoControlled<Date | undefined>({\n    defaultValue: props.defaultSelectedDate,\n    value: props.selectedDate,\n    initialValue: undefined,\n  });\n  const [formattedDate, setFormattedDate] = React.useState<string>(valueFormatter(selectedDate));\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate: props.minDate,\n    maxDate: props.maxDate,\n    restrictedDates: props.restrictedDates,\n  };\n\n  const [error, setError] = React.useState<string>(() =>\n    !!props.selectedDate || !!props.defaultSelectedDate\n      ? validateDate(selectedDate, formattedDate, restrictedDatesOptions, dateFormatting, props.required)\n      : '',\n  );\n\n  const calendarOptions: IDayGridOptions = {\n    selectedDate,\n    navigatedDate: !!selectedDate && !error ? selectedDate : props.today ?? new Date(),\n    firstDayOfWeek: props.firstDayOfWeek,\n    firstWeekOfYear: props.firstWeekOfYear,\n    dateRangeType: props.dateRangeType,\n    daysToSelectInDayView: props.daysToSelectInDayView,\n    today: props.today,\n    showWeekNumbers: props.showWeekNumbers,\n    workWeekDays: props.workWeekDays,\n    ...restrictedDatesOptions,\n  };\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Datepicker.handledProps, props);\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: Datepicker.displayName,\n    actionHandlers: {\n      open: e => {\n        if (allowManualInput) {\n          setOpenState(!openState);\n        } else {\n          // Keep popup open in case we can only enter the date through calendar.\n          setOpenState(true);\n        }\n\n        e.preventDefault();\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<DatepickerStylesProps>(Datepicker.displayName, {\n    className: datepickerClassName,\n    mapPropsToStyles: () => ({\n      allowManualInput,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const overrideDatepickerCalendarProps = (predefinedProps: DatepickerCalendarProps): DatepickerCalendarProps => ({\n    onDateChange: (e, itemProps) => {\n      const targetDay = itemProps.value;\n      setSelectedDate(targetDay.originalDate);\n      setOpenState(false);\n      setError('');\n      setFormattedDate(valueFormatter(targetDay.originalDate));\n\n      _.invoke(props, 'onDateChange', e, { itemProps, value: targetDay.originalDate });\n    },\n  });\n\n  const calendarElement = createShorthand(DatepickerCalendar, calendar, {\n    defaultProps: () => getA11yProps('calendar', { ...calendarOptions, ...dateFormatting }),\n    overrideProps: overrideDatepickerCalendarProps,\n  });\n\n  const overrideInputProps = (predefinedProps: InputProps): InputProps => ({\n    onClick: (e): void => {\n      if (allowManualInput) {\n        setOpenState(!openState);\n      } else {\n        // Keep popup open in case we can only enter the date through calendar.\n        setOpenState(true);\n      }\n\n      _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n    },\n    onChange: (e, target: { value: string }) => {\n      const parsedDate = props.parseDate(target.value);\n      const validationError = validateDate(parsedDate, target.value, calendarOptions, dateFormatting, props.required);\n      setError(validationError);\n      setFormattedDate(target.value);\n      if (!!validationError) {\n        _.invoke(props, 'onDateChangeError', e, { ...props, error: validationError });\n      } else {\n        setSelectedDate(parsedDate);\n        _.invoke(props, 'onDateChange', e, { ...props, value: parsedDate });\n      }\n\n      _.invoke(predefinedProps, 'onChange', e, predefinedProps);\n    },\n    onBlur: e => {\n      if (props.fallbackToLastCorrectDateOnBlur && !!error) {\n        const futureFormattedDate = valueFormatter(selectedDate);\n        const validationError = validateDate(\n          selectedDate,\n          futureFormattedDate,\n          calendarOptions,\n          dateFormatting,\n          props.required,\n        );\n        setError(validationError);\n        setFormattedDate(futureFormattedDate);\n        if (!!validationError) {\n          _.invoke(props, 'onDateChangeError', e, { ...props, error: validationError });\n        }\n      }\n\n      _.invoke(predefinedProps, 'onBlur', e, predefinedProps);\n    },\n\n    inputRef: (node: HTMLInputElement) => {\n      handleRef(predefinedProps.inputRef, node);\n      inputRef.current = node;\n    },\n  });\n\n  const triggerButtonElement = props.inputOnly ? null : (\n    <Button icon={<CalendarIcon />} title={props.openCalendarTitle} iconOnly disabled={props.disabled} type=\"button\" />\n  );\n\n  const element = getA11yProps.unstable_wrapWithFocusZone(\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {!props.buttonOnly &&\n        createShorthand(Input, input, {\n          defaultProps: () =>\n            getA11yProps('input', {\n              placeholder: props.inputPlaceholder,\n              disabled: props.disabled,\n              error: !!error,\n              value: formattedDate,\n              readOnly: !allowManualInput,\n              required: props.required,\n              'aria-label': formatRestrictedInput(restrictedDatesOptions, dateFormatting),\n            }),\n          overrideProps: overrideInputProps,\n        })}\n      {createShorthand(Popup, popup, {\n        defaultProps: () => ({\n          open: openState && !props.disabled,\n          trapFocus: {\n            disableFirstFocus: true,\n          },\n          position: 'below' as const,\n          align: 'start' as const,\n        }),\n        overrideProps: (predefinedProps: PopupProps): PopupProps => ({\n          trigger: predefinedProps.trigger ?? triggerButtonElement,\n          target: props.buttonOnly ? null : inputRef.current,\n          content: calendarElement,\n          onOpenChange: (e, { open }) => {\n            // In case the event is a click on input, we ignore such events as it should be directly handled by input.\n            if (!(e.type === 'click' && e.target === inputRef?.current)) {\n              setOpenState(open);\n              _.invoke(predefinedProps, 'onOpenChange', e, { open });\n            }\n          },\n        }),\n      })}\n    </ElementType>,\n  );\n  setEnd();\n  return element;\n};\n\nDatepicker.displayName = 'Datepicker';\n\nDatepicker.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendar: customPropTypes.itemShorthand,\n  popup: customPropTypes.itemShorthand,\n  input: customPropTypes.itemShorthand,\n\n  disabled: PropTypes.bool,\n  required: PropTypes.bool,\n  onDateChange: PropTypes.func,\n  onDateChangeError: PropTypes.func,\n  allowManualInput: PropTypes.bool,\n  fallbackToLastCorrectDateOnBlur: PropTypes.bool,\n  defaultCalendarOpenState: PropTypes.bool,\n  calendarOpenState: PropTypes.bool,\n\n  selectedDate: PropTypes.instanceOf(Date),\n  defaultSelectedDate: PropTypes.instanceOf(Date),\n\n  inputOnly: PropTypes.bool,\n  buttonOnly: PropTypes.bool,\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  goToToday: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepicker.defaultProps = {\n  accessibility: datepickerBehavior,\n\n  inputOnly: false,\n  buttonOnly: false,\n  calendar: {},\n  popup: {},\n  input: {},\n\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n\n  fallbackToLastCorrectDateOnBlur: true,\n  allowManualInput: true,\n  required: false,\n\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepicker.handledProps = Object.keys(Datepicker.propTypes) as any;\n\nDatepicker.create = createShorthandFactory({ Component: Datepicker });\n\nDatepicker.Calendar = DatepickerCalendar;\nDatepicker.CalendarHeader = DatepickerCalendarHeader;\nDatepicker.CalendarHeaderAction = DatepickerCalendarHeaderAction;\nDatepicker.CalendarHeaderCell = DatepickerCalendarHeaderCell;\nDatepicker.CalendarCell = DatepickerCalendarCell;\nDatepicker.CalendarCellButton = DatepickerCalendarCellButton;\nDatepicker.CalendarGrid = DatepickerCalendarGrid;\nDatepicker.CalendarGridRow = DatepickerCalendarGridRow;\nDatepicker.Input = Input;\n"],"file":"Datepicker.js"}