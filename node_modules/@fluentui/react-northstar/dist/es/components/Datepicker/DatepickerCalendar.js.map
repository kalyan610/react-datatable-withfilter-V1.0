{"version":3,"sources":["components/Datepicker/DatepickerCalendar.tsx"],"names":["datepickerCalendarBehavior","DateRangeType","DayOfWeek","DAYS_IN_WEEK","FirstWeekOfYear","getDayGrid","DEFAULT_CALENDAR_STRINGS","compareDates","compareDatePart","getMonthStart","getMonthEnd","getStartDateOfWeek","getEndDateOfWeek","getElementType","useAccessibility","useFluentContext","useStyles","useTelemetry","useUnhandledProps","customPropTypes","PropTypes","React","commonPropTypes","createShorthand","DatepickerCalendarGrid","DatepickerCalendarGridRow","DatepickerCalendarHeader","DatepickerCalendarCell","DatepickerCalendarCellButton","DatepickerCalendarHeaderCell","navigateToNewDate","contstraintNavigatedDate","datepickerCalendarClassName","normalizeDateInGrid","date","result","Date","getTime","setDate","DatepickerCalendar","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","calendarHeaderCell","calendarCell","calendarCellButton","calendarGrid","calendarGridRow","header","selectedDate","navigatedDate","firstDayOfWeek","today","formatMonthDayYear","formatMonthYear","shortDays","days","minDate","maxDate","restrictedDates","restrictedDatesOptions","ElementType","unhandledProps","handledProps","updateNavigatedDate","shouldFocusInDayGrid","setShouldFocusInDayGrid","setGridNavigatedDate","getA11yProps","accessibility","debugName","actionHandlers","addWeek","e","preventDefault","newNavigatedDate","gridNavigatedDate","subtractWeek","addDay","subtractDay","moveToStartOfWeek","targetDate","moveToEndOfWeek","moveToStartOfColumn","targetDayOfWeek","getDay","visibleGrid","day","originalDate","moveToEndOfColumn","length","rtl","useState","normalizedGridDate","setNormalizedGridDate","mapPropsToInlineStyles","classes","useMemo","dayGridOptions","weeksToShow","firstWeekOfYear","dateRangeType","daysToSelectInDayView","showWeekNumbers","workWeekDays","grid","slice","useEffect","newNormalizedDate","gridContainsNavigatedDate","find","week","dateFormatting","months","shortMonths","focusDateRef","useRef","changeMonth","nextMonth","prevMonthOutOfBounds","nextMonthOutOfBounds","current","focus","renderCell","content","defaultProps","key","selected","isSelected","disabled","isInBounds","quiet","isInMonth","renderCellButton","overrideProps","predefinedProps","onFocus","onClick","value","ref","renderWeekRow","element","root","label","disabledNextButton","disabledPreviousButton","prevMonthAriaLabel","nextMonthAriaLabel","onPreviousClick","data","onNextClick","children","dayNumber","propTypes","createCommon","itemShorthand","onDateChange","func","instanceOf","arrayOf","oneOf","Object","keys","map","name","number","bool","formatDay","formatYear","parseDate","string","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","goToToday","openCalendarTitle","inputPlaceholder","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString","Monday","FirstDay","Day"],"mappings":";;;;AAAA,SAAwBA,0BAAxB,QAA2F,yBAA3F;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,eAJF,EAKEC,UALF,EAOEC,wBAPF,EAYEC,YAZF,EAaEC,eAbF,EAcEC,aAdF,EAeEC,WAfF,EAgBEC,kBAhBF,EAiBEC,gBAjBF,QAkBO,iCAlBP;AAmBA,SAEEC,cAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,SALF,EAMEC,YANF,EAOEC,iBAPF,QAQO,0BARP;AASA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AAEA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,eAAT,EAA0BC,eAA1B,QAAmE,aAAnE;AACA,SAASC,sBAAT,QAAoE,0BAApE;AACA,SAASC,yBAAT,QAA0E,6BAA1E;AACA,SAASC,wBAAT,QAAwE,4BAAxE;AACA,SAAsCC,sBAAtC,QAAoE,0BAApE;AACA,SAA4CC,4BAA5C,QAAgF,gCAAhF;AACA,SAA4CC,4BAA5C,QAAgF,gCAAhF;AACA,SAASC,iBAAT,EAA4BC,wBAA5B,QAA4D,qBAA5D;AA4CA,OAAO,IAAMC,2BAA2B,GAAG,yBAApC;;AAEP,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAsB;AAChD,MAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,OAAL,EAAT,CAAf;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAe,CAAf;AACA,SAAOH,MAAP;AACD,CAJD;AAMA;;;;;AAGA,OAAO,IAAMI,kBAAN;AAAA,MAAMA,kBACwC,GAAG,SAD3CA,kBAC2C,CAAAC,KAAK,EAAI;AAC/D,QAAMC,OAAO,GAAG1B,gBAAgB,EAAhC;;AAD+D,wBAElCE,YAAY,CAACsB,kBAAkB,CAACG,WAApB,EAAiCD,OAAO,CAACE,SAAzC,CAFsB;AAAA,QAEvDC,QAFuD,iBAEvDA,QAFuD;AAAA,QAE7CC,MAF6C,iBAE7CA,MAF6C;;AAG/DD,IAAAA,QAAQ;AAHuD,QAM7DE,SAN6D,GA2B3DN,KA3B2D,CAM7DM,SAN6D;AAAA,QAO7DC,MAP6D,GA2B3DP,KA3B2D,CAO7DO,MAP6D;AAAA,QAQ7DC,MAR6D,GA2B3DR,KA3B2D,CAQ7DQ,MAR6D;AAAA,QAS7DC,SAT6D,GA2B3DT,KA3B2D,CAS7DS,SAT6D;AAAA,QAU7DC,kBAV6D,GA2B3DV,KA3B2D,CAU7DU,kBAV6D;AAAA,QAW7DC,YAX6D,GA2B3DX,KA3B2D,CAW7DW,YAX6D;AAAA,QAY7DC,kBAZ6D,GA2B3DZ,KA3B2D,CAY7DY,kBAZ6D;AAAA,QAa7DC,YAb6D,GA2B3Db,KA3B2D,CAa7Da,YAb6D;AAAA,QAc7DC,eAd6D,GA2B3Dd,KA3B2D,CAc7Dc,eAd6D;AAAA,QAe7DC,MAf6D,GA2B3Df,KA3B2D,CAe7De,MAf6D;AAAA,QAgB7DC,YAhB6D,GA2B3DhB,KA3B2D,CAgB7DgB,YAhB6D;AAAA,QAiB7DC,aAjB6D,GA2B3DjB,KA3B2D,CAiB7DiB,aAjB6D;AAAA,QAkB7DC,cAlB6D,GA2B3DlB,KA3B2D,CAkB7DkB,cAlB6D;AAAA,QAmB7DC,KAnB6D,GA2B3DnB,KA3B2D,CAmB7DmB,KAnB6D;AAAA,QAoB7DC,kBApB6D,GA2B3DpB,KA3B2D,CAoB7DoB,kBApB6D;AAAA,QAqB7DC,eArB6D,GA2B3DrB,KA3B2D,CAqB7DqB,eArB6D;AAAA,QAsB7DC,SAtB6D,GA2B3DtB,KA3B2D,CAsB7DsB,SAtB6D;AAAA,QAuB7DC,IAvB6D,GA2B3DvB,KA3B2D,CAuB7DuB,IAvB6D;AAAA,QAwB7DC,OAxB6D,GA2B3DxB,KA3B2D,CAwB7DwB,OAxB6D;AAAA,QAyB7DC,OAzB6D,GA2B3DzB,KA3B2D,CAyB7DyB,OAzB6D;AAAA,QA0B7DC,eA1B6D,GA2B3D1B,KA3B2D,CA0B7D0B,eA1B6D;AA6B/D,QAAMC,sBAA+C,GAAG;AACtDH,MAAAA,OAAO,EAAPA,OADsD;AAEtDC,MAAAA,OAAO,EAAPA,OAFsD;AAGtDC,MAAAA,eAAe,EAAfA;AAHsD,KAAxD;AAKA,QAAME,WAAW,GAAGvD,cAAc,CAAC2B,KAAD,CAAlC;AACA,QAAM6B,cAAc,GAAGnD,iBAAiB,CAACqB,kBAAkB,CAAC+B,YAApB,EAAkC9B,KAAlC,CAAxC;;AAEA,QAAM+B,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACrC,IAAD,EAAgB;AAC1C,UAAI,CAAC,CAACA,IAAN,EAAY;AACV,YAAI,CAACsC,oBAAL,EAA2B;AACzBC,UAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;;AACDC,QAAAA,oBAAoB,CAACxC,IAAD,CAApB;AACD;AACF,KAPD;;AAQA,QAAMyC,YAAY,GAAG7D,gBAAgB,CAAC0B,KAAK,CAACoC,aAAP,EAAsB;AACzDC,MAAAA,SAAS,EAAEtC,kBAAkB,CAACG,WAD2B;AAEzDoC,MAAAA,cAAc,EAAE;AACdC,QAAAA,OAAO,EAAE,iBAAAC,CAAC,EAAI;AACZA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMC,gBAAgB,GAAGpD,iBAAiB,CAACqD,iBAAD,EAAoB,MAApB,EAA4B,CAA5B,EAA+BhB,sBAA/B,EAAuD,IAAvD,CAA1C;AACAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SALa;AAMdE,QAAAA,YAAY,EAAE,sBAAAJ,CAAC,EAAI;AACjBA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMC,gBAAgB,GAAGpD,iBAAiB,CAACqD,iBAAD,EAAoB,MAApB,EAA4B,CAAC,CAA7B,EAAgChB,sBAAhC,EAAwD,IAAxD,CAA1C;AACAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SAVa;AAWdG,QAAAA,MAAM,EAAE,gBAAAL,CAAC,EAAI;AACXA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMC,gBAAgB,GAAGpD,iBAAiB,CAACqD,iBAAD,EAAoB,KAApB,EAA2B,CAA3B,EAA8BhB,sBAA9B,EAAsD,IAAtD,CAA1C;AACAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SAfa;AAgBdI,QAAAA,WAAW,EAAE,qBAAAN,CAAC,EAAI;AAChBA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMC,gBAAgB,GAAGpD,iBAAiB,CAACqD,iBAAD,EAAoB,KAApB,EAA2B,CAAC,CAA5B,EAA+BhB,sBAA/B,EAAuD,IAAvD,CAA1C;AACAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SApBa;AAqBdK,QAAAA,iBAAiB,EAAE,2BAAAP,CAAC,EAAI;AACtBA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMO,UAAU,GAAG7E,kBAAkB,CAACwE,iBAAD,EAAoBzB,cAApB,CAArC;AACA,cAAMwB,gBAAgB,GAAGnD,wBAAwB,CAC/CoD,iBAD+C,EAE/CK,UAF+C,EAG/C,CAAC,CAH8C,EAI/CrB,sBAJ+C,EAK/C,IAL+C,CAAjD;AAQAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SAjCa;AAkCdO,QAAAA,eAAe,EAAE,yBAAAT,CAAC,EAAI;AACpBA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMO,UAAU,GAAG5E,gBAAgB,CAACuE,iBAAD,EAAoBzB,cAApB,CAAnC;AACA,cAAMwB,gBAAgB,GAAGnD,wBAAwB,CAC/CoD,iBAD+C,EAE/CK,UAF+C,EAG/C,CAAC,CAH8C,EAI/CrB,sBAJ+C,EAK/C,IAL+C,CAAjD;AAQAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SA9Ca;AA+CdQ,QAAAA,mBAAmB,EAAE,6BAAAV,CAAC,EAAI;AAAA;;AACxBA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMU,eAAe,GAAGR,iBAAiB,CAACS,MAAlB,EAAxB;AACA,cAAMJ,UAAU,aAAG,MAAOK,WAAW,CAAC,CAAD,CAAlB,EAAuB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,YAAJ,CAAiBH,MAAjB,OAA8BD,eAAlC;AAAA,WAA1B,CAAH,qBAAG,OAA8EI,YAAjG;AAEA,cAAMb,gBAAgB,GAAGnD,wBAAwB,CAC/CoD,iBAD+C,EAE/CK,UAF+C,EAG/C,CAAC,CAH8C,EAI/CrB,sBAJ+C,EAK/C,IAL+C,CAAjD;AAQAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD,SA7Da;AA8Ddc,QAAAA,iBAAiB,EAAE,2BAAAhB,CAAC,EAAI;AAAA;;AACtBA,UAAAA,CAAC,CAACC,cAAF;AACA,cAAMU,eAAe,GAAGR,iBAAiB,CAACS,MAAlB,EAAxB;AACA,cAAMJ,UAAU,aAAG,MACjBK,WAAW,CAACA,WAAW,CAACI,MAAZ,GAAqB,CAAtB,CADM,EAEjB,UAAAH,GAAG;AAAA,mBAAIA,GAAG,CAACC,YAAJ,CAAiBH,MAAjB,OAA8BD,eAAlC;AAAA,WAFc,CAAH,qBAAG,OAGhBI,YAHH;AAKA,cAAMb,gBAAgB,GAAGnD,wBAAwB,CAC/CoD,iBAD+C,EAE/CK,UAF+C,EAG/C,CAAC,CAH8C,EAI/CrB,sBAJ+C,EAK/C,IAL+C,CAAjD;AAQAI,UAAAA,mBAAmB,CAACW,gBAAD,CAAnB;AACD;AA/Ea,OAFyC;AAmFzDgB,MAAAA,GAAG,EAAEzD,OAAO,CAACyD;AAnF4C,KAAtB,CAArC;;AA7C+D,0BAmIb7E,KAAK,CAAC8E,QAAN,CAChD;AAAA,aAAM,IAAI/D,IAAJ,CAAS,CAACqB,aAAa,IAAIE,KAAjB,IAA0B,IAAIvB,IAAJ,EAA3B,EAAuCC,OAAvC,EAAT,CAAN;AAAA,KADgD,CAnIa;AAAA,QAmIxD8C,iBAnIwD;AAAA,QAmIrCT,oBAnIqC;;AAAA,2BAsIXrD,KAAK,CAAC8E,QAAN,CAAqB;AAAA,aACvElE,mBAAmB,CAACkD,iBAAD,CADoD;AAAA,KAArB,CAtIW;AAAA,QAsIxDiB,kBAtIwD;AAAA,QAsIpCC,qBAtIoC;;AAAA,2BA0IPhF,KAAK,CAAC8E,QAAN,CAAwB,IAAxB,CA1IO;AAAA,QA0IxD3B,oBA1IwD;AAAA,QA0IlCC,uBA1IkC;;AAAA,qBA4I3CzD,SAAS,CAAgCuB,kBAAkB,CAACG,WAAnD,EAAgE;AAC3FI,MAAAA,SAAS,EAAEd,2BADgF;AAE3FsE,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7BxD,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAFmE;AAQ3FiD,MAAAA,GAAG,EAAEzD,OAAO,CAACyD;AAR8E,KAAhE,CA5IkC;AAAA,QA4IvDK,OA5IuD,cA4IvDA,OA5IuD;;AAuJ/D,QAAMV,WAAW,GAAGxE,KAAK,CAACmF,OAAN,CAAwB,YAAM;AAChD,UAAMC,cAA+B,GAAG;AACtCjD,QAAAA,YAAY,EAAZA,YADsC;AAEtCC,QAAAA,aAAa,EAAE2C,kBAFuB;AAGtCM,QAAAA,WAAW,EAAElE,KAAK,CAACkE,WAHmB;AAItChD,QAAAA,cAAc,EAAElB,KAAK,CAACkB,cAJgB;AAKtCiD,QAAAA,eAAe,EAAEnE,KAAK,CAACmE,eALe;AAMtCC,QAAAA,aAAa,EAAEpE,KAAK,CAACoE,aANiB;AAOtCC,QAAAA,qBAAqB,EAAErE,KAAK,CAACqE,qBAPS;AAQtClD,QAAAA,KAAK,EAAEnB,KAAK,CAACmB,KARyB;AAStCmD,QAAAA,eAAe,EAAEtE,KAAK,CAACsE,eATe;AAUtCC,QAAAA,YAAY,EAAEvE,KAAK,CAACuE,YAVkB;AAWtC/C,QAAAA,OAAO,EAAExB,KAAK,CAACwB,OAXuB;AAYtCC,QAAAA,OAAO,EAAEzB,KAAK,CAACyB,OAZuB;AAatCC,QAAAA,eAAe,EAAE1B,KAAK,CAAC0B;AAbe,OAAxC;AAeA,UAAM8C,IAAI,GAAG3G,UAAU,CAACoG,cAAD,CAAvB;AACA,aAAOO,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcD,IAAI,CAACf,MAAL,GAAc,CAA5B,CAAP,CAjBgD,CAiBT;AACxC,KAlBmB,EAkBjB,CAACzC,YAAD,EAAe4C,kBAAf,EAAmC5D,KAAnC,CAlBiB,CAApB;AAoBAnB,IAAAA,KAAK,CAAC6F,SAAN,CAAgB,YAAM;AACpB,UAAMC,iBAAiB,GAAGlF,mBAAmB,CAACkD,iBAAD,CAA7C;;AAEA,UAAI3E,eAAe,CAAC2G,iBAAD,EAAoBf,kBAApB,CAAnB,EAA4D;AAC1D;AACA,YAAMgB,yBAAyB,GAAGvB,WAAW,CAACwB,IAAZ,CAAiB,UAAAC,IAAI;AAAA,iBACrDA,IAAI,CAACD,IAAL,CAAU,UAAAvB,GAAG;AAAA,mBAAItF,eAAe,CAACsF,GAAG,CAACC,YAAL,EAAmBZ,iBAAnB,CAAf,KAAyD,CAA7D;AAAA,WAAb,CADqD;AAAA,SAArB,CAAlC;;AAGA,YAAI,CAACiC,yBAAL,EAAgC;AAC9Bf,UAAAA,qBAAqB,CAACc,iBAAD,CAArB;AACD;AACF;AACF,KAZD,EAYG,CAAChC,iBAAD,EAAoBU,WAApB,EAAiCO,kBAAjC,CAZH;AAcA,QAAMmB,cAAgC,GAAG;AACvCC,MAAAA,MAAM,EAAEhF,KAAK,CAACgF,MADyB;AAEvCC,MAAAA,WAAW,EAAEjF,KAAK,CAACiF,WAFoB;AAGvC1D,MAAAA,IAAI,EAAEvB,KAAK,CAACuB,IAH2B;AAIvCD,MAAAA,SAAS,EAAEtB,KAAK,CAACsB;AAJsB,KAAzC;AAOA,QAAM4D,YAAY,GAAGrG,KAAK,CAACsG,MAAN,CAAa,IAAb,CAArB;;AAEA,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAwB;AAC1C,UAAM3C,gBAAgB,GAAGpD,iBAAiB,CACxCsE,kBADwC,EAExC,OAFwC,EAGxCyB,SAAS,GAAG,CAAH,GAAO,CAAC,CAHuB,EAIxC1D,sBAJwC,EAKxC,IALwC,CAA1C;;AAOA,UAAI,CAAC,CAACe,gBAAN,EAAwB;AACtBR,QAAAA,oBAAoB,CAACQ,gBAAD,CAApB;AACAT,QAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACA4B,QAAAA,qBAAqB,CAACpE,mBAAmB,CAACiD,gBAAD,CAApB,CAArB;AACD;AACF,KAbD;;AAeA,QAAM4C,oBAAoB,GAAG9D,OAAO,GAAGxD,eAAe,CAACwD,OAAD,EAAUvD,aAAa,CAAC2F,kBAAD,CAAvB,CAAf,IAA+D,CAAlE,GAAsE,KAA1G;AACA,QAAM2B,oBAAoB,GAAG9D,OAAO,GAAGzD,eAAe,CAACE,WAAW,CAAC0F,kBAAD,CAAZ,EAAkCnC,OAAlC,CAAf,IAA6D,CAAhE,GAAoE,KAAxG;AACA5C,IAAAA,KAAK,CAAC6F,SAAN,CAAgB,YAAM;AACpB,UAAI1C,oBAAJ,EAA0B;AAAA;;AACxB,iCAAAkD,YAAY,CAACM,OAAb,2CAAsBC,KAAtB;AACD;AACF,KAJD,EAIG,CAAC9C,iBAAD,EAAoBiB,kBAApB,EAAwC5B,oBAAxC,CAJH;;AAMA,QAAM0D,UAAU,GAAG,SAAbA,UAAa,CAACpC,GAAD,EAAYqC,OAAZ;AAAA,aACjB5G,eAAe,CAACI,sBAAD,EAAyBwB,YAAzB,EAAuC;AACpDiF,QAAAA,YAAY,EAAE;AAAA;;AAAA,iBACZzD,YAAY,CAAC,cAAD,EAAiB;AAC3BwD,YAAAA,OAAO,EAAPA,OAD2B;AAE3BE,YAAAA,GAAG,EAAEvC,GAAG,CAACuC,GAFkB;AAG3BC,YAAAA,QAAQ,EAAExC,GAAG,CAACyC,UAHa;AAI3BC,YAAAA,QAAQ,EAAE,CAAC1C,GAAG,CAAC2C,UAJY;AAK3BC,YAAAA,KAAK,EAAE,CAAC5C,GAAG,CAAC6C,SALe;AAM3BhF,YAAAA,KAAK,EAAEpD,YAAY,CAACuF,GAAG,CAACC,YAAL,kBAAmBvD,KAAK,CAACmB,KAAzB,2BAAkC,IAAIvB,IAAJ,EAAlC;AANQ,WAAjB,CADA;AAAA;AADsC,OAAvC,CADE;AAAA,KAAnB;;AAaA,QAAMwG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC9C,GAAD;AAAA,aACvBvE,eAAe,CAACK,4BAAD,EAA+BwB,kBAA/B,EAAmD;AAChEgF,QAAAA,YAAY,EAAE;AAAA;;AAAA,iBACZzD,YAAY,CAAC,cAAD,EAAiB;AAC3BwD,YAAAA,OAAO,EAAErC,GAAG,CAAC5D,IADc;AAE3B,0BAAc0B,kBAAkB,CAACkC,GAAG,CAACC,YAAL,EAAmBwB,cAAnB,CAFL;AAG3Be,YAAAA,QAAQ,EAAExC,GAAG,CAACyC,UAHa;AAI3BC,YAAAA,QAAQ,EAAE,CAAC1C,GAAG,CAAC2C,UAJY;AAK3BC,YAAAA,KAAK,EAAE,CAAC5C,GAAG,CAAC6C,SALe;AAM3BhF,YAAAA,KAAK,EAAEpD,YAAY,CAACuF,GAAG,CAACC,YAAL,mBAAmBvD,KAAK,CAACmB,KAAzB,4BAAkC,IAAIvB,IAAJ,EAAlC;AANQ,WAAjB,CADA;AAAA,SADkD;AAUhEyG,QAAAA,aAAa,EAAE,uBACbC,eADa;AAAA,iBAEkE;AAC/EC,YAAAA,OAAO,EAAE,iBAAA/D,CAAC,EAAI;AACZN,cAAAA,oBAAoB,CAACoB,GAAG,CAACC,YAAL,CAApB;;AACA,sBAAS+C,eAAT,EAA0B,SAA1B,EAAqC9D,CAArC,EAAwC8D,eAAxC;AACD,aAJ8E;AAK/EE,YAAAA,OAAO,EAAE,iBAAAhE,CAAC,EAAI;AACZ,sBAASxC,KAAT,EAAgB,cAAhB,EAAgCwC,CAAhC,oBAAwCxC,KAAxC;AAA+CyG,gBAAAA,KAAK,EAAEnD;AAAtD;;AACA,sBAASgD,eAAT,EAA0B,SAA1B,EAAqC9D,CAArC,EAAwC8D,eAAxC;AACD,aAR8E;AAS/EI,YAAAA,GAAG,EAAE3I,YAAY,CAAC4E,iBAAD,EAAoBW,GAAG,CAACC,YAAxB,CAAZ,GAAoD2B,YAApD,GAAmE;AATO,WAFlE;AAAA;AAViD,OAAnD,CADQ;AAAA,KAAzB;;AAyBA,QAAMyB,aAAa,GAAG,SAAhBA,aAAgB,CAAC7B,IAAD;AAAA,aAAkB,KAAMA,IAAN,EAAY,UAACxB,GAAD;AAAA,eAAeoC,UAAU,CAACpC,GAAD,EAAM8C,gBAAgB,CAAC9C,GAAD,CAAtB,CAAzB;AAAA,OAAZ,CAAlB;AAAA,KAAtB;;AAEA,QAAMsD,OAAO,gBACX,oBAAC,WAAD,EACMzE,YAAY,CAAC,MAAD;AACd7B,MAAAA,SAAS,EAAEyD,OAAO,CAAC8C;AADL,OAEXhF,cAFW,EADlB,EAMG9C,eAAe,CAACG,wBAAD,EAA2B6B,MAA3B,EAAmC;AACjD6E,MAAAA,YAAY,EAAE;AAAA,eAAO;AACnBkB,UAAAA,KAAK,EAAEzF,eAAe,CAACuC,kBAAD,EAAqBmB,cAArB,CADH;AAEnB,wBAAc1D,eAAe,CAACuC,kBAAD,EAAqBmB,cAArB,CAFV;AAGnBgC,UAAAA,kBAAkB,EAAExB,oBAHD;AAInByB,UAAAA,sBAAsB,EAAE1B,oBAJL;AAKnB2B,UAAAA,kBAAkB,EAAEjH,KAAK,CAACiH,kBALP;AAMnBC,UAAAA,kBAAkB,EAAElH,KAAK,CAACkH;AANP,SAAP;AAAA,OADmC;AASjDb,MAAAA,aAAa,EAAE,uBAACC,eAAD;AAAA,eAAoF;AACjGa,UAAAA,eAAe,EAAE,yBAAC3E,CAAD,EAAI4E,IAAJ,EAAa;AAC5BhC,YAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,oBAASkB,eAAT,EAA0B,iBAA1B,EAA6C9D,CAA7C,EAAgD4E,IAAhD;AACD,WAJgG;AAKjGC,UAAAA,WAAW,EAAE,qBAAC7E,CAAD,EAAI4E,IAAJ,EAAa;AACxBhC,YAAAA,WAAW,CAAC,IAAD,CAAX;;AACA,oBAASkB,eAAT,EAA0B,aAA1B,EAAyC9D,CAAzC,EAA4C4E,IAA5C;AACD;AARgG,SAApF;AAAA;AATkC,KAAnC,CANlB,EA0BGrI,eAAe,CAACC,sBAAD,EAAyB6B,YAAzB,EAAuC;AACrD+E,MAAAA,YAAY,EAAE;AAAA,eACZzD,YAAY,CAAC,cAAD,EAAiB;AAC3BwD,UAAAA,OAAO,eACL,uDACE,mCACG5G,eAAe,CAACE,yBAAD,EAA4B6B,eAA5B,EAA6C;AAC3D8E,YAAAA,YAAY,EAAE;AAAA,qBACZzD,YAAY,CAAC,iBAAD,EAAoB;AAC9BmF,gBAAAA,QAAQ,EAAE,OAAQ3J,YAAR,EAAsB,UAAA4J,SAAS;AAAA,yBACvCxI,eAAe,CAACM,4BAAD,EAA+BqB,kBAA/B,EAAmD;AAChEkF,oBAAAA,YAAY,EAAE;AAAA,6BACZzD,YAAY,CAAC,oBAAD,EAAuB;AACjC,sCAAcZ,IAAI,CAAC,CAACgG,SAAS,GAAGrG,cAAb,IAA+BvD,YAAhC,CADe;AAEjCgI,wBAAAA,OAAO,EAAErE,SAAS,CAAC,CAACiG,SAAS,GAAGrG,cAAb,IAA+BvD,YAAhC,CAFe;AAGjCkI,wBAAAA,GAAG,EAAE0B;AAH4B,uBAAvB,CADA;AAAA;AADkD,mBAAnD,CADwB;AAAA,iBAA/B;AADoB,eAApB,CADA;AAAA;AAD6C,WAA7C,CADlB,CADF,eAkBE,mCACG,KAAMlE,WAAN,EAAmB,UAAAyB,IAAI;AAAA,mBACtB/F,eAAe,CAACE,yBAAD,EAA4B6B,eAA5B,EAA6C;AAC1D8E,cAAAA,YAAY,EAAE;AAAA,uBACZzD,YAAY,CAAC,iBAAD,EAAoB;AAC9BmF,kBAAAA,QAAQ,EAAEX,aAAa,CAAC7B,IAAD,CADO;AAE9Be,kBAAAA,GAAG,EAAEf,IAAI,CAAC,CAAD,CAAJ,CAAQe;AAFiB,iBAApB,CADA;AAAA;AAD4C,aAA7C,CADO;AAAA,WAAvB,CADH,CAlBF;AAFyB,SAAjB,CADA;AAAA;AADuC,KAAvC,CA1BlB,CADF;AAkEAxF,IAAAA,MAAM;AACN,WAAOuG,OAAP;AACD,GAtUM;;AAwUP7G,EAAAA,kBAAkB,CAACG,WAAnB,GAAiC,oBAAjC;AAEAH,EAAAA,kBAAkB,CAACyH,SAAnB,qBACK1I,eAAe,CAAC2I,YAAhB,EADL;AAEE9G,IAAAA,YAAY,EAAEhC,eAAe,CAAC+I,aAFhC;AAGE9G,IAAAA,kBAAkB,EAAEjC,eAAe,CAAC+I,aAHtC;AAIEhH,IAAAA,kBAAkB,EAAE/B,eAAe,CAAC+I,aAJtC;AAKE3G,IAAAA,MAAM,EAAEpC,eAAe,CAAC+I,aAL1B;AAME7G,IAAAA,YAAY,EAAElC,eAAe,CAAC+I,aANhC;AAOE5G,IAAAA,eAAe,EAAEnC,eAAe,CAAC+I,aAPnC;AAQEC,IAAAA,YAAY,EAAE/I,SAAS,CAACgJ,IAR1B;AASE5G,IAAAA,YAAY,EAAEpC,SAAS,CAACiJ,UAAV,CAAqBjI,IAArB,CAThB;AAUEqB,IAAAA,aAAa,EAAErC,SAAS,CAACiJ,UAAV,CAAqBjI,IAArB,CAVjB;AAYE4B,IAAAA,OAAO,EAAE5C,SAAS,CAACiJ,UAAV,CAAqBjI,IAArB,CAZX;AAaE6B,IAAAA,OAAO,EAAE7C,SAAS,CAACiJ,UAAV,CAAqBjI,IAArB,CAbX;AAcE8B,IAAAA,eAAe,EAAE9C,SAAS,CAACkJ,OAAV,CAAkBlJ,SAAS,CAACiJ,UAAV,CAAqBjI,IAArB,CAAlB,CAdnB;AAgBEsB,IAAAA,cAAc,EAAEtC,SAAS,CAACmJ,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYvK,SAAZ,EAAuBwK,GAAvB,CAA2B,UAAAC,IAAI;AAAA,aAAIzK,SAAS,CAACyK,IAAD,CAAb;AAAA,KAA/B,CAAhB,CAhBlB;AAiBEhE,IAAAA,eAAe,EAAEvF,SAAS,CAACmJ,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYrK,eAAZ,EAA6BsK,GAA7B,CAAiC,UAAAC,IAAI;AAAA,aAAIvK,eAAe,CAACuK,IAAD,CAAnB;AAAA,KAArC,CAAhB,CAjBnB;AAkBE/D,IAAAA,aAAa,EAAExF,SAAS,CAACmJ,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYxK,aAAZ,EAA2ByK,GAA3B,CAA+B,UAAAC,IAAI;AAAA,aAAI1K,aAAa,CAAC0K,IAAD,CAAjB;AAAA,KAAnC,CAAhB,CAlBjB;AAmBE9D,IAAAA,qBAAqB,EAAEzF,SAAS,CAACwJ,MAnBnC;AAoBEjH,IAAAA,KAAK,EAAEvC,SAAS,CAACiJ,UAAV,CAAqBjI,IAArB,CApBT;AAqBE0E,IAAAA,eAAe,EAAE1F,SAAS,CAACyJ,IArB7B;AAsBE9D,IAAAA,YAAY,EAAE3F,SAAS,CAACkJ,OAAV,CAAkBlJ,SAAS,CAACmJ,KAAV,CAAgBC,MAAM,CAACC,IAAP,CAAYvK,SAAZ,EAAuBwK,GAAvB,CAA2B,UAAAC,IAAI;AAAA,aAAIzK,SAAS,CAACyK,IAAD,CAAb;AAAA,KAA/B,CAAhB,CAAlB,CAtBhB;AAuBEjE,IAAAA,WAAW,EAAEtF,SAAS,CAACwJ,MAvBzB;AAyBEE,IAAAA,SAAS,EAAE1J,SAAS,CAACgJ,IAzBvB;AA0BEW,IAAAA,UAAU,EAAE3J,SAAS,CAACgJ,IA1BxB;AA2BExG,IAAAA,kBAAkB,EAAExC,SAAS,CAACgJ,IA3BhC;AA4BEvG,IAAAA,eAAe,EAAEzC,SAAS,CAACgJ,IA5B7B;AA8BEY,IAAAA,SAAS,EAAE5J,SAAS,CAACgJ,IA9BvB;AAgCE5C,IAAAA,MAAM,EAAEpG,SAAS,CAACkJ,OAAV,CAAkBlJ,SAAS,CAAC6J,MAA5B,CAhCV;AAiCExD,IAAAA,WAAW,EAAErG,SAAS,CAACkJ,OAAV,CAAkBlJ,SAAS,CAAC6J,MAA5B,CAjCf;AAkCElH,IAAAA,IAAI,EAAE3C,SAAS,CAACkJ,OAAV,CAAkBlJ,SAAS,CAAC6J,MAA5B,CAlCR;AAmCEnH,IAAAA,SAAS,EAAE1C,SAAS,CAACkJ,OAAV,CAAkBlJ,SAAS,CAAC6J,MAA5B,CAnCb;AAqCEC,IAAAA,sBAAsB,EAAE9J,SAAS,CAAC6J,MArCpC;AAsCEE,IAAAA,wBAAwB,EAAE/J,SAAS,CAAC6J,MAtCtC;AAuCEG,IAAAA,yBAAyB,EAAEhK,SAAS,CAAC6J,MAvCvC;AAwCEI,IAAAA,SAAS,EAAEjK,SAAS,CAAC6J,MAxCvB;AAyCEK,IAAAA,iBAAiB,EAAElK,SAAS,CAAC6J,MAzC/B;AA0CEM,IAAAA,gBAAgB,EAAEnK,SAAS,CAAC6J,MA1C9B;AA2CExB,IAAAA,kBAAkB,EAAErI,SAAS,CAAC6J,MA3ChC;AA4CEvB,IAAAA,kBAAkB,EAAEtI,SAAS,CAAC6J,MA5ChC;AA6CEO,IAAAA,iBAAiB,EAAEpK,SAAS,CAAC6J,MA7C/B;AA8CEQ,IAAAA,iBAAiB,EAAErK,SAAS,CAAC6J,MA9C/B;AA+CES,IAAAA,sBAAsB,EAAEtK,SAAS,CAAC6J,MA/CpC;AAgDEU,IAAAA,sBAAsB,EAAEvK,SAAS,CAAC6J,MAhDpC;AAiDEW,IAAAA,0BAA0B,EAAExK,SAAS,CAAC6J,MAjDxC;AAkDEY,IAAAA,yBAAyB,EAAEzK,SAAS,CAAC6J,MAlDvC;AAmDEa,IAAAA,oBAAoB,EAAE1K,SAAS,CAAC6J,MAnDlC;AAoDEc,IAAAA,sBAAsB,EAAE3K,SAAS,CAAC6J,MApDpC;AAqDEe,IAAAA,wBAAwB,EAAE5K,SAAS,CAAC6J,MArDtC;AAsDEgB,IAAAA,qBAAqB,EAAE7K,SAAS,CAAC6J,MAtDnC;AAwDEiB,IAAAA,cAAc,EAAE9K,SAAS,CAAC6J,MAxD5B;AAyDEkB,IAAAA,wBAAwB,EAAE/K,SAAS,CAAC6J,MAzDtC;AA0DEmB,IAAAA,2BAA2B,EAAEhL,SAAS,CAAC6J,MA1DzC;AA2DEoB,IAAAA,2BAA2B,EAAEjL,SAAS,CAAC6J;AA3DzC;AA8DA1I,EAAAA,kBAAkB,CAAC6F,YAAnB;AACExD,IAAAA,aAAa,EAAE5E,0BADjB;AAEE0D,IAAAA,cAAc,EAAExD,SAAS,CAACoM,MAF5B;AAGE3F,IAAAA,eAAe,EAAEvG,eAAe,CAACmM,QAHnC;AAIE3F,IAAAA,aAAa,EAAE3G,aAAa,CAACuM,GAJ/B;AAKEjJ,IAAAA,MAAM,EAAE,EALV;AAMEJ,IAAAA,YAAY,EAAE,EANhB;AAOEC,IAAAA,kBAAkB,EAAE,EAPtB;AAQEF,IAAAA,kBAAkB,EAAE,EARtB;AASEG,IAAAA,YAAY,EAAE,EAThB;AAUEC,IAAAA,eAAe,EAAE;AAVnB,KAWKhD,wBAXL;AAcAiC,EAAAA,kBAAkB,CAAC+B,YAAnB,GAAkCkG,MAAM,CAACC,IAAP,CAAYlI,kBAAkB,CAACyH,SAA/B,CAAlC;AAtZO,SAAMzH,kBAAN;AAAA","sourcesContent":["import { Accessibility, datepickerCalendarBehavior, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  DAYS_IN_WEEK,\n  FirstWeekOfYear,\n  getDayGrid,\n  IDay,\n  DEFAULT_CALENDAR_STRINGS,\n  ICalendarStrings,\n  IDayGridOptions,\n  IDateGridStrings,\n  IRestrictedDatesOptions,\n  compareDates,\n  compareDatePart,\n  getMonthStart,\n  getMonthEnd,\n  getStartDateOfWeek,\n  getEndDateOfWeek,\n} from '../../utils/date-time-utilities';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, UIComponentProps } from '../../utils';\nimport { DatepickerCalendarGrid, DatepickerCalendarGridProps } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow, DatepickerCalendarGridRowProps } from './DatepickerCalendarGridRow';\nimport { DatepickerCalendarHeader, DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarCellProps, DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButtonProps, DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeaderCellProps, DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { navigateToNewDate, contstraintNavigatedDate } from './navigateToNewDate';\n\nexport interface DatepickerCalendarProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDayGridOptions> {\n  /** Calendar can have header. */\n  header?: ShorthandValue<DatepickerCalendarHeaderProps>;\n\n  /** A render function to customize how cells are rendered in the Calendar. */\n  calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;\n\n  /** A render function to customize how cell's buttons are rendered in the Calendar. */\n  calendarCellButton?: ShorthandValue<DatepickerCalendarCellButtonProps>;\n\n  /** A render function to customize how header cells are rendered in the Calendar. */\n  calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;\n\n  /** A render function to customize how the calendar grid is rendered. */\n  calendarGrid?: ShorthandValue<DatepickerCalendarGridProps>;\n\n  /** A render function to customize how the calendar grid row is rendered. */\n  calendarGridRow?: ShorthandValue<DatepickerCalendarGridRowProps>;\n\n  /**\n   * The currently selected date.\n   */\n  selectedDate?: Date;\n  /**\n   * The currently navigated date.\n   */\n  navigatedDate?: Date;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerCalendarProps & { value: IDay }>;\n}\n\nexport type DatepickerCalendarStylesProps = never;\n\nexport const datepickerCalendarClassName = 'ui-datepicker__calendar';\n\nconst normalizeDateInGrid = (date: Date): Date => {\n  const result = new Date(date.getTime());\n  result.setDate(1);\n  return result;\n};\n\n/**\n * A DatepickerCalendar is used to display dates in sematically grouped way.\n */\nexport const DatepickerCalendar: ComponentWithAs<'div', DatepickerCalendarProps> &\n  FluentComponentStaticProps<DatepickerCalendarProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    calendarHeaderCell,\n    calendarCell,\n    calendarCellButton,\n    calendarGrid,\n    calendarGridRow,\n    header,\n    selectedDate,\n    navigatedDate,\n    firstDayOfWeek,\n    today,\n    formatMonthDayYear,\n    formatMonthYear,\n    shortDays,\n    days,\n    minDate,\n    maxDate,\n    restrictedDates,\n  } = props;\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate,\n    maxDate,\n    restrictedDates,\n  };\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendar.handledProps, props);\n\n  const updateNavigatedDate = (date: Date) => {\n    if (!!date) {\n      if (!shouldFocusInDayGrid) {\n        setShouldFocusInDayGrid(true);\n      }\n      setGridNavigatedDate(date);\n    }\n  };\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendar.displayName,\n    actionHandlers: {\n      addWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      addDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getStartDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getEndDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(visibleGrid[0], day => day.originalDate.getDay() === targetDayOfWeek)?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(\n          visibleGrid[visibleGrid.length - 1],\n          day => day.originalDate.getDay() === targetDayOfWeek,\n        )?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const [gridNavigatedDate, setGridNavigatedDate] = React.useState<Date>(\n    () => new Date((navigatedDate || today || new Date()).getTime()),\n  );\n  const [normalizedGridDate, setNormalizedGridDate] = React.useState<Date>(() =>\n    normalizeDateInGrid(gridNavigatedDate),\n  );\n\n  const [shouldFocusInDayGrid, setShouldFocusInDayGrid] = React.useState<boolean>(true);\n\n  const { classes } = useStyles<DatepickerCalendarStylesProps>(DatepickerCalendar.displayName, {\n    className: datepickerCalendarClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const visibleGrid = React.useMemo<IDay[][]>(() => {\n    const dayGridOptions: IDayGridOptions = {\n      selectedDate,\n      navigatedDate: normalizedGridDate,\n      weeksToShow: props.weeksToShow,\n      firstDayOfWeek: props.firstDayOfWeek,\n      firstWeekOfYear: props.firstWeekOfYear,\n      dateRangeType: props.dateRangeType,\n      daysToSelectInDayView: props.daysToSelectInDayView,\n      today: props.today,\n      showWeekNumbers: props.showWeekNumbers,\n      workWeekDays: props.workWeekDays,\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      restrictedDates: props.restrictedDates,\n    };\n    const grid = getDayGrid(dayGridOptions);\n    return grid.slice(1, grid.length - 1); // slicing off first and last weeks, cause we don't use them for transitions\n  }, [selectedDate, normalizedGridDate, props]);\n\n  React.useEffect(() => {\n    const newNormalizedDate = normalizeDateInGrid(gridNavigatedDate);\n\n    if (compareDatePart(newNormalizedDate, normalizedGridDate)) {\n      // Do not change the grid immediately the month changes but only once the date stops being visible.\n      const gridContainsNavigatedDate = visibleGrid.find(week =>\n        week.find(day => compareDatePart(day.originalDate, gridNavigatedDate) === 0),\n      );\n      if (!gridContainsNavigatedDate) {\n        setNormalizedGridDate(newNormalizedDate);\n      }\n    }\n  }, [gridNavigatedDate, visibleGrid, normalizedGridDate]);\n\n  const dateFormatting: IDateGridStrings = {\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n  };\n\n  const focusDateRef = React.useRef(null);\n\n  const changeMonth = (nextMonth: boolean) => {\n    const newNavigatedDate = navigateToNewDate(\n      normalizedGridDate,\n      'Month',\n      nextMonth ? 1 : -1,\n      restrictedDatesOptions,\n      true,\n    );\n    if (!!newNavigatedDate) {\n      setGridNavigatedDate(newNavigatedDate);\n      setShouldFocusInDayGrid(false);\n      setNormalizedGridDate(normalizeDateInGrid(newNavigatedDate));\n    }\n  };\n\n  const prevMonthOutOfBounds = minDate ? compareDatePart(minDate, getMonthStart(normalizedGridDate)) >= 0 : false;\n  const nextMonthOutOfBounds = maxDate ? compareDatePart(getMonthEnd(normalizedGridDate), maxDate) >= 0 : false;\n  React.useEffect(() => {\n    if (shouldFocusInDayGrid) {\n      focusDateRef.current?.focus();\n    }\n  }, [gridNavigatedDate, normalizedGridDate, shouldFocusInDayGrid]);\n\n  const renderCell = (day: IDay, content) =>\n    createShorthand(DatepickerCalendarCell, calendarCell, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content,\n          key: day.key,\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n    });\n\n  const renderCellButton = (day: IDay) =>\n    createShorthand(DatepickerCalendarCellButton, calendarCellButton, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content: day.date,\n          'aria-label': formatMonthDayYear(day.originalDate, dateFormatting),\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n      overrideProps: (\n        predefinedProps: DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> },\n      ): DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> } => ({\n        onFocus: e => {\n          setGridNavigatedDate(day.originalDate);\n          _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n        },\n        onClick: e => {\n          _.invoke(props, 'onDateChange', e, { ...props, value: day });\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n        ref: compareDates(gridNavigatedDate, day.originalDate) ? focusDateRef : null,\n      }),\n    });\n  const renderWeekRow = (week: IDay[]) => _.map(week, (day: IDay) => renderCell(day, renderCellButton(day)));\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(DatepickerCalendarHeader, header, {\n        defaultProps: () => ({\n          label: formatMonthYear(normalizedGridDate, dateFormatting),\n          'aria-label': formatMonthYear(normalizedGridDate, dateFormatting),\n          disabledNextButton: nextMonthOutOfBounds,\n          disabledPreviousButton: prevMonthOutOfBounds,\n          prevMonthAriaLabel: props.prevMonthAriaLabel,\n          nextMonthAriaLabel: props.nextMonthAriaLabel,\n        }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderProps): DatepickerCalendarHeaderProps => ({\n          onPreviousClick: (e, data) => {\n            changeMonth(false);\n            _.invoke(predefinedProps, 'onPreviousClick', e, data);\n          },\n          onNextClick: (e, data) => {\n            changeMonth(true);\n            _.invoke(predefinedProps, 'onNextClick', e, data);\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarGrid, calendarGrid, {\n        defaultProps: () =>\n          getA11yProps('calendarGrid', {\n            content: (\n              <>\n                <thead>\n                  {createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                    defaultProps: () =>\n                      getA11yProps('calendarGridRow', {\n                        children: _.times(DAYS_IN_WEEK, dayNumber =>\n                          createShorthand(DatepickerCalendarHeaderCell, calendarHeaderCell, {\n                            defaultProps: () =>\n                              getA11yProps('calendarHeaderCell', {\n                                'aria-label': days[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                content: shortDays[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                key: dayNumber,\n                              }),\n                          }),\n                        ),\n                      }),\n                  })}\n                </thead>\n                <tbody>\n                  {_.map(visibleGrid, week =>\n                    createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                      defaultProps: () =>\n                        getA11yProps('calendarGridRow', {\n                          children: renderWeekRow(week),\n                          key: week[0].key,\n                        }),\n                    }),\n                  )}\n                </tbody>\n              </>\n            ),\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDatepickerCalendar.displayName = 'DatepickerCalendar';\n\nDatepickerCalendar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendarCell: customPropTypes.itemShorthand,\n  calendarCellButton: customPropTypes.itemShorthand,\n  calendarHeaderCell: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  calendarGrid: customPropTypes.itemShorthand,\n  calendarGridRow: customPropTypes.itemShorthand,\n  onDateChange: PropTypes.func,\n  selectedDate: PropTypes.instanceOf(Date),\n  navigatedDate: PropTypes.instanceOf(Date),\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n  weeksToShow: PropTypes.number,\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  goToToday: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepickerCalendar.defaultProps = {\n  accessibility: datepickerCalendarBehavior,\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n  header: {},\n  calendarCell: {},\n  calendarCellButton: {},\n  calendarHeaderCell: {},\n  calendarGrid: {},\n  calendarGridRow: {},\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepickerCalendar.handledProps = Object.keys(DatepickerCalendar.propTypes) as any;\n"],"file":"DatepickerCalendar.js"}