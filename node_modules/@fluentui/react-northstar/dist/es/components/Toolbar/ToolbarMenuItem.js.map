{"version":3,"sources":["components/Toolbar/ToolbarMenuItem.tsx"],"names":["toolbarMenuItemBehavior","indicatorBehavior","React","cx","PropTypes","EventListener","Ref","customPropTypes","compose","focusAsync","mergeVariablesOverrides","useTelemetry","useStyles","useAutoControlled","useFluentContext","getElementType","useUnhandledProps","useAccessibility","Unstable_NestingAuto","useContextSelectors","createShorthand","commonPropTypes","childrenExist","doesNodeContainClick","partitionPopperPropsFromShorthand","Popper","Box","Popup","ToolbarMenu","ToolbarMenuItemIcon","ToolbarVariablesContext","ToolbarVariablesProvider","ToolbarMenuItemSubmenuIndicator","ToolbarMenuItemActiveIndicator","ToolbarMenuContext","toolbarMenuItemClassName","toolbarMenuItemSlotClassNames","wrapper","submenu","ToolbarMenuItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","active","activeIndicator","children","content","disabled","submenuIndicator","icon","popup","inSubmenu","className","design","styles","variables","menu","menuPositioningProps","defaultValue","defaultMenuOpen","value","menuOpen","initialValue","setMenuOpen","itemRef","useRef","menuRef","menuSlot","v","slots","parentVariables","useContext","mergedVariables","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","actionHandlers","performClick","event","preventDefault","handleClick","openMenu","closeAllMenusAndFocusNextParentItem","closeAllMenus","closeMenu","closeMenuAndFocusTrigger","doNotNavigateNextParentItem","stopPropagation","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","resolvedStyles","e","trySetMenuOpen","isSubmenuOpen","current","newValue","onStateChanged","outsideClickHandler","getRefs","isItemClick","target","isNestedClick","childRef","isInside","handleMenuOverrides","predefinedProps","onItemClick","itemProps","element","root","onClick","defaultProps","hasChildren","popupElement","onOpenChange","overrideProps","trigger","undefined","menuItemInner","maybeSubmenu","nestingRef","node","wrapperElement","create","trapFocus","shorthandConfig","mappedProp","propTypes","createCommon","bool","shorthandAllowingChildren","index","number","oneOfType","itemShorthand","collectionShorthand","func","onMenuOpenChange","shape","never","string","as"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuItemBehavior,\n  ToolbarMenuItemBehaviorProps,\n  indicatorBehavior,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\n\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  compose,\n  focusAsync,\n  mergeVariablesOverrides,\n  useTelemetry,\n  useStyles,\n  useAutoControlled,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  UIComponentProps,\n  childrenExist,\n  doesNodeContainClick,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { Box, BoxProps } from '../Box/Box';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenu, ToolbarMenuProps, ToolbarMenuItemShorthandKinds } from './ToolbarMenu';\nimport { ToolbarMenuItemIcon, ToolbarMenuItemIconProps } from './ToolbarMenuItemIcon';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarMenuItemSubmenuIndicator } from './ToolbarMenuItemSubmenuIndicator';\nimport { ToolbarMenuItemActiveIndicator } from './ToolbarMenuItemActiveIndicator';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\n\nexport interface ToolbarMenuItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  activeIndicator?: ShorthandValue<BoxProps>;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarMenuItemIconProps>;\n\n  /** ToolbarMenuItem index inside ToolbarMenu. */\n  index?: number;\n\n  /** Shorthand for the submenu indicator. */\n  submenuIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Shorthand for the submenu. */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarMenuItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /** Default menu open */\n  defaultMenuOpen?: boolean;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Called when the menu inside the item opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `menuOpen` reflecting the new state.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarMenuItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuItemStylesProps = Pick<ToolbarMenuItemProps, 'disabled'> & { hasContent: boolean };\n\nexport interface ToolbarMenuItemSlotClassNames {\n  wrapper: string;\n  submenu: string;\n}\n\nexport const toolbarMenuItemClassName = 'ui-toolbar__menuitem';\nexport const toolbarMenuItemSlotClassNames: ToolbarMenuItemSlotClassNames = {\n  wrapper: `${toolbarMenuItemClassName}__wrapper`,\n  submenu: `${toolbarMenuItemClassName}__submenu`,\n};\n\n/**\n * A ToolbarMenuItem renders ToolbarMenu item as button.\n */\nexport const ToolbarMenuItem = compose<'button', ToolbarMenuItemProps, ToolbarMenuItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      active,\n      activeIndicator,\n      children,\n      content,\n      disabled,\n      submenuIndicator,\n      icon,\n      popup,\n      wrapper,\n      inSubmenu,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const [menu, menuPositioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const [menuOpen, setMenuOpen] = useAutoControlled({\n      defaultValue: props.defaultMenuOpen,\n      value: props.menuOpen,\n      initialValue: false,\n    });\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const getA11yProps = useAccessibility(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        menu,\n        active,\n        menuOpen,\n        disabled,\n        'aria-label': props['aria-label'],\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby'],\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        openMenu: event => openMenu(event),\n        closeAllMenusAndFocusNextParentItem: event => closeAllMenus(event),\n        closeMenu: event => closeMenu(event),\n        closeMenuAndFocusTrigger: event => closeMenu(event),\n        doNotNavigateNextParentItem: event => {\n          event.stopPropagation();\n        },\n        closeAllMenus: event => closeAllMenus(event),\n      },\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        disabled,\n        hasContent: !!content,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const openMenu = (e: React.KeyboardEvent) => {\n      if (menu && !menuOpen) {\n        trySetMenuOpen(true, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const closeMenu = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      trySetMenuOpen(false, e, () => {\n        focusAsync(itemRef.current);\n      });\n\n      e.stopPropagation();\n    };\n\n    const closeAllMenus = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n      trySetMenuOpen(false, e, () => {\n        if (!inSubmenu) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      // avoid spacebar scrolling the page\n      if (!inSubmenu) {\n        e.preventDefault();\n      }\n    };\n\n    const isSubmenuOpen = (): boolean => {\n      return !!(menu && menuOpen);\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent, onStateChanged?: any) => {\n      setMenuOpen(newValue);\n      // The reason why post-effect is not passed as callback to trySetState method\n      // is that in 'controlled' mode the post-effect is applied before final re-rendering\n      // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n      // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n      onStateChanged && onStateChanged();\n      _.invoke(props, 'onMenuOpenChange', e, {\n        ...props,\n        menuOpen: newValue,\n      });\n    };\n\n    const outsideClickHandler = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const handleMenuOverrides = (predefinedProps: ToolbarMenuProps) => ({\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n\n        trySetMenuOpen(menuOpen, e);\n        if (!menuOpen) {\n          _.invoke(itemRef.current, 'focus');\n        }\n      },\n    });\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        // the menuItem element was clicked => toggle the open/close and stop propagation\n        trySetMenuOpen(!menuOpen, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (popup) {\n        e.stopPropagation();\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          disabled,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {createShorthand(composeOptions.slots.icon, icon, { defaultProps: () => slotProps.icon })}\n            {content}\n            {active &&\n              createShorthand(composeOptions.slots.activeIndicator, activeIndicator, {\n                defaultProps: () => slotProps.activeIndicator,\n              })}\n            {menu &&\n              createShorthand(composeOptions.slots.submenuIndicator, submenuIndicator, {\n                defaultProps: () => slotProps.submenuIndicator,\n              })}\n          </>\n        )}\n      </ElementType>\n    );\n\n    const hasChildren = childrenExist(children);\n\n    if (popup && !hasChildren) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => ({\n          ...slotProps.popup,\n          onOpenChange: e => {\n            e.stopPropagation();\n          },\n        }),\n        overrideProps: {\n          trigger: element,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    const menuItemInner = hasChildren ? (children as React.ReactElement) : <Ref innerRef={itemRef}>{element}</Ref>;\n\n    const maybeSubmenu =\n      menu && menuOpen ? (\n        <Unstable_NestingAuto>\n          {(getRefs, nestingRef) => {\n            return (\n              <>\n                <Ref\n                  innerRef={(node: HTMLElement) => {\n                    nestingRef.current = node;\n                    menuRef.current = node;\n                  }}\n                >\n                  <Popper\n                    align=\"top\"\n                    position={context.rtl ? 'before' : 'after'}\n                    targetRef={itemRef}\n                    {...menuPositioningProps}\n                  >\n                    <ToolbarVariablesProvider value={mergedVariables}>\n                      {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                        defaultProps: () => ({\n                          className: toolbarMenuItemSlotClassNames.submenu,\n                          styles: resolvedStyles.menu,\n                          submenu: true,\n                          submenuIndicator,\n                          ...slotProps.menu,\n                        }),\n                        overrideProps: handleMenuOverrides,\n                      })}\n                    </ToolbarVariablesProvider>\n                  </Popper>\n                </Ref>\n                <EventListener listener={outsideClickHandler(getRefs)} target={context.target} type=\"click\" />\n              </>\n            );\n          }}\n        </Unstable_NestingAuto>\n      ) : null;\n\n    if (!wrapper) {\n      setEnd();\n      return menuItemInner;\n    }\n\n    const wrapperElement = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('wrapper', {\n          className: cx(toolbarMenuItemSlotClassNames.wrapper, classes.wrapper),\n        }),\n      overrideProps: () => ({\n        children: (\n          <>\n            {menuItemInner}\n            {maybeSubmenu}\n          </>\n        ),\n      }),\n    });\n    setEnd();\n\n    return wrapperElement;\n  },\n  {\n    className: toolbarMenuItemClassName,\n    displayName: 'ToolbarMenuItem',\n\n    slots: {\n      icon: ToolbarMenuItemIcon,\n      submenuIndicator: ToolbarMenuItemSubmenuIndicator,\n      activeIndicator: ToolbarMenuItemActiveIndicator,\n      popup: Popup,\n    },\n    slotProps: props => ({\n      icon: {\n        hasContent: !!props.content,\n      },\n      submenuIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      activeIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      popup: {\n        trapFocus: true,\n      },\n    }),\n\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'active',\n      'activeIndicator',\n      'defaultMenuOpen',\n      'disabled',\n      'icon',\n      'index',\n      'submenuIndicator',\n      'inSubmenu',\n      'menu',\n      'menuOpen',\n      'onClick',\n      'onMenuOpenChange',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  activeIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultMenuOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  index: PropTypes.number,\n  submenuIndicator: customPropTypes.shorthandAllowingChildren,\n  inSubmenu: PropTypes.bool,\n  menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  menuOpen: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMenuOpenChange: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarMenuItemBehavior,\n  activeIndicator: {},\n  submenuIndicator: {},\n  wrapper: { as: 'li' },\n};\n"],"file":"ToolbarMenuItem.js"}