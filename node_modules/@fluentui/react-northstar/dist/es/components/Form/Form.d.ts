import { Accessibility } from '@fluentui/accessibility';
import { UIComponentProps, ChildrenComponentProps } from '../../utils';
import { ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';
import { FormField, FormFieldProps } from './FormField';
import { ComponentWithAs } from '@fluentui/react-bindings';
import { FormLabel } from './FormLabel';
import { FormMessage } from './FormMessage';
import { FormInput } from './FormInput';
import { FormCheckbox } from './FormCheckbox';
import { FormDropdown } from './FormDropdown';
import { FormButton } from './FormButton';
import { FormRadioGroup } from './FormRadioGroup';
import { FormSlider } from './FormSlider';
import { FormFieldCustom } from './FormFieldCustom';
export interface FormProps extends UIComponentProps, ChildrenComponentProps {
    /**
     * Accessibility behavior if overridden by the user.
     */
    accessibility?: Accessibility<never>;
    /** The HTML form action. */
    action?: string;
    /** Shorthand array of props for the Form.Fields inside the Form. */
    fields?: ShorthandCollection<FormFieldProps>;
    /**
     * The HTML form submit handler.
     * @param event - React's original SyntheticEvent.
     * @param data - All props.
     */
    onSubmit?: ComponentEventHandler<FormProps>;
}
export declare const formClassName = "ui-form";
export declare type FormStylesProps = never;
/**
 * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.
 */
export declare const Form: ComponentWithAs<'form', FormProps> & FluentComponentStaticProps<FormProps> & {
    Field: typeof FormField;
    Label: typeof FormLabel;
    Message: typeof FormMessage;
    Input: typeof FormInput;
    Checkbox: typeof FormCheckbox;
    Dropdown: typeof FormDropdown;
    Button: typeof FormButton;
    RadioGroup: typeof FormRadioGroup;
    Slider: typeof FormSlider;
    FieldCustom: typeof FormFieldCustom;
};
