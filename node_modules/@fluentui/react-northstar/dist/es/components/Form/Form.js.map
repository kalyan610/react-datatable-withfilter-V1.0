{"version":3,"sources":["components/Form/Form.tsx"],"names":["customPropTypes","PropTypes","React","childrenExist","commonPropTypes","rtlTextContainer","createShorthandFactory","FormField","useTelemetry","getElementType","useUnhandledProps","useStyles","useFluentContext","useAccessibility","FormLabel","FormMessage","FormInput","FormCheckbox","FormDropdown","FormButton","FormRadioGroup","FormSlider","FormFieldCustom","formClassName","Form","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","action","children","accessibility","ElementType","unhandledProps","handledProps","mapPropsToInlineStyles","rtl","classes","getA11yProps","debugName","handleSubmit","e","args","renderFields","fields","field","create","element","root","getAttributes","forElements","propTypes","createCommon","content","string","collectionShorthand","onSubmit","func","defaultProps","as","Object","keys","Component","Field","FieldCustom","Label","Message","Input","Checkbox","Dropdown","Button","RadioGroup","Slider"],"mappings":";;;AACA,OAAO,KAAKA,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAGA,SACEC,aADF,EAIEC,eAJF,EAKEC,gBALF,EAMEC,sBANF,QAOO,aAPP;AASA,SAASC,SAAT,QAA0C,aAA1C;AACA,SAEEC,YAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,SALF,EAMEC,gBANF,EAOEC,gBAPF,QAQO,0BARP;AAUA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAsBA,OAAO,IAAMC,aAAa,GAAG,SAAtB;;AAIP;;;AAGA,OAAO,IAAMC,IAAN;AAAA,MAAMA,IAYV,GAAG,SAZOA,IAYP,CAAAC,KAAK,EAAI;AACb,QAAMC,OAAO,GAAGd,gBAAgB,EAAhC;;AADa,wBAEgBJ,YAAY,CAACgB,IAAI,CAACG,WAAN,EAAmBD,OAAO,CAACE,SAA3B,CAF5B;AAAA,QAELC,QAFK,iBAELA,QAFK;AAAA,QAEKC,MAFL,iBAEKA,MAFL;;AAGbD,IAAAA,QAAQ;AAHK,QAILE,SAJK,GAIqEN,KAJrE,CAILM,SAJK;AAAA,QAIMC,MAJN,GAIqEP,KAJrE,CAIMO,MAJN;AAAA,QAIcC,MAJd,GAIqER,KAJrE,CAIcQ,MAJd;AAAA,QAIsBC,SAJtB,GAIqET,KAJrE,CAIsBS,SAJtB;AAAA,QAIiCC,MAJjC,GAIqEV,KAJrE,CAIiCU,MAJjC;AAAA,QAIyCC,QAJzC,GAIqEX,KAJrE,CAIyCW,QAJzC;AAAA,QAImDC,aAJnD,GAIqEZ,KAJrE,CAImDY,aAJnD;AAKb,QAAMC,WAAW,GAAG7B,cAAc,CAACgB,KAAD,CAAlC;AACA,QAAMc,cAAc,GAAG7B,iBAAiB,CAACc,IAAI,CAACgB,YAAN,EAAoBf,KAApB,CAAxC;;AANa,qBAQOd,SAAS,CAAkBa,IAAI,CAACG,WAAvB,EAAoC;AAC/DI,MAAAA,SAAS,EAAER,aADoD;AAE/DkB,MAAAA,sBAAsB,EAAE;AAAA,eAAO;AAC7BV,UAAAA,SAAS,EAATA,SAD6B;AAE7BC,UAAAA,MAAM,EAANA,MAF6B;AAG7BC,UAAAA,MAAM,EAANA,MAH6B;AAI7BC,UAAAA,SAAS,EAATA;AAJ6B,SAAP;AAAA,OAFuC;AAQ/DQ,MAAAA,GAAG,EAAEhB,OAAO,CAACgB;AARkD,KAApC,CARhB;AAAA,QAQLC,OARK,cAQLA,OARK;;AAmBb,QAAMC,YAAY,GAAG/B,gBAAgB,CAAQwB,aAAR,EAAuB;AAC1DQ,MAAAA,SAAS,EAAErB,IAAI,CAACG,WAD0C;AAE1De,MAAAA,GAAG,EAAEhB,OAAO,CAACgB;AAF6C,KAAvB,CAArC;;AAKA,QAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAgB;AAAA,UAC3BZ,MAD2B,GAChBV,KADgB,CAC3BU,MAD2B,EAGnC;AACA;;AACA,UAAI,CAACA,MAAL,EAAa,QAASY,CAAT,EAAY,gBAAZ;;AALsB,wCAATC,IAAS;AAATA,QAAAA,IAAS;AAAA;;AAMnC,6BAASvB,KAAT,EAAgB,UAAhB,EAA4BsB,CAA5B,EAA+BtB,KAA/B,SAAyCuB,IAAzC;AACD,KAPD;;AASA,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,UACjBC,MADiB,GACNzB,KADM,CACjByB,MADiB;AAEzB,aAAO,KAAMA,MAAN,EAAc,UAAAC,KAAK;AAAA,eAAI5C,SAAS,CAAC6C,MAAV,CAAiBD,KAAjB,CAAJ;AAAA,OAAnB,CAAP;AACD,KAHD;;AAKA,QAAME,OAAO,gBACX,oBAAC,WAAD,eACMT,YAAY,CAAC,MAAD;AACdb,MAAAA,SAAS,EAAEY,OAAO,CAACW;AADL,OAEXjD,gBAAgB,CAACkD,aAAjB,CAA+B;AAAEC,MAAAA,WAAW,EAAE,CAACpB,QAAD;AAAf,KAA/B,CAFW,EAGXG,cAHW,EADlB;AAME,MAAA,MAAM,EAAEJ,MANV;AAOE,MAAA,QAAQ,EAAEW;AAPZ,QASG3C,aAAa,CAACiC,QAAD,CAAb,GAA0BA,QAA1B,GAAqCa,YAAY,EATpD,CADF;AAaAnB,IAAAA,MAAM;AACN,WAAOuB,OAAP;AACD,GAjEM;;AAmEP7B,EAAAA,IAAI,CAACG,WAAL,GAAmB,MAAnB;AAEAH,EAAAA,IAAI,CAACiC,SAAL,qBACKrD,eAAe,CAACsD,YAAhB,CAA6B;AAC9BC,IAAAA,OAAO,EAAE;AADqB,GAA7B,CADL;AAIExB,IAAAA,MAAM,EAAElC,SAAS,CAAC2D,MAJpB;AAKEV,IAAAA,MAAM,EAAElD,eAAe,CAAC6D,mBAL1B;AAMEC,IAAAA,QAAQ,EAAE7D,SAAS,CAAC8D;AANtB;AASAvC,EAAAA,IAAI,CAACwC,YAAL,GAAoB;AAClBC,IAAAA,EAAE,EAAE;AADc,GAApB;AAIAzC,EAAAA,IAAI,CAACgB,YAAL,GAAoB0B,MAAM,CAACC,IAAP,CAAY3C,IAAI,CAACiC,SAAjB,CAApB;AAEAjC,EAAAA,IAAI,CAAC4B,MAAL,GAAc9C,sBAAsB,CAAC;AACnC8D,IAAAA,SAAS,EAAE5C;AADwB,GAAD,CAApC;AAIAA,EAAAA,IAAI,CAAC6C,KAAL,GAAa9D,SAAb;AACAiB,EAAAA,IAAI,CAAC8C,WAAL,GAAmBhD,eAAnB;AACAE,EAAAA,IAAI,CAAC+C,KAAL,GAAazD,SAAb;AACAU,EAAAA,IAAI,CAACgD,OAAL,GAAezD,WAAf;AACAS,EAAAA,IAAI,CAACiD,KAAL,GAAazD,SAAb;AACAQ,EAAAA,IAAI,CAACkD,QAAL,GAAgBzD,YAAhB;AACAO,EAAAA,IAAI,CAACmD,QAAL,GAAgBzD,YAAhB;AACAM,EAAAA,IAAI,CAACoD,MAAL,GAAczD,UAAd;AACAK,EAAAA,IAAI,CAACqD,UAAL,GAAkBzD,cAAlB;AACAI,EAAAA,IAAI,CAACsD,MAAL,GAAczD,UAAd;AAjGO,SAAMG,IAAN;AAAA","sourcesContent":["import { Accessibility } from '@fluentui/accessibility';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport * as _ from 'lodash';\n\nimport {\n  childrenExist,\n  UIComponentProps,\n  ChildrenComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthandFactory,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { FormField, FormFieldProps } from './FormField';\nimport {\n  ComponentWithAs,\n  useTelemetry,\n  getElementType,\n  useUnhandledProps,\n  useStyles,\n  useFluentContext,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nimport { FormLabel } from './FormLabel';\nimport { FormMessage } from './FormMessage';\nimport { FormInput } from './FormInput';\nimport { FormCheckbox } from './FormCheckbox';\nimport { FormDropdown } from './FormDropdown';\nimport { FormButton } from './FormButton';\nimport { FormRadioGroup } from './FormRadioGroup';\nimport { FormSlider } from './FormSlider';\nimport { FormFieldCustom } from './FormFieldCustom';\n\nexport interface FormProps extends UIComponentProps, ChildrenComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<never>;\n\n  /** The HTML form action. */\n  action?: string;\n\n  /** Shorthand array of props for the Form.Fields inside the Form. */\n  fields?: ShorthandCollection<FormFieldProps>;\n\n  /**\n   * The HTML form submit handler.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onSubmit?: ComponentEventHandler<FormProps>;\n}\n\nexport const formClassName = 'ui-form';\n\nexport type FormStylesProps = never;\n\n/**\n * A Form is used to collect, oprionally validate, and submit the user input, in a structured way.\n */\nexport const Form: ComponentWithAs<'form', FormProps> &\n  FluentComponentStaticProps<FormProps> & {\n    Field: typeof FormField;\n    Label: typeof FormLabel;\n    Message: typeof FormMessage;\n    Input: typeof FormInput;\n    Checkbox: typeof FormCheckbox;\n    Dropdown: typeof FormDropdown;\n    Button: typeof FormButton;\n    RadioGroup: typeof FormRadioGroup;\n    Slider: typeof FormSlider;\n    FieldCustom: typeof FormFieldCustom;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Form.displayName, context.telemetry);\n  setStart();\n  const { className, design, styles, variables, action, children, accessibility } = props;\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(Form.handledProps, props);\n\n  const { classes } = useStyles<FormStylesProps>(Form.displayName, {\n    className: formClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const getA11yProps = useAccessibility<never>(accessibility, {\n    debugName: Form.displayName,\n    rtl: context.rtl,\n  });\n\n  const handleSubmit = (e, ...args) => {\n    const { action } = props;\n\n    // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()\n    // method.\n    if (!action) _.invoke(e, 'preventDefault');\n    _.invoke(props, 'onSubmit', e, props, ...args);\n  };\n\n  const renderFields = () => {\n    const { fields } = props;\n    return _.map(fields, field => FormField.create(field));\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n      action={action}\n      onSubmit={handleSubmit}\n    >\n      {childrenExist(children) ? children : renderFields()}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nForm.displayName = 'Form';\n\nForm.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  action: PropTypes.string,\n  fields: customPropTypes.collectionShorthand,\n  onSubmit: PropTypes.func,\n};\n\nForm.defaultProps = {\n  as: 'form',\n};\n\nForm.handledProps = Object.keys(Form.propTypes) as any;\n\nForm.create = createShorthandFactory({\n  Component: Form,\n});\n\nForm.Field = FormField;\nForm.FieldCustom = FormFieldCustom;\nForm.Label = FormLabel;\nForm.Message = FormMessage;\nForm.Input = FormInput;\nForm.Checkbox = FormCheckbox;\nForm.Dropdown = FormDropdown;\nForm.Button = FormButton;\nForm.RadioGroup = FormRadioGroup;\nForm.Slider = FormSlider;\n"],"file":"Form.js"}