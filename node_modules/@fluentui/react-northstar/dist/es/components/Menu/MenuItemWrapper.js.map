{"version":3,"sources":["components/Menu/MenuItemWrapper.tsx"],"names":["compose","customPropTypes","PropTypes","commonPropTypes","Box","menuItemWrapperClassName","MenuItemWrapper","className","displayName","mapPropsToStylesProps","props","active","disabled","iconOnly","isFromKeyboard","pills","pointing","secondary","underlined","vertical","primary","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","propTypes","createCommon","bool","oneOf","every","disallow"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,OAAO,KAAKC,eAAZ,MAAiC,2BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,GAAT,QAA8B,YAA9B;AAsDA,OAAO,IAAMC,wBAAwB,GAAG,sBAAjC;AAEP;;;;AAGA,OAAO,IAAMC,eAAN;AAAA,MAAMA,eAAe,GAAGN,OAAO,CAAuEI,GAAvE,EAA4E;AAChHG,IAAAA,SAAS,EAAEF,wBADqG;AAEhHG,IAAAA,WAAW,EAAE,iBAFmG;AAGhHC,IAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,aAAK;AAC/BC,QAAAA,MAAM,EAAED,KAAK,CAACC,MADiB;AAE/BC,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFe;AAG/BC,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHe;AAI/BC,QAAAA,cAAc,EAAEJ,KAAK,CAACI,cAJS;AAK/BC,QAAAA,KAAK,EAAEL,KAAK,CAACK,KALkB;AAM/BC,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QANe;AAO/BC,QAAAA,SAAS,EAAEP,KAAK,CAACO,SAPc;AAQ/BC,QAAAA,UAAU,EAAER,KAAK,CAACQ,UARa;AAS/BC,QAAAA,QAAQ,EAAET,KAAK,CAACS,QATe;AAU/BC,QAAAA,OAAO,EAAEV,KAAK,CAACU;AAVgB,OAAL;AAAA,KAHoF;AAehHC,IAAAA,YAAY,EAAE,CACZ,QADY,EAEZ,UAFY,EAGZ,UAHY,EAIZ,gBAJY,EAKZ,OALY,EAMZ,UANY,EAOZ,WAPY,EAQZ,YARY,EASZ,UATY,EAUZ,SAVY,CAfkG;AA4BhHC,IAAAA,cAAc,EAAE,IA5BgG;AA6BhHC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG;AA7B+F,GAA5E,CAA/B;AAkCPlB,EAAAA,eAAe,CAACmB,YAAhB,GAA+B;AAC7BC,IAAAA,EAAE,EAAE;AADyB,GAA/B;AAGApB,EAAAA,eAAe,CAACqB,SAAhB,qBACKxB,eAAe,CAACyB,YAAhB,EADL;AAEEjB,IAAAA,MAAM,EAAET,SAAS,CAAC2B,IAFpB;AAGEjB,IAAAA,QAAQ,EAAEV,SAAS,CAAC2B,IAHtB;AAIEhB,IAAAA,QAAQ,EAAEX,SAAS,CAAC2B,IAJtB;AAKEf,IAAAA,cAAc,EAAEZ,SAAS,CAAC2B,IAL5B;AAMEd,IAAAA,KAAK,EAAEb,SAAS,CAAC2B,IANnB;AAOEb,IAAAA,QAAQ,EAAEd,SAAS,CAAC4B,KAAV,CAAgB,CAAC,OAAD,EAAU,KAAV,EAAiB,IAAjB,EAAuB,KAAvB,CAAhB,CAPZ;AAQEV,IAAAA,OAAO,EAAEnB,eAAe,CAAC8B,KAAhB,CAAsB,CAAC9B,eAAe,CAAC+B,QAAhB,CAAyB,CAAC,WAAD,CAAzB,CAAD,EAA0C9B,SAAS,CAAC2B,IAApD,CAAtB,CARX;AASEZ,IAAAA,SAAS,EAAEhB,eAAe,CAAC8B,KAAhB,CAAsB,CAAC9B,eAAe,CAAC+B,QAAhB,CAAyB,CAAC,SAAD,CAAzB,CAAD,EAAwC9B,SAAS,CAAC2B,IAAlD,CAAtB,CATb;AAUEX,IAAAA,UAAU,EAAEhB,SAAS,CAAC2B,IAVxB;AAWEV,IAAAA,QAAQ,EAAEjB,SAAS,CAAC2B;AAXtB;AArCO,SAAMvB,eAAN;AAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemWrapperOwnProps {\n  /** A menu item wrapper can be active. */\n  active?: boolean;\n\n  /** A menu item wrapper can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** A menu item wrapper may have just icons. */\n  iconOnly?: boolean;\n\n  /** Indicates whether the last event was from keyboard. */\n  isFromKeyboard?: boolean;\n\n  /** A menu item wrapper can adjust its appearance to de-emphasize its contents. */\n  pills?: boolean;\n\n  /**\n   * A menu can point to show its relationship to nearby content.\n   * For vertical menu, it can point to the start of the item or to the end.\n   */\n  pointing?: boolean | 'start' | 'end';\n\n  /** The menu item wrapper can have primary type. */\n  primary?: boolean;\n\n  /** The menu item wrapper can have secondary type. */\n  secondary?: boolean;\n\n  /** Menu items wrapper can by highlighted using underline. */\n  underlined?: boolean;\n\n  /** A vertical menu displays elements vertically. */\n  vertical?: boolean;\n}\n\nexport interface MenuItemWrapperProps extends BoxProps, MenuItemWrapperOwnProps {}\nexport type MenuItemWrapperStylesProps = Required<\n  Pick<\n    MenuItemWrapperProps,\n    | 'active'\n    | 'disabled'\n    | 'iconOnly'\n    | 'isFromKeyboard'\n    | 'pills'\n    | 'pointing'\n    | 'primary'\n    | 'secondary'\n    | 'underlined'\n    | 'vertical'\n  >\n>;\n\nexport const menuItemWrapperClassName = 'ui-menu__itemwrapper';\n\n/**\n * A MenuItemWrapper allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemWrapper = compose<'li', MenuItemWrapperProps, MenuItemWrapperStylesProps, BoxProps, {}>(Box, {\n  className: menuItemWrapperClassName,\n  displayName: 'MenuItemWrapper',\n  mapPropsToStylesProps: props => ({\n    active: props.active,\n    disabled: props.disabled,\n    iconOnly: props.iconOnly,\n    isFromKeyboard: props.isFromKeyboard,\n    pills: props.pills,\n    pointing: props.pointing,\n    secondary: props.secondary,\n    underlined: props.underlined,\n    vertical: props.vertical,\n    primary: props.primary,\n  }),\n  handledProps: [\n    'active',\n    'disabled',\n    'iconOnly',\n    'isFromKeyboard',\n    'pills',\n    'pointing',\n    'secondary',\n    'underlined',\n    'vertical',\n    'primary',\n  ],\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nMenuItemWrapper.defaultProps = {\n  as: 'li',\n};\nMenuItemWrapper.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  isFromKeyboard: PropTypes.bool,\n  pills: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),\n  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),\n  underlined: PropTypes.bool,\n  vertical: PropTypes.bool,\n};\n"],"file":"MenuItemWrapper.js"}