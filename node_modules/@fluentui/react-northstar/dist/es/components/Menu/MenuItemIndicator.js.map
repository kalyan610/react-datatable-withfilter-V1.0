{"version":3,"sources":["components/Menu/MenuItemIndicator.tsx"],"names":["compose","indicatorBehavior","PropTypes","commonPropTypes","Box","menuItemIndicatorClassName","MenuItemIndicator","className","displayName","mapPropsToStylesProps","props","iconOnly","vertical","inSubmenu","active","primary","underlined","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","accessibility","propTypes","createCommon","bool"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AAEA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,GAAT,QAA8B,YAA9B;AA4BA,OAAO,IAAMC,0BAA0B,GAAG,wBAAnC;AAEP;;;;AAGA,OAAO,IAAMC,iBAAN;AAAA,MAAMA,iBAAiB,GAAGN,OAAO,CACtCI,GADsC,EAEtC;AACEG,IAAAA,SAAS,EAAEF,0BADb;AAEEG,IAAAA,WAAW,EAAE,mBAFf;AAGEC,IAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,aAAK;AAC/BC,QAAAA,QAAQ,EAAED,KAAK,CAACC,QADe;AAE/BC,QAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFe;AAG/BC,QAAAA,SAAS,EAAEH,KAAK,CAACG,SAHc;AAI/BC,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAJiB;AAK/BC,QAAAA,OAAO,EAAEL,KAAK,CAACK,OALgB;AAM/BC,QAAAA,UAAU,EAAEN,KAAK,CAACM;AANa,OAAL;AAAA,KAH9B;AAWEC,IAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,EAAsC,QAAtC,EAAgD,SAAhD,EAA2D,YAA3D,CAXhB;AAaEC,IAAAA,cAAc,EAAE,IAblB;AAcEC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG;AAdnB,GAFsC,CAAjC;AAsBPd,EAAAA,iBAAiB,CAACe,YAAlB,GAAiC;AAC/BC,IAAAA,EAAE,EAAE,MAD2B;AAE/BC,IAAAA,aAAa,EAAEtB;AAFgB,GAAjC;AAIAK,EAAAA,iBAAiB,CAACkB,SAAlB,qBACKrB,eAAe,CAACsB,YAAhB,EADL;AAEEd,IAAAA,QAAQ,EAAET,SAAS,CAACwB,IAFtB;AAGEd,IAAAA,QAAQ,EAAEV,SAAS,CAACwB,IAHtB;AAIEb,IAAAA,SAAS,EAAEX,SAAS,CAACwB,IAJvB;AAKEZ,IAAAA,MAAM,EAAEZ,SAAS,CAACwB,IALpB;AAMEX,IAAAA,OAAO,EAAEb,SAAS,CAACwB,IANrB;AAOEV,IAAAA,UAAU,EAAEd,SAAS,CAACwB;AAPxB;AA1BO,SAAMpB,iBAAN;AAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport { indicatorBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\n\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemIndicatorOwnProps {\n  /** Indicates if the parent menu item may have just icons. */\n  iconOnly?: boolean;\n\n  /** Indicates whether the parent menu item is inside vertical menu. */\n  vertical?: boolean;\n\n  /** Indicates whether the parent menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Indicates whether the parent menu item is active. */\n  active?: boolean;\n\n  /** Indicates whether the parent menu item is primary. */\n  primary?: boolean;\n\n  /** Indicates whether the parent menu item is underlined. */\n  underlined?: boolean;\n}\n\nexport interface MenuItemIndicatorProps extends BoxProps, MenuItemIndicatorOwnProps {}\nexport type MenuItemIndicatorStylesProps = Pick<\n  MenuItemIndicatorProps,\n  'iconOnly' | 'vertical' | 'inSubmenu' | 'active' | 'primary' | 'underlined'\n>;\n\nexport const menuItemIndicatorClassName = 'ui-menu__itemindicator';\n\n/**\n * A MenuItemIndicator allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemIndicator = compose<'span', MenuItemIndicatorProps, MenuItemIndicatorStylesProps, BoxProps, {}>(\n  Box,\n  {\n    className: menuItemIndicatorClassName,\n    displayName: 'MenuItemIndicator',\n    mapPropsToStylesProps: props => ({\n      iconOnly: props.iconOnly,\n      vertical: props.vertical,\n      inSubmenu: props.inSubmenu,\n      active: props.active,\n      primary: props.primary,\n      underlined: props.underlined,\n    }),\n    handledProps: ['iconOnly', 'vertical', 'inSubmenu', 'active', 'primary', 'underlined'],\n\n    overrideStyles: true,\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n  },\n);\n\nMenuItemIndicator.defaultProps = {\n  as: 'span',\n  accessibility: indicatorBehavior,\n};\nMenuItemIndicator.propTypes = {\n  ...commonPropTypes.createCommon(),\n  iconOnly: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n  active: PropTypes.bool,\n  primary: PropTypes.bool,\n  underlined: PropTypes.bool,\n};\n"],"file":"MenuItemIndicator.js"}