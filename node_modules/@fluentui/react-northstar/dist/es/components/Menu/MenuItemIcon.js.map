{"version":3,"sources":["components/Menu/MenuItemIcon.tsx"],"names":["compose","PropTypes","commonPropTypes","Box","menuItemIconClassName","MenuItemIcon","className","displayName","mapPropsToStylesProps","props","hasContent","iconOnly","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","propTypes","createCommon","bool"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,GAAT,QAA8B,YAA9B;AAaA,OAAO,IAAMC,qBAAqB,GAAG,mBAA9B;AAEP;;;;AAGA,OAAO,IAAMC,YAAN;AAAA,MAAMA,YAAY,GAAGL,OAAO,CAAmEG,GAAnE,EAAwE;AACzGG,IAAAA,SAAS,EAAEF,qBAD8F;AAEzGG,IAAAA,WAAW,EAAE,cAF4F;AAGzGC,IAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,aAAK;AAAEC,QAAAA,UAAU,EAAED,KAAK,CAACC,UAApB;AAAgCC,QAAAA,QAAQ,EAAEF,KAAK,CAACE;AAAhD,OAAL;AAAA,KAH6E;AAIzGC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,UAAf,CAJ2F;AAMzGC,IAAAA,cAAc,EAAE,IANyF;AAOzGC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG;AAPwF,GAAxE,CAA5B;AAYPV,EAAAA,YAAY,CAACW,YAAb,GAA4B;AAC1BC,IAAAA,EAAE,EAAE;AADsB,GAA5B;AAGAZ,EAAAA,YAAY,CAACa,SAAb,qBACKhB,eAAe,CAACiB,YAAhB,EADL;AAEET,IAAAA,UAAU,EAAET,SAAS,CAACmB,IAFxB;AAGET,IAAAA,QAAQ,EAAEV,SAAS,CAACmB;AAHtB;AAfO,SAAMf,YAAN;AAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemIconOwnProps {\n  /** Indicates if the parent menu item may have just icons. */\n  iconOnly?: boolean;\n\n  /** Indicates if the parent menu item has content. */\n  hasContent?: boolean;\n}\n\nexport interface MenuItemIconProps extends BoxProps, MenuItemIconOwnProps {}\nexport type MenuItemIconStylesProps = Pick<MenuItemIconProps, 'hasContent' | 'iconOnly'>;\n\nexport const menuItemIconClassName = 'ui-menu__itemicon';\n\n/**\n * A MenuItemIcon allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemIcon = compose<'span', MenuItemIconProps, MenuItemIconStylesProps, BoxProps, {}>(Box, {\n  className: menuItemIconClassName,\n  displayName: 'MenuItemIcon',\n  mapPropsToStylesProps: props => ({ hasContent: props.hasContent, iconOnly: props.iconOnly }),\n  handledProps: ['hasContent', 'iconOnly'],\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nMenuItemIcon.defaultProps = {\n  as: 'span',\n};\nMenuItemIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  hasContent: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n};\n"],"file":"MenuItemIcon.js"}