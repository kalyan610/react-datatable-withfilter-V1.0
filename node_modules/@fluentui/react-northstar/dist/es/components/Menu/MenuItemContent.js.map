{"version":3,"sources":["components/Menu/MenuItemContent.tsx"],"names":["compose","PropTypes","commonPropTypes","Box","menuItemContentClassName","MenuItemContent","className","displayName","mapPropsToStylesProps","props","hasMenu","hasIcon","vertical","inSubmenu","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","propTypes","createCommon","bool"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,GAAT,QAA8B,YAA9B;AAmBA,OAAO,IAAMC,wBAAwB,GAAG,sBAAjC;AAEP;;;;AAGA,OAAO,IAAMC,eAAN;AAAA,MAAMA,eAAe,GAAGL,OAAO,CAAyEG,GAAzE,EAA8E;AAClHG,IAAAA,SAAS,EAAEF,wBADuG;AAElHG,IAAAA,WAAW,EAAE,iBAFqG;AAGlHC,IAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,aAAK;AAC/BC,QAAAA,OAAO,EAAED,KAAK,CAACC,OADgB;AAE/BC,QAAAA,OAAO,EAAEF,KAAK,CAACE,OAFgB;AAG/BC,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHe;AAI/BC,QAAAA,SAAS,EAAEJ,KAAK,CAACI;AAJc,OAAL;AAAA,KAHsF;AASlHC,IAAAA,YAAY,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB,EAAmC,WAAnC,CAToG;AAWlHC,IAAAA,cAAc,EAAE,IAXkG;AAYlHC,IAAAA,eAAe,EAAE;AACfC,MAAAA,UAAU,EAAE;AADG;AAZiG,GAA9E,CAA/B;AAiBPZ,EAAAA,eAAe,CAACa,YAAhB,GAA+B;AAC7BC,IAAAA,EAAE,EAAE;AADyB,GAA/B;AAGAd,EAAAA,eAAe,CAACe,SAAhB,qBACKlB,eAAe,CAACmB,YAAhB,EADL;AAEEV,IAAAA,OAAO,EAAEV,SAAS,CAACqB,IAFrB;AAGEZ,IAAAA,OAAO,EAAET,SAAS,CAACqB,IAHrB;AAIEV,IAAAA,QAAQ,EAAEX,SAAS,CAACqB,IAJtB;AAKET,IAAAA,SAAS,EAAEZ,SAAS,CAACqB;AALvB;AApBO,SAAMjB,eAAN;AAAA","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemContentOwnProps {\n  /** Indicates whether the parent menu item has menu. */\n  hasMenu?: boolean;\n\n  /** Indicates whether the parent menu item has icon. */\n  hasIcon?: boolean;\n\n  /** Indicates whether the parent menu item is inside vertical menu. */\n  vertical?: boolean;\n\n  /** Indicates whether the parent menu item is part of submenu. */\n  inSubmenu?: boolean;\n}\n\nexport interface MenuItemContentProps extends BoxProps, MenuItemContentOwnProps {}\nexport type MenuItemContentStylesProps = Pick<MenuItemContentProps, 'hasMenu' | 'hasIcon' | 'vertical' | 'inSubmenu'>;\n\nexport const menuItemContentClassName = 'ui-menu__itemcontent';\n\n/**\n * A MenuItemContent allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemContent = compose<'span', MenuItemContentProps, MenuItemContentStylesProps, BoxProps, {}>(Box, {\n  className: menuItemContentClassName,\n  displayName: 'MenuItemContent',\n  mapPropsToStylesProps: props => ({\n    hasMenu: props.hasMenu,\n    hasIcon: props.hasIcon,\n    vertical: props.vertical,\n    inSubmenu: props.inSubmenu,\n  }),\n  handledProps: ['hasMenu', 'hasIcon', 'vertical', 'inSubmenu'],\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nMenuItemContent.defaultProps = {\n  as: 'span',\n};\nMenuItemContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  hasIcon: PropTypes.bool,\n  hasMenu: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n};\n"],"file":"MenuItemContent.js"}