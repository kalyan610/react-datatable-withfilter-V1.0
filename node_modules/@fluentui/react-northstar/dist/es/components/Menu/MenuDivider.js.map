{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerBehavior","compose","getElementType","mergeVariablesOverrides","useFluentContext","useAccessibility","useTelemetry","useStyles","useUnhandledProps","useContextSelectors","PropTypes","React","createShorthandFactory","commonPropTypes","childrenExist","rtlTextContainer","MenuContext","menuDividerClassName","MenuDivider","inputProps","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","parentProps","variables","v","slotProps","divider","accessibility","behaviors","props","children","content","vertical","inSubmenu","pills","pointing","primary","className","design","styles","secondary","getA11yProps","debugName","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","element","root","getAttributes","forElements","shorthandConfig","mappedProp","defaultProps","as","propTypes","createCommon","bool","oneOf","create","Component"],"mappings":"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","sourcesContent":["import { Accessibility, MenuDividerBehaviorProps, menuDividerBehavior } from '@fluentui/accessibility';\nimport {\n  compose,\n  ComponentWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useFluentContext,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { MenuContext, MenuDividerSubscribedValue } from './menuContext';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<MenuDividerBehaviorProps>;\n\n  inSubmenu?: boolean;\n  secondary?: boolean;\n  pills?: boolean;\n  pointing?: boolean | 'start' | 'end';\n  primary?: boolean;\n  vertical?: boolean;\n}\n\nexport type MenuDividerStylesProps = Required<\n  Pick<MenuDividerProps, 'vertical' | 'inSubmenu' | 'pills' | 'primary' | 'pointing' | 'secondary'>\n> & {\n  hasContent: boolean;\n};\n\nexport const menuDividerClassName = 'ui-menu__divider';\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport const MenuDivider = compose<'li', MenuDividerProps, MenuDividerStylesProps, {}, {}>(\n  (inputProps, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const parentProps = (useContextSelectors(MenuContext, {\n      variables: v => v.variables,\n      slotProps: v => v.slotProps.divider,\n      accessibility: v => v.behaviors.divider,\n    }) as unknown) as MenuDividerSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const props = {\n      ...parentProps.slotProps,\n      accessibility: parentProps.accessibility,\n      variables: parentProps.variables,\n      ...inputProps,\n    };\n\n    const {\n      accessibility = menuDividerBehavior,\n      children,\n      content,\n      vertical,\n      inSubmenu,\n      pills,\n      pointing,\n      primary,\n      className,\n      design,\n      styles,\n      secondary,\n      variables,\n    } = props;\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<MenuDividerStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        hasContent: !!content || !!children,\n        pills,\n        pointing,\n        vertical,\n        inSubmenu,\n        primary,\n        secondary,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(variables, parentProps.variables),\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n          ...unhandledProps,\n          ref,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: menuDividerClassName,\n    displayName: 'MenuDivider',\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'pointing',\n      'inSubmenu',\n      'primary',\n      'secondary',\n      'vertical',\n    ],\n    shorthandConfig: { mappedProp: 'content' },\n  },\n) as ComponentWithAs<'li', MenuDividerProps> & {\n  create: ShorthandFactory<MenuDividerProps>;\n};\n\nMenuDivider.defaultProps = {\n  as: 'li',\n};\n\nMenuDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n};\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n"],"file":"MenuDivider.js"}