{"version":3,"sources":["components/Tooltip/Tooltip.tsx"],"names":["tooltipAsLabelBehavior","useAccessibility","useAutoControlled","useTelemetry","useFluentContext","useTriggerElement","Ref","customPropTypes","PropTypes","React","commonPropTypes","isFromKeyboard","setWhatInputSource","getOrGenerateIdFromShorthand","createShorthandFactory","ALIGNMENTS","POSITIONS","Popper","PortalInner","TooltipContent","tooltipClassName","Tooltip","props","context","displayName","telemetry","setStart","setEnd","accessibility","align","content","flipBoundary","mountNode","mouseLeaveDelay","offset","overflowBoundary","pointing","popperRef","position","positionFixed","target","trigger","unstable_disableTether","unstable_pinned","defaultValue","defaultOpen","value","open","initialValue","setOpen","triggerElement","contentRef","useRef","pointerTargetRef","triggerRef","closeTimeoutId","contentId","current","getA11Props","actionHandlers","close","e","setTooltipOpen","stopPropagation","preventDefault","mapPropsToBehavior","triggerAriaLabel","getContentOverrideProps","predefinedProps","onMouseEnter","onMouseLeave","renderPopperChildren","popperProps","tooltipContent","create","defaultProps","placement","pointerRef","generateKey","overrideProps","shouldStayOpen","relatedTarget","trySetOpen","newValue","newOpen","clearTimeout","defaultView","setTimeout","triggerProps","onFocus","args","onBlur","element","cloneElement","rtl","propTypes","createCommon","as","oneOf","children","bool","domNode","number","oneOfType","func","arrayOf","onOpenChange","every","disallow","shorthandAllowingChildren","ref","object","handledProps","Object","keys","Content","Component","mappedProp"],"mappings":"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","sourcesContent":["import { Accessibility, tooltipAsLabelBehavior, TooltipBehaviorProps } from '@fluentui/accessibility';\nimport {\n  useAccessibility,\n  useAutoControlled,\n  useTelemetry,\n  useFluentContext,\n  useTriggerElement,\n} from '@fluentui/react-bindings';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  ChildrenComponentProps,\n  ContentComponentProps,\n  StyledComponentProps,\n  commonPropTypes,\n  isFromKeyboard,\n  setWhatInputSource,\n  getOrGenerateIdFromShorthand,\n  createShorthandFactory,\n} from '../../utils';\nimport { ShorthandValue, FluentComponentStaticProps } from '../../types';\nimport {\n  ALIGNMENTS,\n  POSITIONS,\n  Popper,\n  PositioningProps,\n  PopperChildrenProps,\n  Alignment,\n  Position,\n} from '../../utils/positioner';\nimport { PortalInner } from '../Portal/PortalInner';\nimport { TooltipContent, TooltipContentProps } from './TooltipContent';\n\nexport interface TooltipProps\n  extends StyledComponentProps<TooltipProps>,\n    ChildrenComponentProps<React.ReactElement>,\n    ContentComponentProps<ShorthandValue<TooltipContentProps>>,\n    PositioningProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   * @default tooltipBehavior\n   * @available tooltipAsLabelBehavior\n   * */\n  accessibility?: Accessibility<TooltipBehaviorProps>;\n\n  /** Additional CSS class name(s) to apply.  */\n  className?: string;\n\n  /** Initial value for 'open'. */\n  defaultOpen?: boolean;\n\n  /** Existing element the tooltip should be bound to. */\n  mountNode?: HTMLElement;\n\n  /** Delay in ms for the mouse leave event, before the tooltip will be closed. */\n  mouseLeaveDelay?: number;\n\n  /** Defines whether tooltip is displayed. */\n  open?: boolean;\n\n  /**\n   * Event for request to change 'open' value.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onOpenChange?: (e: React.MouseEvent | React.FocusEvent | React.KeyboardEvent, data: TooltipProps) => void;\n\n  /** A tooltip can show a pointer to trigger. */\n  pointing?: boolean;\n\n  /**\n   * DOM element that should be used as tooltip's target - instead of 'trigger' element that is used by default.\n   */\n  target?: HTMLElement;\n\n  /** Element to be rendered in-place where the tooltip is defined. */\n  trigger?: JSX.Element;\n}\n\nexport const tooltipClassName = 'ui-tooltip';\n\n/**\n * A Tooltip displays additional non-modal information on top of its target element.\n * Tooltip doesn't receive focus and cannot contain focusable elements.\n *\n * @accessibility\n * Implements [ARIA Tooltip](https://www.w3.org/TR/wai-aria-practices-1.1/#tooltip) design pattern.\n */\nexport const Tooltip: React.FC<TooltipProps> &\n  FluentComponentStaticProps<TooltipProps> & {\n    Content: typeof TooltipContent;\n  } = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(Tooltip.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    align,\n    content,\n    flipBoundary,\n    mountNode,\n    mouseLeaveDelay,\n    offset,\n    overflowBoundary,\n    pointing,\n    popperRef,\n    position,\n    positionFixed,\n    target,\n    trigger,\n    unstable_disableTether,\n    unstable_pinned,\n  } = props;\n\n  const [open, setOpen] = useAutoControlled({\n    defaultValue: props.defaultOpen,\n    value: props.open,\n\n    initialValue: false,\n  });\n  const triggerElement = useTriggerElement(props);\n\n  const contentRef = React.useRef<HTMLElement>();\n  const pointerTargetRef = React.useRef<HTMLDivElement>();\n  const triggerRef = React.useRef<HTMLElement>();\n\n  const closeTimeoutId = React.useRef<number>();\n  // TODO: Consider `getOrGenerateIdFromShorthand()` as hook and make it SSR safe\n  const contentId = React.useRef<string>();\n  contentId.current = getOrGenerateIdFromShorthand('tooltip-content-', content, contentId.current);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      close: e => {\n        setTooltipOpen(false, e);\n        e.stopPropagation();\n        e.preventDefault();\n      },\n    },\n    mapPropsToBehavior: () => ({\n      'aria-describedby': props['aria-describedby'],\n      'aria-label': props['aria-label'],\n      'aria-labelledby': props['aria-labelledby'],\n      contentId: contentId.current,\n      triggerAriaLabel: trigger && trigger.props['aria-label'],\n      open,\n    }),\n  });\n\n  const getContentOverrideProps = (\n    predefinedProps: TooltipContentProps,\n  ): TooltipContentProps & Pick<React.DOMAttributes<HTMLDivElement>, 'onMouseEnter' | 'onMouseLeave'> => ({\n    onMouseEnter: (e: React.MouseEvent) => {\n      setTooltipOpen(true, e);\n      _.invoke(predefinedProps, 'onMouseEnter', e);\n    },\n    onMouseLeave: (e: React.MouseEvent) => {\n      setTooltipOpen(false, e);\n      _.invoke(predefinedProps, 'onMouseLeave', e);\n    },\n  });\n\n  const renderPopperChildren = (popperProps: PopperChildrenProps) => {\n    const tooltipContent = TooltipContent.create(content, {\n      defaultProps: () =>\n        getA11Props('tooltip', {\n          open,\n          placement: popperProps.placement,\n          pointing,\n          pointerRef: pointerTargetRef,\n        }),\n      generateKey: false,\n      overrideProps: getContentOverrideProps,\n    });\n\n    return tooltipContent ? <Ref innerRef={contentRef}>{tooltipContent}</Ref> : null;\n  };\n\n  const shouldStayOpen = (e: React.FocusEvent) =>\n    _.invoke(e, 'currentTarget.contains', e.relatedTarget) || _.invoke(contentRef.current, 'contains', e.relatedTarget);\n\n  const trySetOpen = (newValue: boolean, e: React.MouseEvent | React.FocusEvent | React.KeyboardEvent) => {\n    setOpen(newValue);\n    _.invoke(props, 'onOpenChange', e, { ...props, ...{ open: newValue } });\n  };\n\n  const setTooltipOpen = (newOpen: boolean, e: React.MouseEvent | React.KeyboardEvent) => {\n    clearTimeout(closeTimeoutId.current);\n\n    if (newOpen) {\n      trySetOpen(true, e);\n    } else {\n      closeTimeoutId.current = context.target.defaultView.setTimeout(() => {\n        trySetOpen(false, e);\n      }, mouseLeaveDelay);\n    }\n  };\n\n  const triggerProps: React.HTMLAttributes<HTMLElement> = {\n    onFocus: (e, ...args) => {\n      if (isFromKeyboard()) {\n        trySetOpen(true, e);\n      }\n      _.invoke(triggerElement, 'props.onFocus', e, ...args);\n    },\n    onBlur: (e, ...args) => {\n      if (!shouldStayOpen(e)) {\n        trySetOpen(false, e);\n      }\n      _.invoke(triggerElement, 'props.onBlur', e, ...args);\n    },\n    onMouseEnter: (e, ...args) => {\n      setTooltipOpen(true, e);\n      setWhatInputSource(context.target, 'mouse');\n      _.invoke(triggerElement, 'props.onMouseEnter', e, ...args);\n    },\n    onMouseLeave: (e, ...args) => {\n      setTooltipOpen(false, e);\n      _.invoke(triggerElement, 'props.onMouseLeave', e, ...args);\n    },\n  };\n\n  const element = (\n    <>\n      {triggerElement && (\n        <Ref innerRef={triggerRef}>{React.cloneElement(triggerElement, getA11Props('trigger', triggerProps))}</Ref>\n      )}\n      <PortalInner mountNode={mountNode}>\n        <Popper\n          align={align}\n          flipBoundary={flipBoundary}\n          offset={offset}\n          overflowBoundary={overflowBoundary}\n          pointerTargetRef={pointerTargetRef}\n          popperRef={popperRef}\n          position={position}\n          positionFixed={positionFixed}\n          enabled={open}\n          rtl={context.rtl}\n          targetRef={target || triggerRef}\n          children={renderPopperChildren}\n          unstable_disableTether={unstable_disableTether}\n          unstable_pinned={unstable_pinned}\n        />\n      </PortalInner>\n    </>\n  );\n  setEnd();\n\n  return element;\n};\n\nTooltip.displayName = 'Tooltip';\n\nTooltip.defaultProps = {\n  align: 'center',\n  position: 'above',\n  mouseLeaveDelay: 10,\n  pointing: true,\n  accessibility: tooltipAsLabelBehavior,\n};\nTooltip.propTypes = {\n  ...commonPropTypes.createCommon({\n    as: false,\n    content: false,\n  }),\n  align: PropTypes.oneOf<Alignment>(ALIGNMENTS),\n  children: PropTypes.element,\n  defaultOpen: PropTypes.bool,\n  mountNode: customPropTypes.domNode,\n  mouseLeaveDelay: PropTypes.number,\n  offset: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.number) as PropTypes.Requireable<[number, number]>,\n  ]),\n  open: PropTypes.bool,\n  onOpenChange: PropTypes.func,\n  pointing: PropTypes.bool,\n  position: PropTypes.oneOf<Position>(POSITIONS),\n  positionFixed: PropTypes.bool,\n  target: customPropTypes.domNode,\n  trigger: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.element]),\n  content: customPropTypes.shorthandAllowingChildren,\n  unstable_disableTether: PropTypes.oneOf([true, false, 'all']),\n  unstable_pinned: PropTypes.bool,\n  popperRef: customPropTypes.ref,\n  flipBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n  overflowBoundary: PropTypes.oneOfType([\n    PropTypes.object as PropTypes.Requireable<HTMLElement>,\n    PropTypes.arrayOf(PropTypes.object) as PropTypes.Requireable<HTMLElement[]>,\n    PropTypes.oneOf<'clippingParents' | 'window' | 'scrollParent'>(['clippingParents', 'window', 'scrollParent']),\n  ]),\n};\nTooltip.handledProps = Object.keys(Tooltip.propTypes) as any;\n\nTooltip.Content = TooltipContent;\n\nTooltip.create = createShorthandFactory({ Component: Tooltip, mappedProp: 'content' });\n"],"file":"Tooltip.js"}