{"version":3,"sources":["themes/teams/components/Avatar/avatarStyles.ts"],"names":["pxToRem","sizeToPxValue","smallest","smaller","small","medium","large","larger","largest","iconSizeToPxValue","avatarStyles","root","size","props","sizeInRem","position","backgroundColor","display","verticalAlign","height","width","icon","p","v","variables","iconsizeInRem","color","iconColor","background","iconBackgroundColor","borderRadius","alignItems","square","squareAvatarBorderRadius","margin","image","borderColor","avatarBorderColor","borderStyle","borderWidth","avatarBorderWidth","objectFit","label","lineHeight","fontSize","textAlign","padding","status","bottom","right","boxShadow","statusBorderWidth","statusBorderColor"],"mappings":"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","sourcesContent":["import { pxToRem, SizeValue } from '../../../../utils';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { AvatarStylesProps } from '../../../../components/Avatar/Avatar';\nimport { AvatarVariables } from './avatarVariables';\n\nconst sizeToPxValue: Record<SizeValue, number> = {\n  smallest: 20,\n  smaller: 24,\n  small: 28,\n  medium: 32,\n  large: 44,\n  larger: 64,\n  largest: 96,\n};\n\nconst iconSizeToPxValue: Record<SizeValue, number> = {\n  smallest: 10,\n  smaller: 12,\n  small: 16,\n  medium: 16,\n  large: 20,\n  larger: 32,\n  largest: 40,\n};\n\nexport const avatarStyles: ComponentSlotStylesPrepared<AvatarStylesProps, AvatarVariables> = {\n  root: ({ props: { size } }): ICSSInJSStyle => {\n    const sizeInRem = pxToRem(sizeToPxValue[size]);\n\n    return {\n      position: 'relative',\n      backgroundColor: 'inherit',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: sizeInRem,\n      width: sizeInRem,\n    };\n  },\n  icon: ({ props: p, variables: v }) => {\n    const sizeInRem = pxToRem(sizeToPxValue[p.size]);\n    const iconsizeInRem = pxToRem(iconSizeToPxValue[p.size]);\n\n    return {\n      color: v.iconColor,\n      background: v.iconBackgroundColor,\n      width: sizeInRem,\n      height: sizeInRem,\n      borderRadius: '50%',\n      display: 'inline-flex',\n      alignItems: 'center',\n      ...(p.square && {\n        borderRadius: v.squareAvatarBorderRadius,\n      }),\n      '& > :first-child': {\n        margin: '0 auto',\n        width: iconsizeInRem,\n        height: iconsizeInRem,\n        '& svg': {\n          width: '100%',\n          height: '100%',\n        },\n      },\n    };\n  },\n  image: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    borderColor: v.avatarBorderColor,\n    borderStyle: 'solid',\n    borderWidth: v.avatarBorderWidth,\n\n    height: '100%',\n    objectFit: 'cover',\n    verticalAlign: 'top',\n    width: '100%',\n\n    ...(p.square && {\n      borderRadius: v.squareAvatarBorderRadius,\n    }),\n  }),\n  label: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const sizeInRem = pxToRem(sizeToPxValue[p.size]);\n    return {\n      display: 'inline-block',\n      width: sizeInRem,\n      height: sizeInRem,\n      lineHeight: sizeInRem,\n      fontSize: pxToRem(sizeToPxValue[p.size] / 2.333),\n      verticalAlign: 'top',\n      textAlign: 'center',\n      padding: '0',\n      ...(p.square && {\n        borderRadius: v.squareAvatarBorderRadius,\n      }),\n    };\n  },\n  status: ({ variables: v }): ICSSInJSStyle => ({\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    boxShadow: `0 0 0 ${v.statusBorderWidth} ${v.statusBorderColor}`,\n  }),\n};\n"],"file":"avatarStyles.js"}