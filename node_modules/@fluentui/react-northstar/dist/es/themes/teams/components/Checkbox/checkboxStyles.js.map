{"version":3,"sources":["themes/teams/components/Checkbox/checkboxStyles.ts"],"names":["checkboxSlotClassNames","getBorderFocusStyles","checkboxIndicatorUrl","pxToRem","commonToggleBeforeStyles","v","content","display","borderRadius","width","toggleIndicatorSize","height","transition","checkboxStyles","root","p","props","variables","t","theme","position","gridTemplateColumns","gap","msGridColumns","labelPosition","cursor","outline","color","textColor","padding","rootPadding","verticalAlign","alignItems","siteVariables","textColorHover","indicator","toggle","checked","borderColor","checkedBackgroundHover","backgroundImage","checkedIndicatorColor","borderColorHover","disabled","borderStyle","borderWidth","margin","togglePadding","background","checkedBorderColor","toggleCheckedPadding","checkedTextColor","pointerEvents","disabledColor","checkbox","msGridRowAlign","gridColumn","msGridColumn","boxShadow","indicatorColor","userSelect","backgroundPosition","backgroundRepeat","checkedBackground","backgroundColor","disabledBackground","disabledBorderColor","disabledCheckedIndicatorColor","disabledBackgroundChecked","boxSizing","toggleBorderRadius","toggleMargin","toggleWidth","toggleHeight","disabledToggleIndicatorColor","label"],"mappings":"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","sourcesContent":["import { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CheckboxStylesProps, checkboxSlotClassNames } from '../../../../components/Checkbox/Checkbox';\nimport { CheckboxVariables } from './checkboxVariables';\nimport { getBorderFocusStyles } from '../../getBorderFocusStyles';\nimport { checkboxIndicatorUrl } from './checkboxIndicatorUrl';\nimport { pxToRem } from '../../../../utils';\n\nconst commonToggleBeforeStyles = v => ({\n  content: \"' '\",\n  display: 'block',\n  borderRadius: '50%',\n  width: v.toggleIndicatorSize,\n  height: v.toggleIndicatorSize,\n  transition: 'margin .3s ease',\n});\n\nexport const checkboxStyles: ComponentSlotStylesPrepared<CheckboxStylesProps, CheckboxVariables> = {\n  root: ({ props: p, variables: v, theme: t }): ICSSInJSStyle => ({\n    position: 'relative',\n\n    display: ['inline-grid', '-ms-inline-grid'],\n    gridTemplateColumns: `auto ${v.gap} 1fr`,\n    // IE11: Gap is done via virtual column as in autoprefixer\n    msGridColumns: `auto ${v.gap} 1fr`,\n\n    ...(p.labelPosition === 'start' && {\n      gridTemplateColumns: `1fr ${v.gap} auto`,\n      msGridColumns: `1fr ${v.gap} auto`,\n    }),\n\n    cursor: 'pointer',\n    outline: 0,\n\n    color: v.textColor,\n    padding: v.rootPadding,\n    verticalAlign: 'middle',\n    alignItems: 'start',\n\n    ...getBorderFocusStyles({ variables: t.siteVariables, borderRadius: '3px' }),\n\n    ':hover': {\n      color: v.textColorHover,\n\n      [`& .${checkboxSlotClassNames.indicator}`]: {\n        ...(!p.toggle && {\n          ...(p.checked && {\n            borderColor: v.checkedBackgroundHover,\n            backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackgroundHover),\n          }),\n          ...(!p.checked && {\n            borderColor: v.borderColorHover,\n          }),\n        }),\n        ...(p.toggle &&\n          !p.disabled && {\n            borderColor: v.borderColorHover,\n\n            ':before': {\n              ...commonToggleBeforeStyles(v),\n              borderColor: v.borderColorHover,\n              borderStyle: v.borderStyle,\n              borderWidth: v.borderWidth,\n              margin: v.togglePadding,\n              background: 'transparent',\n            },\n\n            ...(p.checked && {\n              borderColor: v.checkedBorderColor,\n              background: v.checkedBackgroundHover,\n              ':before': {\n                ...commonToggleBeforeStyles(v),\n                margin: v.toggleCheckedPadding,\n                background: v.checkedIndicatorColor,\n              },\n            }),\n          }),\n      },\n    },\n\n    ...(p.checked && {\n      color: v.checkedTextColor,\n    }),\n\n    ...(p.disabled && {\n      cursor: 'default',\n      pointerEvents: 'none',\n      color: v.disabledColor,\n    }),\n  }),\n\n  checkbox: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    msGridRowAlign: 'center',\n    gridColumn: 1,\n    msGridColumn: 1,\n\n    ...(p.labelPosition === 'start' && {\n      gridColumn: 3,\n      msGridColumn: 3,\n    }),\n\n    boxShadow: 'unset',\n    width: pxToRem(16),\n    height: pxToRem(16),\n\n    borderColor: v.borderColor,\n    borderStyle: v.borderStyle,\n    borderRadius: v.borderRadius,\n    borderWidth: v.borderWidth,\n    color: v.indicatorColor,\n    margin: v.margin,\n    padding: v.padding,\n    userSelect: 'none',\n\n    backgroundImage: checkboxIndicatorUrl(v.indicatorColor, v.background),\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n\n    ...(p.checked && {\n      borderColor: v.checkedBorderColor,\n      backgroundImage: checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackground),\n    }),\n\n    ...(p.disabled && {\n      backgroundColor: v.disabledBackground,\n      borderColor: v.disabledBorderColor,\n    }),\n\n    ...(p.disabled &&\n      p.checked && {\n        color: v.disabledCheckedIndicatorColor,\n        borderColor: v.disabledBackgroundChecked,\n        backgroundImage: checkboxIndicatorUrl(v.disabledCheckedIndicatorColor, v.disabledBackgroundChecked),\n      }),\n  }),\n\n  toggle: ({ props: p, variables: v }): ICSSInJSStyle => ({\n    msGridRowAlign: 'center',\n    gridColumn: 1,\n    msGridColumn: 1,\n\n    ...(p.labelPosition === 'start' && {\n      gridColumn: 3,\n      msGridColumn: 3,\n    }),\n\n    boxShadow: 'unset',\n    boxSizing: 'border-box',\n\n    background: v.background,\n    borderColor: v.borderColor,\n    borderStyle: v.borderStyle,\n    borderRadius: v.toggleBorderRadius,\n    borderWidth: v.borderWidth,\n    margin: v.toggleMargin,\n    userSelect: 'none',\n    width: v.toggleWidth,\n    height: v.toggleHeight,\n\n    ':before': {\n      ...commonToggleBeforeStyles(v),\n      borderColor: p.disabled ? v.disabledToggleIndicatorColor : v.borderColor,\n      borderStyle: v.borderStyle,\n      borderWidth: v.borderWidth,\n      margin: v.togglePadding,\n    },\n\n    ...(p.checked && {\n      borderColor: v.checkedBorderColor,\n      background: v.checkedBackground,\n      ':before': {\n        ...commonToggleBeforeStyles(v),\n        margin: v.toggleCheckedPadding,\n        background: v.checkedIndicatorColor,\n      },\n    }),\n\n    ...(p.disabled && {\n      background: v.disabledBackground,\n      borderColor: v.disabledBorderColor,\n      ...(p.checked && {\n        background: v.disabledBackgroundChecked,\n        borderColor: 'transparent',\n        ':before': {\n          ...commonToggleBeforeStyles(v),\n          margin: v.toggleCheckedPadding,\n          background: v.disabledCheckedIndicatorColor,\n        },\n      }),\n    }),\n  }),\n\n  label: ({ props: p }): ICSSInJSStyle => ({\n    display: 'block', // IE11: should be forced to be block, as inline-block is not supported\n\n    gridColumn: 3,\n    msGridColumn: 3,\n\n    ...(p.labelPosition === 'start' && {\n      gridColumn: 1,\n      msGridColumn: 1,\n    }),\n  }),\n};\n"],"file":"checkboxStyles.js"}