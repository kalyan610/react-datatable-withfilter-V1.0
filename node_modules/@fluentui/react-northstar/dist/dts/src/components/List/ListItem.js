"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var react_bindings_1 = require("@fluentui/react-bindings");
var react_context_selector_1 = require("@fluentui/react-context-selector");
var classnames_1 = require("classnames");
var _ = require("lodash");
var PropTypes = require("prop-types");
var React = require("react");
var Box_1 = require("../Box/Box");
var utils_1 = require("../../utils");
var listContext_1 = require("./listContext");
exports.listItemClassName = 'ui-list__item';
exports.listItemSlotClassNames = {
    header: exports.listItemClassName + "__header",
    headerMedia: exports.listItemClassName + "__headerMedia",
    headerWrapper: exports.listItemClassName + "__headerWrapper",
    main: exports.listItemClassName + "__main",
    content: exports.listItemClassName + "__content",
    contentMedia: exports.listItemClassName + "__contentMedia",
    contentWrapper: exports.listItemClassName + "__contentWrapper",
    media: exports.listItemClassName + "__media",
    endMedia: exports.listItemClassName + "__endMedia",
};
/**
 * A ListItem contains a single piece of content within a List.
 */
exports.ListItem = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.ListItem.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var accessibility = props.accessibility, className = props.className, content = props.content, contentMedia = props.contentMedia, design = props.design, endMedia = props.endMedia, header = props.header, important = props.important, headerMedia = props.headerMedia, media = props.media, styles = props.styles;
    var parentProps = react_context_selector_1.useContextSelectors(listContext_1.ListContext, {
        debug: function (v) { return v.debug; },
        navigable: function (v) { return v.navigable; },
        selectable: function (v) { return v.selectable; },
        truncateContent: function (v) { return v.truncateContent; },
        truncateHeader: function (v) { return v.truncateHeader; },
        variables: function (v) { return v.variables; },
        onItemClick: function (v) { return v.onItemClick; },
        selected: function (v) { return v.selectedIndex === props.index; },
    });
    var _b = props.debug, debug = _b === void 0 ? parentProps.debug : _b, _c = props.navigable, navigable = _c === void 0 ? parentProps.navigable : _c, _d = props.selectable, selectable = _d === void 0 ? parentProps.selectable : _d, _e = props.selected, selected = _e === void 0 ? parentProps.selected : _e, _f = props.truncateContent, truncateContent = _f === void 0 ? parentProps.truncateContent : _f, _g = props.truncateHeader, truncateHeader = _g === void 0 ? parentProps.truncateHeader : _g, _h = props.variables, variables = _h === void 0 ? parentProps.variables : _h;
    var getA11Props = react_bindings_1.useAccessibility(accessibility, {
        debugName: exports.ListItem.displayName,
        actionHandlers: {
            performClick: function (e) {
                e.preventDefault();
                handleClick(e);
            },
        },
        mapPropsToBehavior: function () { return ({
            navigable: navigable,
            selectable: selectable,
            selected: selected,
        }); },
        rtl: context.rtl,
    });
    var _j = react_bindings_1.useStyles(exports.ListItem.displayName, {
        className: exports.listItemClassName,
        mapPropsToStyles: function () { return ({
            debug: debug,
            navigable: navigable,
            important: important,
            selectable: selectable,
            selected: selected,
            truncateContent: truncateContent,
            truncateHeader: truncateHeader,
            hasContent: !!content,
            hasContentMedia: !!contentMedia,
            hasHeader: !!header,
            hasHeaderMedia: !!headerMedia,
        }); },
        mapPropsToInlineStyles: function () { return ({ className: className, design: design, styles: styles, variables: variables }); },
        rtl: context.rtl,
    }), classes = _j.classes, resolvedStyles = _j.styles;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.ListItem.handledProps, props);
    var handleClick = function (e) {
        _.invoke(props, 'onClick', e, props);
        parentProps.onItemClick(e, props.index);
    };
    var contentElement = Box_1.Box.create(content, {
        defaultProps: function () { return ({
            className: exports.listItemSlotClassNames.content,
            styles: resolvedStyles.content,
        }); },
    });
    var contentMediaElement = Box_1.Box.create(contentMedia, {
        defaultProps: function () { return ({
            className: exports.listItemSlotClassNames.contentMedia,
            styles: resolvedStyles.contentMedia,
        }); },
    });
    var headerElement = Box_1.Box.create(header, {
        defaultProps: function () { return ({
            className: exports.listItemSlotClassNames.header,
            styles: resolvedStyles.header,
        }); },
    });
    var headerMediaElement = Box_1.Box.create(headerMedia, {
        defaultProps: function () { return ({
            className: exports.listItemSlotClassNames.headerMedia,
            styles: resolvedStyles.headerMedia,
        }); },
    });
    var endMediaElement = Box_1.Box.create(endMedia, {
        defaultProps: function () { return ({
            className: exports.listItemSlotClassNames.endMedia,
            styles: resolvedStyles.endMedia,
        }); },
    });
    var mediaElement = Box_1.Box.create(media, {
        defaultProps: function () { return ({
            className: exports.listItemSlotClassNames.media,
            styles: resolvedStyles.media,
        }); },
    });
    var element = getA11Props.unstable_wrapWithFocusZone(React.createElement(ElementType, tslib_1.__assign({}, getA11Props('root', tslib_1.__assign({ className: classes.root, onClick: handleClick }, unhandledProps))),
        mediaElement,
        React.createElement("div", { className: classnames_1.default(exports.listItemSlotClassNames.main, classes.main) },
            (headerElement || headerMediaElement) && (React.createElement("div", { className: classnames_1.default(exports.listItemSlotClassNames.headerWrapper, classes.headerWrapper) },
                headerElement,
                headerMediaElement)),
            (contentElement || contentMediaElement) && (React.createElement("div", { className: classnames_1.default(exports.listItemSlotClassNames.contentWrapper, classes.contentWrapper) },
                contentElement,
                contentMediaElement))),
        endMediaElement));
    setEnd();
    return element;
};
exports.ListItem.displayName = 'ListItem';
exports.ListItem.defaultProps = {
    as: 'li',
    accessibility: accessibility_1.listItemBehavior,
};
exports.ListItem.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon({
    content: false,
})), { contentMedia: PropTypes.any, content: PropTypes.any, debug: PropTypes.bool, header: PropTypes.any, endMedia: PropTypes.any, headerMedia: PropTypes.any, important: PropTypes.bool, media: PropTypes.any, selectable: PropTypes.bool, navigable: PropTypes.bool, index: PropTypes.number, selected: PropTypes.bool, truncateContent: PropTypes.bool, truncateHeader: PropTypes.bool, onClick: PropTypes.func });
exports.ListItem.handledProps = Object.keys(exports.ListItem.propTypes);
exports.ListItem.create = utils_1.createShorthandFactory({ Component: exports.ListItem, mappedProp: 'content' });
