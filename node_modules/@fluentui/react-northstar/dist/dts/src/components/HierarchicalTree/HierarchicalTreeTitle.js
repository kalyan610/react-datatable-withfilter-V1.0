"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var accessibility_1 = require("@fluentui/accessibility");
var _ = require("lodash");
var PropTypes = require("prop-types");
var React = require("react");
var utils_1 = require("../../utils");
var react_bindings_1 = require("@fluentui/react-bindings");
exports.hierarchicalTreeTitleClassName = 'ui-hierarchicaltree__title';
/**
 * A TreeTitle renders a title of TreeItem.
 */
exports.HierarchicalTreeTitle = function (props) {
    var context = react_bindings_1.useFluentContext();
    var _a = react_bindings_1.useTelemetry(exports.HierarchicalTreeTitle.displayName, context.telemetry), setStart = _a.setStart, setEnd = _a.setEnd;
    setStart();
    var children = props.children, content = props.content, open = props.open, hasSubtree = props.hasSubtree, className = props.className, design = props.design, styles = props.styles, variables = props.variables;
    var ElementType = react_bindings_1.getElementType(props);
    var unhandledProps = react_bindings_1.useUnhandledProps(exports.HierarchicalTreeTitle.handledProps, props);
    var getA11yProps = react_bindings_1.useAccessibility(props.accessibility, {
        debugName: exports.HierarchicalTreeTitle.displayName,
        actionHandlers: {
            performClick: function (e) {
                e.preventDefault();
                handleClick(e);
            },
        },
        mapPropsToBehavior: function () { return ({
            open: open,
            hasSubtree: hasSubtree,
        }); },
        rtl: context.rtl,
    });
    var classes = react_bindings_1.useStyles(exports.HierarchicalTreeTitle.displayName, {
        className: exports.hierarchicalTreeTitleClassName,
        mapPropsToInlineStyles: function () { return ({
            className: className,
            design: design,
            styles: styles,
            variables: variables,
        }); },
        rtl: context.rtl,
    }).classes;
    var handleClick = function (e) {
        _.invoke(props, 'onClick', e, props);
    };
    var element = (React.createElement(ElementType, tslib_1.__assign({}, getA11yProps('root', tslib_1.__assign(tslib_1.__assign({ className: classes.root, onClick: handleClick }, unhandledProps), utils_1.rtlTextContainer.getAttributes({ forElements: [children, content] })))), utils_1.childrenExist(children) ? children : content));
    setEnd();
    return element;
};
exports.HierarchicalTreeTitle.displayName = 'HierarchicalTreeTitle';
exports.HierarchicalTreeTitle.propTypes = tslib_1.__assign(tslib_1.__assign({}, utils_1.commonPropTypes.createCommon()), { onClick: PropTypes.func, open: PropTypes.bool, hasSubtree: PropTypes.bool });
exports.HierarchicalTreeTitle.defaultProps = {
    as: 'a',
    accessibility: accessibility_1.hierarchicalTreeTitleBehavior,
};
exports.HierarchicalTreeTitle.handledProps = Object.keys(exports.HierarchicalTreeTitle.propTypes);
exports.HierarchicalTreeTitle.create = utils_1.createShorthandFactory({
    Component: exports.HierarchicalTreeTitle,
    mappedProp: 'content',
});
