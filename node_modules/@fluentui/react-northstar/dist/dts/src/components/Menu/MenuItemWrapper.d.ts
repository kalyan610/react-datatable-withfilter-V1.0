import { BoxProps } from '../Box/Box';
interface MenuItemWrapperOwnProps {
    /** A menu item wrapper can be active. */
    active?: boolean;
    /** A menu item wrapper can show it is currently unable to be interacted with. */
    disabled?: boolean;
    /** A menu item wrapper may have just icons. */
    iconOnly?: boolean;
    /** Indicates whether the last event was from keyboard. */
    isFromKeyboard?: boolean;
    /** A menu item wrapper can adjust its appearance to de-emphasize its contents. */
    pills?: boolean;
    /**
     * A menu can point to show its relationship to nearby content.
     * For vertical menu, it can point to the start of the item or to the end.
     */
    pointing?: boolean | 'start' | 'end';
    /** The menu item wrapper can have primary type. */
    primary?: boolean;
    /** The menu item wrapper can have secondary type. */
    secondary?: boolean;
    /** Menu items wrapper can by highlighted using underline. */
    underlined?: boolean;
    /** A vertical menu displays elements vertically. */
    vertical?: boolean;
}
export interface MenuItemWrapperProps extends BoxProps, MenuItemWrapperOwnProps {
}
export declare type MenuItemWrapperStylesProps = Required<Pick<MenuItemWrapperProps, 'active' | 'disabled' | 'iconOnly' | 'isFromKeyboard' | 'pills' | 'pointing' | 'primary' | 'secondary' | 'underlined' | 'vertical'>>;
export declare const menuItemWrapperClassName = "ui-menu__itemwrapper";
/**
 * A MenuItemWrapper allows a user to have a dedicated component that can be targeted from the theme.
 */
export declare const MenuItemWrapper: import("@fluentui/react-bindings").ComponentWithAs<"li", MenuItemWrapperProps & BoxProps>;
export {};
