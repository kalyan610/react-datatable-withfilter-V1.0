"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var getBorderFocusStyles_1 = require("../../getBorderFocusStyles");
var utils_1 = require("../../../../utils");
var checkboxIndicatorUrl_1 = require("../Checkbox/checkboxIndicatorUrl");
var checkboxIndicatorIndeterminatedUrl_1 = require("./checkboxIndicatorIndeterminatedUrl");
exports.treeTitleStyles = {
    root: function (_a) {
        var p = _a.props, v = _a.variables, siteVariables = _a.theme.siteVariables;
        return (tslib_1.__assign(tslib_1.__assign({ padding: v.padding, cursor: 'pointer', color: v.color, position: 'relative' }, (p.selectable && {
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
        })), getBorderFocusStyles_1.getBorderFocusStyles({ variables: siteVariables })));
    },
    selectionIndicator: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({ display: 'inline-block', float: 'right', verticalAlign: 'middle', boxShadow: 'unset', width: utils_1.pxToRem(16), height: utils_1.pxToRem(16), borderColor: v.borderColor, borderStyle: v.borderStyle, borderRadius: v.borderRadius, borderWidth: v.borderWidth, color: v.indicatorColor, margin: v.selectionIndicatorMargin, padding: v.padding, userSelect: 'none', backgroundImage: checkboxIndicatorUrl_1.checkboxIndicatorUrl(v.indicatorColor, v.background), backgroundPosition: 'center', backgroundRepeat: 'no-repeat' }, (p.selected && {
            borderColor: v.checkedBorderColor,
            backgroundImage: checkboxIndicatorUrl_1.checkboxIndicatorUrl(v.checkedIndicatorColor, v.checkedBackground),
        })), (p.indeterminate && {
            borderColor: v.checkedBorderColor,
            backgroundImage: checkboxIndicatorIndeterminatedUrl_1.checkboxIndicatorIndeterminatedUrl(v.checkedIndicatorColor, v.checkedBackground),
        })), (p.disabled && {
            background: v.disabledBackground,
            borderColor: v.disabledBorderColor,
        })), (p.disabled &&
            p.selected && {
            color: v.disabledCheckedIndicatorColor,
            borderColor: v.disabledBackgroundChecked,
            backgroundImage: checkboxIndicatorUrl_1.checkboxIndicatorUrl(v.disabledCheckedIndicatorColor, v.disabledBackgroundChecked),
        })));
    },
};
