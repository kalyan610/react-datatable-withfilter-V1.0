"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var utils_1 = require("../../../../utils");
var colors_1 = require("../../colors");
exports.labelStyles = {
    root: function (_a) {
        var p = _a.props, v = _a.variables;
        var colors = colors_1.getColorScheme(v.colorScheme, p.color);
        return tslib_1.__assign(tslib_1.__assign({ display: 'inline-flex', alignItems: 'center', overflow: 'hidden', height: v.height, lineHeight: v.height, color: colors.background, backgroundColor: colors.foreground, fontSize: utils_1.pxToRem(14), borderRadius: utils_1.pxToRem(3), padding: v.padding }, (p.hasImage &&
            (p.imagePosition === 'start' ? { paddingLeft: v.startPaddingLeft } : { paddingRight: v.endPaddingRight }))), (p.circular && {
            borderRadius: v.circularRadius,
        }));
    },
    content: function (_a) {
        var p = _a.props, v = _a.variables;
        var hasStartElement = (p.hasImage && p.imagePosition === 'start') || (p.hasIcon && p.iconPosition === 'start');
        var hasEndElement = (p.hasImage && p.imagePosition === 'end') || (p.hasIcon && p.iconPosition === 'end');
        return tslib_1.__assign(tslib_1.__assign({}, (hasStartElement && {
            marginLeft: utils_1.pxToRem(3),
        })), (hasEndElement && {
            marginRight: utils_1.pxToRem(3),
        }));
    },
    image: function (_a) {
        var v = _a.variables;
        return ({
            height: v.height,
            width: v.height,
        });
    },
    icon: function (_a) {
        var p = _a.props, v = _a.variables;
        return (tslib_1.__assign({ display: 'inline-flex', alignItems: 'center', justifyContent: 'center', width: v.iconSize, height: v.iconSize, '& > :first-child': {
                height: '100%',
                width: '100%',
                '& svg': {
                    height: '100%',
                    width: '100%',
                },
            } }, (p.hasActionableIcon && {
            cursor: 'pointer',
        })));
    },
};
