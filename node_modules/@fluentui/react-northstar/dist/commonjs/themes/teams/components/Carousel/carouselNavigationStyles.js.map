{"version":3,"sources":["themes/teams/components/Carousel/carouselNavigationStyles.ts"],"names":["carouselNavigationStyles","root","p","props","v","variables","iconOnly","primary","vertical","thumbnails","colors","colorScheme","display","minHeight","margin","padding","color","backgroundColor","listStyleType","justifyContent","transform","width","thumbnailWidth","activeIndex","transition","alignItems","flexDirection","verticalBackgroundColor","border","borderWidth","primaryBorderColor","borderColor","borderRadius"],"mappings":";;;;;AAGA;;AACA;;AAEO,IAAMA,wBAGZ,GAAG;AACFC,EAAAA,IAAI,EAAE,oBAA+C;AAAA,QAArCC,CAAqC,QAA5CC,KAA4C;AAAA,QAAvBC,CAAuB,QAAlCC,SAAkC;AAAA,QAC3CC,QAD2C,GACCJ,CADD,CAC3CI,QAD2C;AAAA,QACjCC,OADiC,GACCL,CADD,CACjCK,OADiC;AAAA,QACxBC,QADwB,GACCN,CADD,CACxBM,QADwB;AAAA,QACdC,UADc,GACCP,CADD,CACdO,UADc;AAEnD,QAAMC,MAAM,GAAG,4BAAeN,CAAC,CAACO,WAAjB,EAA8B,IAA9B,EAAoCJ,OAApC,CAAf;AAEA;AACEK,MAAAA,OAAO,EAAE,MADX;AAEEC,MAAAA,SAAS,EAAE,oBAAQ,EAAR,CAFb;AAGEC,MAAAA,MAAM,EAAE,CAHV;AAIEC,MAAAA,OAAO,EAAE,CAJX;AAKEC,MAAAA,KAAK,EAAEZ,CAAC,CAACY,KALX;AAMEC,MAAAA,eAAe,EAAEb,CAAC,CAACa,eAAF,IAAqB,SANxC;AAOEC,MAAAA,aAAa,EAAE,MAPjB;AAQEC,MAAAA,cAAc,EAAE;AARlB,OASM,CAACX,QAAD,IACFC,UADE,IACY;AACZU,MAAAA,cAAc,EAAE,OADJ;AAEZC,MAAAA,SAAS,kBAAgB,oBAAQhB,CAAC,CAACiB,KAAF,GAAU,CAAV,GAAcjB,CAAC,CAACkB,cAAF,GAAmB,CAAjC,GAAqC,CAACpB,CAAC,CAACqB,WAAH,GAAiBnB,CAAC,CAACkB,cAAhE,CAAhB,MAFG;AAGZE,MAAAA,UAAU,EAAE;AAHA,KAVlB,EAeMlB,QAAQ,IAAI;AAAEmB,MAAAA,UAAU,EAAE;AAAd,KAflB,EAiBMjB,QAAQ;AACVkB,MAAAA,aAAa,EAAE,QADL;AAEVT,MAAAA,eAAe,EAAEb,CAAC,CAACuB,uBAFT;AAGVN,MAAAA,KAAK,EAAE,aAHG;AAIVN,MAAAA,OAAO,EAAK,oBAAQ,CAAR,CAAL;AAJG,OAKNT,QAAQ,IAAI;AACdM,MAAAA,OAAO,EAAE,cADK;AAEdS,MAAAA,KAAK,EAAE;AAFO,KALN,CAjBd,EA4BM,CAACf,QAAD,IACF,CAACE,QADC,IACW;AACX;AACAoB,MAAAA,MAAM,EAAKxB,CAAC,CAACyB,WAAP,gBAA4BtB,OAAO,GAAGH,CAAC,CAAC0B,kBAAL,GAA0B1B,CAAC,CAAC2B,WAAF,IAAiBrB,MAAM,CAACkB,MAArF,CAFK;AAGXI,MAAAA,YAAY,EAAE,oBAAQ,CAAR;AAHH,KA7BjB;AAmCD;AAxCC,CAHG","sourcesContent":["import { CarouselNavigationStylesProps } from '../../../../components/Carousel/CarouselNavigation';\nimport { ComponentSlotStylesPrepared, ICSSInJSStyle } from '@fluentui/styles';\nimport { CarouselNavigationVariables } from './carouselNavigationVariables';\nimport { pxToRem } from '../../../../utils';\nimport { getColorScheme } from '../../colors';\n\nexport const carouselNavigationStyles: ComponentSlotStylesPrepared<\n  CarouselNavigationStylesProps,\n  CarouselNavigationVariables\n> = {\n  root: ({ props: p, variables: v }): ICSSInJSStyle => {\n    const { iconOnly, primary, vertical, thumbnails } = p;\n    const colors = getColorScheme(v.colorScheme, null, primary);\n\n    return {\n      display: 'flex',\n      minHeight: pxToRem(24),\n      margin: 0,\n      padding: 0,\n      color: v.color,\n      backgroundColor: v.backgroundColor || 'inherit',\n      listStyleType: 'none',\n      justifyContent: 'center',\n      ...(!vertical &&\n        thumbnails && {\n          justifyContent: 'start',\n          transform: `translateX(${pxToRem(v.width / 2 - v.thumbnailWidth / 2 - +p.activeIndex * v.thumbnailWidth)})`,\n          transition: 'transform .5s ease',\n        }),\n      ...(iconOnly && { alignItems: 'center' }),\n\n      ...(vertical && {\n        flexDirection: 'column',\n        backgroundColor: v.verticalBackgroundColor,\n        width: 'fit-content',\n        padding: `${pxToRem(8)} 0`,\n        ...(iconOnly && {\n          display: 'inline-block',\n          width: 'auto',\n        }),\n      }),\n\n      ...(!iconOnly &&\n        !vertical && {\n          // primary has hardcoded grey border color\n          border: `${v.borderWidth} solid ${primary ? v.primaryBorderColor : v.borderColor || colors.border}`,\n          borderRadius: pxToRem(4),\n        }),\n    };\n  },\n};\n"],"file":"carouselNavigationStyles.js"}