{"version":3,"sources":["components/Dialog/utils/index.tsx"],"names":["_disableIosBodyScroll","event","preventDefault","enableBodyScroll","target","style","overflow","removeEventListener","disableBodyScroll","addEventListener","passive","capture","dialogsCounterAttribute","lockBodyScroll","openDialogs","body","getAttribute","setAttribute","unlockBodyScroll","removeAttribute"],"mappings":";;;;;;;AAAA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAuB;AACnDA,EAAAA,KAAK,CAACC,cAAN;AACD,CAFD;;AAIO,SAASC,gBAAT,CAA0BC,MAA1B,EAAqD;AAC1D,MAAIA,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,GAAwB,OAAxB;AACAF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,WAA3B,EAAwCP,qBAAxC;AACD;AACF;;AAEM,SAASQ,iBAAT,CAA2BJ,MAA3B,EAAsD;AAC3D,MAAIA,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACC,KAAP,CAAaC,QAAb,GAAwB,QAAxB;AACAF,IAAAA,MAAM,CAACK,gBAAP,CAAwB,WAAxB,EAAqCT,qBAArC,EAA4D;AAAEU,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAA5D;AACD;AACF;;AAED,IAAMC,uBAAuB,GAAG,sBAAhC;;AAEO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACT,MAAD,EAAsB;AAClD,MAAMU,WAAW,GAAG,CAAC,CAACV,MAAM,CAACW,IAAP,CAAYC,YAAZ,CAAyBJ,uBAAzB,CAAD,IAAsD,CAAvD,IAA4D,CAAhF;AACAR,EAAAA,MAAM,CAACW,IAAP,CAAYE,YAAZ,CAAyBL,uBAAzB,OAAqDE,WAArD,EAFkD,CAIlD;;AACA,MAAIA,WAAW,KAAK,CAApB,EAAuB;AACrBN,IAAAA,iBAAiB,CAACJ,MAAM,CAACW,IAAR,CAAjB;AACD;AACF,CARM;;;;AAUA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACd,MAAD,EAAsB;AACpD,MAAMU,WAAW,GAAG,CAAC,CAACV,MAAM,CAACW,IAAP,CAAYC,YAAZ,CAAyBJ,uBAAzB,CAAD,IAAsD,CAAvD,IAA4D,CAAhF;AACAR,EAAAA,MAAM,CAACW,IAAP,CAAYE,YAAZ,CAAyBL,uBAAzB,OAAqDE,WAArD,EAFoD,CAIpD;;AACA,MAAIA,WAAW,KAAK,CAApB,EAAuB;AACrBX,IAAAA,gBAAgB,CAACC,MAAM,CAACW,IAAR,CAAhB;AACAX,IAAAA,MAAM,CAACW,IAAP,CAAYI,eAAZ,CAA4BP,uBAA5B;AACD;AACF,CATM","sourcesContent":["const _disableIosBodyScroll = (event: TouchEvent) => {\n  event.preventDefault();\n};\n\nexport function enableBodyScroll(target: HTMLElement): void {\n  if (target) {\n    target.style.overflow = 'unset';\n    target.removeEventListener('touchmove', _disableIosBodyScroll);\n  }\n}\n\nexport function disableBodyScroll(target: HTMLElement): void {\n  if (target) {\n    target.style.overflow = 'hidden';\n    target.addEventListener('touchmove', _disableIosBodyScroll, { passive: false, capture: false });\n  }\n}\n\nconst dialogsCounterAttribute = 'fluent-dialogs-count';\n\nexport const lockBodyScroll = (target: Document) => {\n  const openDialogs = (+target.body.getAttribute(dialogsCounterAttribute) || 0) + 1;\n  target.body.setAttribute(dialogsCounterAttribute, `${openDialogs}`);\n\n  // Avoid to block scroll in nested dialogs\n  if (openDialogs === 1) {\n    disableBodyScroll(target.body);\n  }\n};\n\nexport const unlockBodyScroll = (target: Document) => {\n  const openDialogs = (+target.body.getAttribute(dialogsCounterAttribute) || 0) - 1;\n  target.body.setAttribute(dialogsCounterAttribute, `${openDialogs}`);\n\n  // Only enables scroll if all dialogs are closed\n  if (openDialogs === 0) {\n    enableBodyScroll(target.body);\n    target.body.removeAttribute(dialogsCounterAttribute);\n  }\n};\n"],"file":"index.js"}