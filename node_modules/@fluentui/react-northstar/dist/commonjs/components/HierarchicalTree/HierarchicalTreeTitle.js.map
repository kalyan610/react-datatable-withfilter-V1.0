{"version":3,"sources":["components/HierarchicalTree/HierarchicalTreeTitle.tsx"],"names":["hierarchicalTreeTitleClassName","HierarchicalTreeTitle","props","context","displayName","telemetry","setStart","setEnd","children","content","open","hasSubtree","className","design","styles","variables","ElementType","unhandledProps","handledProps","getA11yProps","accessibility","debugName","actionHandlers","performClick","e","preventDefault","handleClick","mapPropsToBehavior","rtl","mapPropsToInlineStyles","classes","element","root","onClick","rtlTextContainer","getAttributes","forElements","propTypes","commonPropTypes","createCommon","PropTypes","func","bool","defaultProps","as","hierarchicalTreeTitleBehavior","Object","keys","create","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  hierarchicalTreeTitleBehavior,\n  HierarchicalTreeTitleBehaviorProps,\n} from '@fluentui/accessibility';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n} from '../../utils';\n\nimport { ComponentEventHandler, FluentComponentStaticProps } from '../../types';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useFluentContext,\n  useTelemetry,\n  useAccessibility,\n  useStyles,\n} from '@fluentui/react-bindings';\n\nexport interface HierarchicalTreeTitleProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<HierarchicalTreeTitleBehaviorProps>;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<HierarchicalTreeTitleProps>;\n\n  /** Whether or not the subtree of the item is in the open state. */\n  open?: boolean;\n\n  /** Whether or not the item has a subtree. */\n  hasSubtree?: boolean;\n}\n\nexport const hierarchicalTreeTitleClassName = 'ui-hierarchicaltree__title';\n\nexport type HierarchicalTreeTitleStylesProps = never;\n\n/**\n * A TreeTitle renders a title of TreeItem.\n */\nexport const HierarchicalTreeTitle: ComponentWithAs<'a', HierarchicalTreeTitleProps> &\n  FluentComponentStaticProps<HierarchicalTreeTitleProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(HierarchicalTreeTitle.displayName, context.telemetry);\n  setStart();\n\n  const { children, content, open, hasSubtree, className, design, styles, variables } = props;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(HierarchicalTreeTitle.handledProps, props);\n\n  const getA11yProps = useAccessibility<HierarchicalTreeTitleBehaviorProps>(props.accessibility, {\n    debugName: HierarchicalTreeTitle.displayName,\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        handleClick(e);\n      },\n    },\n    mapPropsToBehavior: () => ({\n      open,\n      hasSubtree,\n    }),\n    rtl: context.rtl,\n  });\n\n  const { classes } = useStyles<HierarchicalTreeTitleStylesProps>(HierarchicalTreeTitle.displayName, {\n    className: hierarchicalTreeTitleClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleClick = e => {\n    _.invoke(props, 'onClick', e, props);\n  };\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        onClick: handleClick,\n        ...unhandledProps,\n        ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n      })}\n    >\n      {childrenExist(children) ? children : content}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nHierarchicalTreeTitle.displayName = 'HierarchicalTreeTitle';\n\nHierarchicalTreeTitle.propTypes = {\n  ...commonPropTypes.createCommon(),\n  onClick: PropTypes.func,\n  open: PropTypes.bool,\n  hasSubtree: PropTypes.bool,\n};\n\nHierarchicalTreeTitle.defaultProps = {\n  as: 'a',\n  accessibility: hierarchicalTreeTitleBehavior,\n};\n\nHierarchicalTreeTitle.handledProps = Object.keys(HierarchicalTreeTitle.propTypes) as any;\n\nHierarchicalTreeTitle.create = createShorthandFactory({\n  Component: HierarchicalTreeTitle,\n  mappedProp: 'content',\n});\n"],"file":"HierarchicalTreeTitle.js"}