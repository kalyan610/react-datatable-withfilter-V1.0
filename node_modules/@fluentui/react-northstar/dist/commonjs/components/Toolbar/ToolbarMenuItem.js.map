{"version":3,"sources":["components/Toolbar/ToolbarMenuItem.tsx"],"names":["toolbarMenuItemClassName","toolbarMenuItemSlotClassNames","wrapper","submenu","ToolbarMenuItem","props","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","active","activeIndicator","children","content","disabled","submenuIndicator","icon","popup","inSubmenu","className","design","styles","variables","menu","menuPositioningProps","defaultValue","defaultMenuOpen","value","menuOpen","initialValue","setMenuOpen","itemRef","React","useRef","menuRef","ToolbarMenuContext","menuSlot","v","slots","parentVariables","useContext","ToolbarVariablesContext","mergedVariables","ElementType","slotProps","resolveSlotProps","unhandledProps","handledProps","getA11yProps","accessibility","debugName","mapPropsToBehavior","actionHandlers","performClick","event","preventDefault","handleClick","openMenu","closeAllMenusAndFocusNextParentItem","closeAllMenus","closeMenu","closeMenuAndFocusTrigger","doNotNavigateNextParentItem","stopPropagation","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","resolvedStyles","e","trySetMenuOpen","isSubmenuOpen","current","newValue","onStateChanged","outsideClickHandler","getRefs","isItemClick","target","isNestedClick","childRef","isInside","handleMenuOverrides","predefinedProps","onItemClick","itemProps","element","root","onClick","defaultProps","hasChildren","popupElement","onOpenChange","overrideProps","trigger","undefined","menuItemInner","maybeSubmenu","nestingRef","node","ToolbarMenu","wrapperElement","Box","create","ToolbarMenuItemIcon","ToolbarMenuItemSubmenuIndicator","ToolbarMenuItemActiveIndicator","Popup","indicatorBehavior","trapFocus","shorthandConfig","mappedProp","propTypes","commonPropTypes","createCommon","PropTypes","bool","customPropTypes","shorthandAllowingChildren","index","number","oneOfType","itemShorthand","collectionShorthand","func","onMenuOpenChange","shape","never","string","as","toolbarMenuItemBehavior"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAMA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAaA;;AACA;;AAEA;;AAUA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA0EO,IAAMA,wBAAwB,GAAG,sBAAjC;;AACA,IAAMC,6BAA4D,GAAG;AAC1EC,EAAAA,OAAO,EAAKF,wBAAL,cADmE;AAE1EG,EAAAA,OAAO,EAAKH,wBAAL;AAFmE,CAArE;AAKP;;;;;AAGO,IAAMI,eAAe,GAAG,4BAC7B,UAACC,KAAD,EAAQC,GAAR,EAAaC,cAAb,EAAgC;AAC9B,MAAMC,OAAO,GAAG,sCAAhB;;AAD8B,sBAED,iCAAaD,cAAc,CAACE,WAA5B,EAAyCD,OAAO,CAACE,SAAjD,CAFC;AAAA,MAEtBC,QAFsB,iBAEtBA,QAFsB;AAAA,MAEZC,MAFY,iBAEZA,MAFY;;AAG9BD,EAAAA,QAAQ;AAHsB,MAM5BE,MAN4B,GAoB1BR,KApB0B,CAM5BQ,MAN4B;AAAA,MAO5BC,eAP4B,GAoB1BT,KApB0B,CAO5BS,eAP4B;AAAA,MAQ5BC,QAR4B,GAoB1BV,KApB0B,CAQ5BU,QAR4B;AAAA,MAS5BC,OAT4B,GAoB1BX,KApB0B,CAS5BW,OAT4B;AAAA,MAU5BC,QAV4B,GAoB1BZ,KApB0B,CAU5BY,QAV4B;AAAA,MAW5BC,gBAX4B,GAoB1Bb,KApB0B,CAW5Ba,gBAX4B;AAAA,MAY5BC,IAZ4B,GAoB1Bd,KApB0B,CAY5Bc,IAZ4B;AAAA,MAa5BC,KAb4B,GAoB1Bf,KApB0B,CAa5Be,KAb4B;AAAA,MAc5BlB,OAd4B,GAoB1BG,KApB0B,CAc5BH,OAd4B;AAAA,MAe5BmB,SAf4B,GAoB1BhB,KApB0B,CAe5BgB,SAf4B;AAAA,MAgB5BC,SAhB4B,GAoB1BjB,KApB0B,CAgB5BiB,SAhB4B;AAAA,MAiB5BC,MAjB4B,GAoB1BlB,KApB0B,CAiB5BkB,MAjB4B;AAAA,MAkB5BC,MAlB4B,GAoB1BnB,KApB0B,CAkB5BmB,MAlB4B;AAAA,MAmB5BC,SAnB4B,GAoB1BpB,KApB0B,CAmB5BoB,SAnB4B;;AAAA,8BAqBO,mDAAkCpB,KAAK,CAACqB,IAAxC,CArBP;AAAA,MAqBvBA,IArBuB;AAAA,MAqBjBC,oBArBiB;;AAAA,2BAuBE,sCAAkB;AAChDC,IAAAA,YAAY,EAAEvB,KAAK,CAACwB,eAD4B;AAEhDC,IAAAA,KAAK,EAAEzB,KAAK,CAAC0B,QAFmC;AAGhDC,IAAAA,YAAY,EAAE;AAHkC,GAAlB,CAvBF;AAAA,MAuBvBD,QAvBuB;AAAA,MAuBbE,WAvBa;;AA6B9B,MAAMC,OAAO,GAAGC,KAAK,CAACC,MAAN,EAAhB;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACC,MAAN,EAAhB;;AA9B8B,aAgCR,+CAAoBE,sCAApB,EAAwC;AAC5DC,IAAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,KAAF,CAAQf,IAAZ;AAAA;AADiD,GAAxC,CAhCQ;AAAA,MAgCtBa,QAhCsB,QAgCtBA,QAhCsB,EAkCgB;;;AAE9C,MAAMG,eAAe,GAAGP,KAAK,CAACQ,UAAN,CAAiBC,gDAAjB,CAAxB;AACA,MAAMC,eAAe,GAAG,4CAAwBH,eAAxB,EAAyCjB,SAAzC,CAAxB;AAEA,MAAMqB,WAAW,GAAG,mCAAezC,KAAf,CAApB;AACA,MAAM0C,SAAS,GAAGxC,cAAc,CAACyC,gBAAf,CAAsD3C,KAAtD,CAAlB;AACA,MAAM4C,cAAc,GAAG,sCAAkB1C,cAAc,CAAC2C,YAAjC,EAA+C7C,KAA/C,CAAvB;AAEA,MAAM8C,YAAY,GAAG,qCAAiB9C,KAAK,CAAC+C,aAAvB,EAAsC;AACzDC,IAAAA,SAAS,EAAE9C,cAAc,CAACE,WAD+B;AAEzD6C,IAAAA,kBAAkB,EAAE;AAAA,aAAO;AACzB5B,QAAAA,IAAI,EAAJA,IADyB;AAEzBb,QAAAA,MAAM,EAANA,MAFyB;AAGzBkB,QAAAA,QAAQ,EAARA,QAHyB;AAIzBd,QAAAA,QAAQ,EAARA,QAJyB;AAKzB,sBAAcZ,KAAK,CAAC,YAAD,CALM;AAMzB,2BAAmBA,KAAK,CAAC,iBAAD,CANC;AAOzB,4BAAoBA,KAAK,CAAC,kBAAD;AAPA,OAAP;AAAA,KAFqC;AAWzDkD,IAAAA,cAAc,EAAE;AACdC,MAAAA,YAAY,EAAE,sBAAAC,KAAK,EAAI;AACrBA,QAAAA,KAAK,CAACC,cAAN;AACAC,QAAAA,WAAW,CAACF,KAAD,CAAX;AACD,OAJa;AAKdG,MAAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,eAAIG,SAAQ,CAACH,KAAD,CAAZ;AAAA,OALD;AAMdI,MAAAA,mCAAmC,EAAE,6CAAAJ,KAAK;AAAA,eAAIK,cAAa,CAACL,KAAD,CAAjB;AAAA,OAN5B;AAOdM,MAAAA,SAAS,EAAE,mBAAAN,KAAK;AAAA,eAAIM,UAAS,CAACN,KAAD,CAAb;AAAA,OAPF;AAQdO,MAAAA,wBAAwB,EAAE,kCAAAP,KAAK;AAAA,eAAIM,UAAS,CAACN,KAAD,CAAb;AAAA,OARjB;AASdQ,MAAAA,2BAA2B,EAAE,qCAAAR,KAAK,EAAI;AACpCA,QAAAA,KAAK,CAACS,eAAN;AACD,OAXa;AAYdJ,MAAAA,aAAa,EAAE,uBAAAL,KAAK;AAAA,eAAIK,cAAa,CAACL,KAAD,CAAjB;AAAA;AAZN,KAXyC;AAyBzDU,IAAAA,GAAG,EAAE3D,OAAO,CAAC2D;AAzB4C,GAAtC,CAArB;;AA3C8B,mBAuEc,8BAAsC5D,cAAc,CAACE,WAArD,EAAkE;AAC5Ga,IAAAA,SAAS,EAAEf,cAAc,CAACe,SADkF;AAE5Gf,IAAAA,cAAc,EAAdA,cAF4G;AAG5G6D,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBnD,QAAAA,QAAQ,EAARA,QADuB;AAEvBoD,QAAAA,UAAU,EAAE,CAAC,CAACrD;AAFS,OAAP;AAAA,KAH0F;AAO5GsD,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAC7BhD,QAAAA,SAAS,EAATA,SAD6B;AAE7BC,QAAAA,MAAM,EAANA,MAF6B;AAG7BC,QAAAA,MAAM,EAANA,MAH6B;AAI7BC,QAAAA,SAAS,EAAEoB;AAJkB,OAAP;AAAA,KAPoF;AAa5GsB,IAAAA,GAAG,EAAE3D,OAAO,CAAC2D,GAb+F;AAc5GI,IAAAA,cAAc,EAAElE;AAd4F,GAAlE,CAvEd;AAAA,MAuEtBmE,OAvEsB,cAuEtBA,OAvEsB;AAAA,MAuELC,cAvEK,cAuEbjD,MAvEa;;AAwF9B,MAAMoC,SAAQ,GAAG,SAAXA,SAAW,CAACc,CAAD,EAA4B;AAC3C,QAAIhD,IAAI,IAAI,CAACK,QAAb,EAAuB;AACrB4C,MAAAA,cAAc,CAAC,IAAD,EAAOD,CAAP,CAAd;AACAA,MAAAA,CAAC,CAACR,eAAF;AACAQ,MAAAA,CAAC,CAAChB,cAAF;AACD;AACF,GAND;;AAQA,MAAMK,UAAS,GAAG,SAAZA,UAAY,CAACW,CAAD,EAA4B;AAC5C,QAAI,CAACE,aAAa,EAAlB,EAAsB;AACpB;AACD;;AAEDD,IAAAA,cAAc,CAAC,KAAD,EAAQD,CAAR,EAAW,YAAM;AAC7B,qCAAWxC,OAAO,CAAC2C,OAAnB;AACD,KAFa,CAAd;AAIAH,IAAAA,CAAC,CAACR,eAAF;AACD,GAVD;;AAYA,MAAMJ,cAAa,GAAG,SAAhBA,cAAgB,CAACY,CAAD,EAA4B;AAChD,QAAI,CAACE,aAAa,EAAlB,EAAsB;AACpB;AACD;;AACDD,IAAAA,cAAc,CAAC,KAAD,EAAQD,CAAR,EAAW,YAAM;AAC7B,UAAI,CAACrD,SAAL,EAAgB;AACd,uCAAWa,OAAO,CAAC2C,OAAnB;AACD;AACF,KAJa,CAAd,CAJgD,CAUhD;;AACA,QAAI,CAACxD,SAAL,EAAgB;AACdqD,MAAAA,CAAC,CAAChB,cAAF;AACD;AACF,GAdD;;AAgBA,MAAMkB,aAAa,GAAG,SAAhBA,aAAgB,GAAe;AACnC,WAAO,CAAC,EAAElD,IAAI,IAAIK,QAAV,CAAR;AACD,GAFD;;AAIA,MAAM4C,cAAc,GAAG,SAAjBA,cAAiB,CAACG,QAAD,EAAoBJ,CAApB,EAAqDK,cAArD,EAA8E;AACnG9C,IAAAA,WAAW,CAAC6C,QAAD,CAAX,CADmG,CAEnG;AACA;AACA;AACA;;AACAC,IAAAA,cAAc,IAAIA,cAAc,EAAhC;AACA,0BAAS1E,KAAT,EAAgB,kBAAhB,EAAoCqE,CAApC,oBACKrE,KADL;AAEE0B,MAAAA,QAAQ,EAAE+C;AAFZ;AAID,GAXD;;AAaA,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD;AAAA,WAAsB,UAACP,CAAD,EAAmB;AACnE,UAAMQ,WAAW,GAAG,iCAAqBhD,OAAO,CAAC2C,OAA7B,EAAsCH,CAAtC,EAAyClE,OAAO,CAAC2E,MAAjD,CAApB;AACA,UAAMC,aAAa,GAAG,oBAAOH,OAAO,EAAd,EAAkB,UAACI,QAAD,EAAuB;AAC7D,eAAO,iCAAqBA,QAAQ,CAACR,OAA9B,EAAsDH,CAAtD,EAAyDlE,OAAO,CAAC2E,MAAjE,CAAP;AACD,OAFqB,CAAtB;AAGA,UAAMG,QAAQ,GAAGJ,WAAW,IAAIE,aAAhC;;AAEA,UAAI,CAACE,QAAL,EAAe;AACbX,QAAAA,cAAc,CAAC,KAAD,EAAQD,CAAR,CAAd;AACD;AACF,KAV2B;AAAA,GAA5B;;AAYA,MAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,eAAD;AAAA,WAAwC;AAClEC,MAAAA,WAAW,EAAE,qBAACf,CAAD,EAAIgB,SAAJ,EAAwC;AAAA,YAC3CtE,KAD2C,GACvBsE,SADuB,CAC3CtE,KAD2C;AAAA,YACpCW,QADoC,GACvB2D,SADuB,CACpC3D,QADoC;AAEnD,8BAASyD,eAAT,EAA0B,aAA1B,EAAyCd,CAAzC,EAA4CgB,SAA5C;;AACA,YAAItE,KAAJ,EAAW;AACT;AACD;;AAEDuD,QAAAA,cAAc,CAAC5C,QAAD,EAAW2C,CAAX,CAAd;;AACA,YAAI,CAAC3C,QAAL,EAAe;AACb,gCAASG,OAAO,CAAC2C,OAAjB,EAA0B,OAA1B;AACD;AACF;AAZiE,KAAxC;AAAA,GAA5B;;AAeA,MAAMlB,WAAW,GAAG,SAAdA,WAAc,CAACe,CAAD,EAA+C;AACjE,QAAIzD,QAAJ,EAAc;AACZyD,MAAAA,CAAC,CAAChB,cAAF;AACA;AACD;;AAED,QAAIhC,IAAJ,EAAU;AACR;AACAiD,MAAAA,cAAc,CAAC,CAAC5C,QAAF,EAAY2C,CAAZ,CAAd;AACAA,MAAAA,CAAC,CAACR,eAAF;AACAQ,MAAAA,CAAC,CAAChB,cAAF;AACD;;AAED,QAAItC,KAAJ,EAAW;AACTsD,MAAAA,CAAC,CAACR,eAAF;AACAQ,MAAAA,CAAC,CAAChB,cAAF;AACA;AACD;;AAED,0BAASrD,KAAT,EAAgB,SAAhB,EAA2BqE,CAA3B,EAA8BrE,KAA9B;AACD,GApBD;;AAsBA,MAAMsF,OAAO,gBACX,oBAAC,WAAD,EACMxC,YAAY,CAAC,MAAD;AACd7B,IAAAA,SAAS,EAAEkD,OAAO,CAACoB,IADL;AAEdC,IAAAA,OAAO,EAAElC,WAFK;AAGd1C,IAAAA,QAAQ,EAARA,QAHc;AAIdX,IAAAA,GAAG,EAAHA;AAJc,KAKX2C,cALW,EADlB,EASG,0BAAclC,QAAd,IACCA,QADD,gBAGC,0CACG,4BAAgBR,cAAc,CAACkC,KAAf,CAAqBtB,IAArC,EAA2CA,IAA3C,EAAiD;AAAE2E,IAAAA,YAAY,EAAE;AAAA,aAAM/C,SAAS,CAAC5B,IAAhB;AAAA;AAAhB,GAAjD,CADH,EAEGH,OAFH,EAGGH,MAAM,IACL,4BAAgBN,cAAc,CAACkC,KAAf,CAAqB3B,eAArC,EAAsDA,eAAtD,EAAuE;AACrEgF,IAAAA,YAAY,EAAE;AAAA,aAAM/C,SAAS,CAACjC,eAAhB;AAAA;AADuD,GAAvE,CAJJ,EAOGY,IAAI,IACH,4BAAgBnB,cAAc,CAACkC,KAAf,CAAqBvB,gBAArC,EAAuDA,gBAAvD,EAAyE;AACvE4E,IAAAA,YAAY,EAAE;AAAA,aAAM/C,SAAS,CAAC7B,gBAAhB;AAAA;AADyD,GAAzE,CARJ,CAZJ,CADF;AA6BA,MAAM6E,WAAW,GAAG,0BAAchF,QAAd,CAApB;;AAEA,MAAIK,KAAK,IAAI,CAAC2E,WAAd,EAA2B;AACzB,QAAMC,YAAY,GAAG,4BAAgBzF,cAAc,CAACkC,KAAf,CAAqBrB,KAArC,EAA4CA,KAA5C,EAAmD;AACtE0E,MAAAA,YAAY,EAAE;AAAA,iCACT/C,SAAS,CAAC3B,KADD;AAEZ6E,UAAAA,YAAY,EAAE,sBAAAvB,CAAC,EAAI;AACjBA,YAAAA,CAAC,CAACR,eAAF;AACD;AAJW;AAAA,OADwD;AAOtEgC,MAAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAER,OADI;AAEb5E,QAAAA,QAAQ,EAAEqF,SAFG,CAEQ;;AAFR;AAPuD,KAAnD,CAArB;AAYAxF,IAAAA,MAAM;AAEN,WAAOoF,YAAP;AACD;;AAED,MAAMK,aAAa,GAAGN,WAAW,GAAIhF,QAAJ,gBAAsC,oBAAC,sBAAD;AAAK,IAAA,QAAQ,EAAEmB;AAAf,KAAyByD,OAAzB,CAAvE;AAEA,MAAMW,YAAY,GAChB5E,IAAI,IAAIK,QAAR,gBACE,oBAAC,mDAAD,QACG,UAACkD,OAAD,EAAUsB,UAAV,EAAyB;AACxB,wBACE,uDACE,oBAAC,sBAAD;AACE,MAAA,QAAQ,EAAE,kBAACC,IAAD,EAAuB;AAC/BD,QAAAA,UAAU,CAAC1B,OAAX,GAAqB2B,IAArB;AACAnE,QAAAA,OAAO,CAACwC,OAAR,GAAkB2B,IAAlB;AACD;AAJH,oBAME,oBAAC,kBAAD;AACE,MAAA,KAAK,EAAC,KADR;AAEE,MAAA,QAAQ,EAAEhG,OAAO,CAAC2D,GAAR,GAAc,QAAd,GAAyB,OAFrC;AAGE,MAAA,SAAS,EAAEjC;AAHb,OAIMP,oBAJN,gBAME,oBAAC,iDAAD;AAA0B,MAAA,KAAK,EAAEkB;AAAjC,OACG,4BAAgBtC,cAAc,CAACkC,KAAf,CAAqBf,IAArB,IAA6Ba,QAA7B,IAAyCkE,wBAAzD,EAAsE/E,IAAtE,EAA4E;AAC3EoE,MAAAA,YAAY,EAAE;AAAA;AACZxE,UAAAA,SAAS,EAAErB,6BAA6B,CAACE,OAD7B;AAEZqB,UAAAA,MAAM,EAAEiD,cAAc,CAAC/C,IAFX;AAGZvB,UAAAA,OAAO,EAAE,IAHG;AAIZe,UAAAA,gBAAgB,EAAhBA;AAJY,WAKT6B,SAAS,CAACrB,IALD;AAAA,OAD6D;AAQ3EwE,MAAAA,aAAa,EAAEX;AAR4D,KAA5E,CADH,CANF,CANF,CADF,eA2BE,oBAAC,0CAAD;AAAe,MAAA,QAAQ,EAAEP,mBAAmB,CAACC,OAAD,CAA5C;AAAuD,MAAA,MAAM,EAAEzE,OAAO,CAAC2E,MAAvE;AAA+E,MAAA,IAAI,EAAC;AAApF,MA3BF,CADF;AA+BD,GAjCH,CADF,GAoCI,IArCN;;AAuCA,MAAI,CAACjF,OAAL,EAAc;AACZU,IAAAA,MAAM;AACN,WAAOyF,aAAP;AACD;;AAED,MAAMK,cAAc,GAAGC,SAAIC,MAAJ,CAAW1G,OAAX,EAAoB;AACzC4F,IAAAA,YAAY,EAAE;AAAA,aACZ3C,YAAY,CAAC,SAAD,EAAY;AACtB7B,QAAAA,SAAS,EAAE,yBAAGrB,6BAA6B,CAACC,OAAjC,EAA0CsE,OAAO,CAACtE,OAAlD;AADW,OAAZ,CADA;AAAA,KAD2B;AAKzCgG,IAAAA,aAAa,EAAE;AAAA,aAAO;AACpBnF,QAAAA,QAAQ,eACN,0CACGsF,aADH,EAEGC,YAFH;AAFkB,OAAP;AAAA;AAL0B,GAApB,CAAvB;;AAcA1F,EAAAA,MAAM;AAEN,SAAO8F,cAAP;AACD,CA/S4B,EAgT7B;AACEpF,EAAAA,SAAS,EAAEtB,wBADb;AAEES,EAAAA,WAAW,EAAE,iBAFf;AAIEgC,EAAAA,KAAK,EAAE;AACLtB,IAAAA,IAAI,EAAE0F,wCADD;AAEL3F,IAAAA,gBAAgB,EAAE4F,gEAFb;AAGLhG,IAAAA,eAAe,EAAEiG,8DAHZ;AAIL3F,IAAAA,KAAK,EAAE4F;AAJF,GAJT;AAUEjE,EAAAA,SAAS,EAAE,mBAAA1C,KAAK;AAAA,WAAK;AACnBc,MAAAA,IAAI,EAAE;AACJkD,QAAAA,UAAU,EAAE,CAAC,CAAChE,KAAK,CAACW;AADhB,OADa;AAInBE,MAAAA,gBAAgB,EAAE;AAChBkC,QAAAA,aAAa,EAAE6D;AADC,OAJC;AAOnBnG,MAAAA,eAAe,EAAE;AACfsC,QAAAA,aAAa,EAAE6D;AADA,OAPE;AAUnB7F,MAAAA,KAAK,EAAE;AACL8F,QAAAA,SAAS,EAAE;AADN;AAVY,KAAL;AAAA,GAVlB;AAyBEC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE;AADG,GAzBnB;AA4BElE,EAAAA,YAAY,EAAE,CACZ,eADY,EAEZ,IAFY,EAGZ,UAHY,EAIZ,WAJY,EAKZ,SALY,EAMZ,QANY,EAOZ,QAPY,EAQZ,WARY,EAUZ,QAVY,EAWZ,iBAXY,EAYZ,iBAZY,EAaZ,UAbY,EAcZ,MAdY,EAeZ,OAfY,EAgBZ,kBAhBY,EAiBZ,WAjBY,EAkBZ,MAlBY,EAmBZ,UAnBY,EAoBZ,SApBY,EAqBZ,kBArBY,EAsBZ,OAtBY,EAuBZ,SAvBY;AA5BhB,CAhT6B,CAAxB;;AAwWP9C,eAAe,CAACiH,SAAhB,qBACKC,uBAAgBC,YAAhB,EADL;AAEE1G,EAAAA,MAAM,EAAE2G,SAAS,CAACC,IAFpB;AAGE3G,EAAAA,eAAe,EAAE4G,eAAe,CAACC,yBAHnC;AAIE9F,EAAAA,eAAe,EAAE2F,SAAS,CAACC,IAJ7B;AAKExG,EAAAA,QAAQ,EAAEuG,SAAS,CAACC,IALtB;AAMEtG,EAAAA,IAAI,EAAEuG,eAAe,CAACC,yBANxB;AAOEC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,MAPnB;AAQE3G,EAAAA,gBAAgB,EAAEwG,eAAe,CAACC,yBARpC;AASEtG,EAAAA,SAAS,EAAEmG,SAAS,CAACC,IATvB;AAUE/F,EAAAA,IAAI,EAAE8F,SAAS,CAACM,SAAV,CAAoB,CAACJ,eAAe,CAACK,aAAjB,EAAgCL,eAAe,CAACM,mBAAhD,CAApB,CAVR;AAWEjG,EAAAA,QAAQ,EAAEyF,SAAS,CAACC,IAXtB;AAYE5B,EAAAA,OAAO,EAAE2B,SAAS,CAACS,IAZrB;AAaEC,EAAAA,gBAAgB,EAAEV,SAAS,CAACS,IAb9B;AAcE7G,EAAAA,KAAK,EAAEoG,SAAS,CAACM,SAAV,CAAoB,CACzBN,SAAS,CAACW,KAAV,mBACKnB,aAAMK,SADX;AAEElB,IAAAA,OAAO,EAAEuB,eAAe,CAACU,KAF3B;AAGErH,IAAAA,QAAQ,EAAE2G,eAAe,CAACU;AAH5B,KADyB,EAMzBZ,SAAS,CAACa,MANe,CAApB,CAdT;AAsBEnI,EAAAA,OAAO,EAAEwH,eAAe,CAACK;AAtB3B;AAwBA3H,eAAe,CAAC0F,YAAhB,GAA+B;AAC7BwC,EAAAA,EAAE,EAAE,QADyB;AAE7BlF,EAAAA,aAAa,EAAEmF,sCAFc;AAG7BzH,EAAAA,eAAe,EAAE,EAHY;AAI7BI,EAAAA,gBAAgB,EAAE,EAJW;AAK7BhB,EAAAA,OAAO,EAAE;AAAEoI,IAAAA,EAAE,EAAE;AAAN;AALoB,CAA/B","sourcesContent":["import {\n  Accessibility,\n  toolbarMenuItemBehavior,\n  ToolbarMenuItemBehaviorProps,\n  indicatorBehavior,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport * as _ from 'lodash';\nimport cx from 'classnames';\nimport * as PropTypes from 'prop-types';\n\nimport { EventListener } from '@fluentui/react-component-event-listener';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport {\n  compose,\n  focusAsync,\n  mergeVariablesOverrides,\n  useTelemetry,\n  useStyles,\n  useAutoControlled,\n  useFluentContext,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n} from '@fluentui/react-bindings';\n\nimport { GetRefs, NodeRef, Unstable_NestingAuto } from '@fluentui/react-component-nesting-registry';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\n\nimport {\n  createShorthand,\n  ChildrenComponentProps,\n  commonPropTypes,\n  ContentComponentProps,\n  UIComponentProps,\n  childrenExist,\n  doesNodeContainClick,\n} from '../../utils';\nimport { ComponentEventHandler, ShorthandValue, ShorthandCollection } from '../../types';\nimport { partitionPopperPropsFromShorthand, Popper, PopperShorthandProps } from '../../utils/positioner';\n\nimport { Box, BoxProps } from '../Box/Box';\nimport { Popup, PopupProps } from '../Popup/Popup';\nimport { ToolbarMenu, ToolbarMenuProps, ToolbarMenuItemShorthandKinds } from './ToolbarMenu';\nimport { ToolbarMenuItemIcon, ToolbarMenuItemIconProps } from './ToolbarMenuItemIcon';\nimport { ToolbarVariablesContext, ToolbarVariablesProvider } from './toolbarVariablesContext';\nimport { ToolbarMenuItemSubmenuIndicator } from './ToolbarMenuItemSubmenuIndicator';\nimport { ToolbarMenuItemActiveIndicator } from './ToolbarMenuItemActiveIndicator';\nimport { ToolbarItemSubscribedValue, ToolbarMenuContext } from './toolbarMenuContext';\n\nexport interface ToolbarMenuItemProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /**\n   * Accessibility behavior if overridden by the user.\n   */\n  accessibility?: Accessibility<ToolbarMenuItemBehaviorProps>;\n\n  /** A toolbar item can be active. */\n  active?: boolean;\n\n  /** A slot for a selected indicator in the dropdown list. */\n  activeIndicator?: ShorthandValue<BoxProps>;\n\n  /** A toolbar item can show it is currently unable to be interacted with. */\n  disabled?: boolean;\n\n  /** Name or shorthand for Toolbar Item Icon */\n  icon?: ShorthandValue<ToolbarMenuItemIconProps>;\n\n  /** ToolbarMenuItem index inside ToolbarMenu. */\n  index?: number;\n\n  /** Shorthand for the submenu indicator. */\n  submenuIndicator?: ShorthandValue<BoxProps>;\n\n  /** Indicates whether the menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Shorthand for the submenu. */\n  menu?:\n    | ShorthandValue<ToolbarMenuProps & { popper?: PopperShorthandProps }>\n    | ShorthandCollection<ToolbarMenuItemProps, ToolbarMenuItemShorthandKinds>;\n\n  /** Indicates if the menu inside the item is open. */\n  menuOpen?: boolean;\n\n  /** Default menu open */\n  defaultMenuOpen?: boolean;\n\n  /**\n   * Called on click.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onClick?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Called when the menu inside the item opens or closes.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props, with `menuOpen` reflecting the new state.\n   */\n  onMenuOpenChange?: ComponentEventHandler<ToolbarMenuItemProps>;\n\n  /**\n   * Attaches a `Popup` component to the ToolbarMenuItem.\n   * Accepts all props as a `Popup`, except `trigger` and `children`.\n   * Traps focus by default.\n   * @see PopupProps\n   */\n  popup?: Omit<PopupProps, 'trigger' | 'children'> | string;\n\n  /** Shorthand for the wrapper component. */\n  wrapper?: ShorthandValue<BoxProps>;\n}\n\nexport type ToolbarMenuItemStylesProps = Pick<ToolbarMenuItemProps, 'disabled'> & { hasContent: boolean };\n\nexport interface ToolbarMenuItemSlotClassNames {\n  wrapper: string;\n  submenu: string;\n}\n\nexport const toolbarMenuItemClassName = 'ui-toolbar__menuitem';\nexport const toolbarMenuItemSlotClassNames: ToolbarMenuItemSlotClassNames = {\n  wrapper: `${toolbarMenuItemClassName}__wrapper`,\n  submenu: `${toolbarMenuItemClassName}__submenu`,\n};\n\n/**\n * A ToolbarMenuItem renders ToolbarMenu item as button.\n */\nexport const ToolbarMenuItem = compose<'button', ToolbarMenuItemProps, ToolbarMenuItemStylesProps, {}, {}>(\n  (props, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const {\n      active,\n      activeIndicator,\n      children,\n      content,\n      disabled,\n      submenuIndicator,\n      icon,\n      popup,\n      wrapper,\n      inSubmenu,\n      className,\n      design,\n      styles,\n      variables,\n    } = props;\n    const [menu, menuPositioningProps] = partitionPopperPropsFromShorthand(props.menu);\n\n    const [menuOpen, setMenuOpen] = useAutoControlled({\n      defaultValue: props.defaultMenuOpen,\n      value: props.menuOpen,\n      initialValue: false,\n    });\n\n    const itemRef = React.useRef<HTMLElement>();\n    const menuRef = React.useRef<HTMLElement>();\n\n    const { menuSlot } = (useContextSelectors(ToolbarMenuContext, {\n      menuSlot: v => v.slots.menu,\n    }) as unknown) as ToolbarItemSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const parentVariables = React.useContext(ToolbarVariablesContext);\n    const mergedVariables = mergeVariablesOverrides(parentVariables, variables);\n\n    const ElementType = getElementType(props);\n    const slotProps = composeOptions.resolveSlotProps<ToolbarMenuItemProps>(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const getA11yProps = useAccessibility(props.accessibility, {\n      debugName: composeOptions.displayName,\n      mapPropsToBehavior: () => ({\n        menu,\n        active,\n        menuOpen,\n        disabled,\n        'aria-label': props['aria-label'],\n        'aria-labelledby': props['aria-labelledby'],\n        'aria-describedby': props['aria-describedby'],\n      }),\n      actionHandlers: {\n        performClick: event => {\n          event.preventDefault();\n          handleClick(event);\n        },\n        openMenu: event => openMenu(event),\n        closeAllMenusAndFocusNextParentItem: event => closeAllMenus(event),\n        closeMenu: event => closeMenu(event),\n        closeMenuAndFocusTrigger: event => closeMenu(event),\n        doNotNavigateNextParentItem: event => {\n          event.stopPropagation();\n        },\n        closeAllMenus: event => closeAllMenus(event),\n      },\n      rtl: context.rtl,\n    });\n\n    const { classes, styles: resolvedStyles } = useStyles<ToolbarMenuItemStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        disabled,\n        hasContent: !!content,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergedVariables,\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const openMenu = (e: React.KeyboardEvent) => {\n      if (menu && !menuOpen) {\n        trySetMenuOpen(true, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const closeMenu = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n\n      trySetMenuOpen(false, e, () => {\n        focusAsync(itemRef.current);\n      });\n\n      e.stopPropagation();\n    };\n\n    const closeAllMenus = (e: React.KeyboardEvent) => {\n      if (!isSubmenuOpen()) {\n        return;\n      }\n      trySetMenuOpen(false, e, () => {\n        if (!inSubmenu) {\n          focusAsync(itemRef.current);\n        }\n      });\n\n      // avoid spacebar scrolling the page\n      if (!inSubmenu) {\n        e.preventDefault();\n      }\n    };\n\n    const isSubmenuOpen = (): boolean => {\n      return !!(menu && menuOpen);\n    };\n\n    const trySetMenuOpen = (newValue: boolean, e: Event | React.SyntheticEvent, onStateChanged?: any) => {\n      setMenuOpen(newValue);\n      // The reason why post-effect is not passed as callback to trySetState method\n      // is that in 'controlled' mode the post-effect is applied before final re-rendering\n      // which cause a broken behavior: for e.g. when it is needed to focus submenu trigger on ESC.\n      // TODO: all DOM post-effects should be applied at componentDidMount & componentDidUpdated stages.\n      onStateChanged && onStateChanged();\n      _.invoke(props, 'onMenuOpenChange', e, {\n        ...props,\n        menuOpen: newValue,\n      });\n    };\n\n    const outsideClickHandler = (getRefs: GetRefs) => (e: MouseEvent) => {\n      const isItemClick = doesNodeContainClick(itemRef.current, e, context.target);\n      const isNestedClick = _.some(getRefs(), (childRef: NodeRef) => {\n        return doesNodeContainClick(childRef.current as HTMLElement, e, context.target);\n      });\n      const isInside = isItemClick || isNestedClick;\n\n      if (!isInside) {\n        trySetMenuOpen(false, e);\n      }\n    };\n\n    const handleMenuOverrides = (predefinedProps: ToolbarMenuProps) => ({\n      onItemClick: (e, itemProps: ToolbarMenuItemProps) => {\n        const { popup, menuOpen } = itemProps;\n        _.invoke(predefinedProps, 'onItemClick', e, itemProps);\n        if (popup) {\n          return;\n        }\n\n        trySetMenuOpen(menuOpen, e);\n        if (!menuOpen) {\n          _.invoke(itemRef.current, 'focus');\n        }\n      },\n    });\n\n    const handleClick = (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      if (menu) {\n        // the menuItem element was clicked => toggle the open/close and stop propagation\n        trySetMenuOpen(!menuOpen, e);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      if (popup) {\n        e.stopPropagation();\n        e.preventDefault();\n        return;\n      }\n\n      _.invoke(props, 'onClick', e, props);\n    };\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          onClick: handleClick,\n          disabled,\n          ref,\n          ...unhandledProps,\n        })}\n      >\n        {childrenExist(children) ? (\n          children\n        ) : (\n          <>\n            {createShorthand(composeOptions.slots.icon, icon, { defaultProps: () => slotProps.icon })}\n            {content}\n            {active &&\n              createShorthand(composeOptions.slots.activeIndicator, activeIndicator, {\n                defaultProps: () => slotProps.activeIndicator,\n              })}\n            {menu &&\n              createShorthand(composeOptions.slots.submenuIndicator, submenuIndicator, {\n                defaultProps: () => slotProps.submenuIndicator,\n              })}\n          </>\n        )}\n      </ElementType>\n    );\n\n    const hasChildren = childrenExist(children);\n\n    if (popup && !hasChildren) {\n      const popupElement = createShorthand(composeOptions.slots.popup, popup, {\n        defaultProps: () => ({\n          ...slotProps.popup,\n          onOpenChange: e => {\n            e.stopPropagation();\n          },\n        }),\n        overrideProps: {\n          trigger: element,\n          children: undefined, // force-reset `children` defined for `Popup` as it collides with the `trigger`\n        },\n      });\n      setEnd();\n\n      return popupElement;\n    }\n\n    const menuItemInner = hasChildren ? (children as React.ReactElement) : <Ref innerRef={itemRef}>{element}</Ref>;\n\n    const maybeSubmenu =\n      menu && menuOpen ? (\n        <Unstable_NestingAuto>\n          {(getRefs, nestingRef) => {\n            return (\n              <>\n                <Ref\n                  innerRef={(node: HTMLElement) => {\n                    nestingRef.current = node;\n                    menuRef.current = node;\n                  }}\n                >\n                  <Popper\n                    align=\"top\"\n                    position={context.rtl ? 'before' : 'after'}\n                    targetRef={itemRef}\n                    {...menuPositioningProps}\n                  >\n                    <ToolbarVariablesProvider value={mergedVariables}>\n                      {createShorthand(composeOptions.slots.menu || menuSlot || ToolbarMenu, menu, {\n                        defaultProps: () => ({\n                          className: toolbarMenuItemSlotClassNames.submenu,\n                          styles: resolvedStyles.menu,\n                          submenu: true,\n                          submenuIndicator,\n                          ...slotProps.menu,\n                        }),\n                        overrideProps: handleMenuOverrides,\n                      })}\n                    </ToolbarVariablesProvider>\n                  </Popper>\n                </Ref>\n                <EventListener listener={outsideClickHandler(getRefs)} target={context.target} type=\"click\" />\n              </>\n            );\n          }}\n        </Unstable_NestingAuto>\n      ) : null;\n\n    if (!wrapper) {\n      setEnd();\n      return menuItemInner;\n    }\n\n    const wrapperElement = Box.create(wrapper, {\n      defaultProps: () =>\n        getA11yProps('wrapper', {\n          className: cx(toolbarMenuItemSlotClassNames.wrapper, classes.wrapper),\n        }),\n      overrideProps: () => ({\n        children: (\n          <>\n            {menuItemInner}\n            {maybeSubmenu}\n          </>\n        ),\n      }),\n    });\n    setEnd();\n\n    return wrapperElement;\n  },\n  {\n    className: toolbarMenuItemClassName,\n    displayName: 'ToolbarMenuItem',\n\n    slots: {\n      icon: ToolbarMenuItemIcon,\n      submenuIndicator: ToolbarMenuItemSubmenuIndicator,\n      activeIndicator: ToolbarMenuItemActiveIndicator,\n      popup: Popup,\n    },\n    slotProps: props => ({\n      icon: {\n        hasContent: !!props.content,\n      },\n      submenuIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      activeIndicator: {\n        accessibility: indicatorBehavior,\n      },\n      popup: {\n        trapFocus: true,\n      },\n    }),\n\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'active',\n      'activeIndicator',\n      'defaultMenuOpen',\n      'disabled',\n      'icon',\n      'index',\n      'submenuIndicator',\n      'inSubmenu',\n      'menu',\n      'menuOpen',\n      'onClick',\n      'onMenuOpenChange',\n      'popup',\n      'wrapper',\n    ],\n  },\n);\n\nToolbarMenuItem.propTypes = {\n  ...commonPropTypes.createCommon(),\n  active: PropTypes.bool,\n  activeIndicator: customPropTypes.shorthandAllowingChildren,\n  defaultMenuOpen: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: customPropTypes.shorthandAllowingChildren,\n  index: PropTypes.number,\n  submenuIndicator: customPropTypes.shorthandAllowingChildren,\n  inSubmenu: PropTypes.bool,\n  menu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  menuOpen: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMenuOpenChange: PropTypes.func,\n  popup: PropTypes.oneOfType([\n    PropTypes.shape({\n      ...Popup.propTypes,\n      trigger: customPropTypes.never,\n      children: customPropTypes.never,\n    }),\n    PropTypes.string,\n  ]),\n  wrapper: customPropTypes.itemShorthand,\n};\nToolbarMenuItem.defaultProps = {\n  as: 'button',\n  accessibility: toolbarMenuItemBehavior,\n  activeIndicator: {},\n  submenuIndicator: {},\n  wrapper: { as: 'li' },\n};\n"],"file":"ToolbarMenuItem.js"}