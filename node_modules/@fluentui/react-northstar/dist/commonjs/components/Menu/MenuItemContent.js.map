{"version":3,"sources":["components/Menu/MenuItemContent.tsx"],"names":["menuItemContentClassName","MenuItemContent","Box","className","displayName","mapPropsToStylesProps","props","hasMenu","hasIcon","vertical","inSubmenu","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAmBO,IAAMA,wBAAwB,GAAG,sBAAjC;AAEP;;;;;AAGO,IAAMC,eAAe,GAAG,4BAAgFC,QAAhF,EAAqF;AAClHC,EAAAA,SAAS,EAAEH,wBADuG;AAElHI,EAAAA,WAAW,EAAE,iBAFqG;AAGlHC,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAK;AAC/BC,MAAAA,OAAO,EAAED,KAAK,CAACC,OADgB;AAE/BC,MAAAA,OAAO,EAAEF,KAAK,CAACE,OAFgB;AAG/BC,MAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHe;AAI/BC,MAAAA,SAAS,EAAEJ,KAAK,CAACI;AAJc,KAAL;AAAA,GAHsF;AASlHC,EAAAA,YAAY,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,UAAvB,EAAmC,WAAnC,CAToG;AAWlHC,EAAAA,cAAc,EAAE,IAXkG;AAYlHC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE;AADG;AAZiG,CAArF,CAAxB;;AAiBPb,eAAe,CAACc,YAAhB,GAA+B;AAC7BC,EAAAA,EAAE,EAAE;AADyB,CAA/B;AAGAf,eAAe,CAACgB,SAAhB,qBACKC,uBAAgBC,YAAhB,EADL;AAEEX,EAAAA,OAAO,EAAEY,SAAS,CAACC,IAFrB;AAGEd,EAAAA,OAAO,EAAEa,SAAS,CAACC,IAHrB;AAIEZ,EAAAA,QAAQ,EAAEW,SAAS,CAACC,IAJtB;AAKEX,EAAAA,SAAS,EAAEU,SAAS,CAACC;AALvB","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemContentOwnProps {\n  /** Indicates whether the parent menu item has menu. */\n  hasMenu?: boolean;\n\n  /** Indicates whether the parent menu item has icon. */\n  hasIcon?: boolean;\n\n  /** Indicates whether the parent menu item is inside vertical menu. */\n  vertical?: boolean;\n\n  /** Indicates whether the parent menu item is part of submenu. */\n  inSubmenu?: boolean;\n}\n\nexport interface MenuItemContentProps extends BoxProps, MenuItemContentOwnProps {}\nexport type MenuItemContentStylesProps = Pick<MenuItemContentProps, 'hasMenu' | 'hasIcon' | 'vertical' | 'inSubmenu'>;\n\nexport const menuItemContentClassName = 'ui-menu__itemcontent';\n\n/**\n * A MenuItemContent allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemContent = compose<'span', MenuItemContentProps, MenuItemContentStylesProps, BoxProps, {}>(Box, {\n  className: menuItemContentClassName,\n  displayName: 'MenuItemContent',\n  mapPropsToStylesProps: props => ({\n    hasMenu: props.hasMenu,\n    hasIcon: props.hasIcon,\n    vertical: props.vertical,\n    inSubmenu: props.inSubmenu,\n  }),\n  handledProps: ['hasMenu', 'hasIcon', 'vertical', 'inSubmenu'],\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nMenuItemContent.defaultProps = {\n  as: 'span',\n};\nMenuItemContent.propTypes = {\n  ...commonPropTypes.createCommon(),\n  hasIcon: PropTypes.bool,\n  hasMenu: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n};\n"],"file":"MenuItemContent.js"}