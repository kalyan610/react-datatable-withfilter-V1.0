{"version":3,"sources":["components/Menu/MenuItemIndicator.tsx"],"names":["menuItemIndicatorClassName","MenuItemIndicator","Box","className","displayName","mapPropsToStylesProps","props","iconOnly","vertical","inSubmenu","active","primary","underlined","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","accessibility","indicatorBehavior","propTypes","commonPropTypes","createCommon","PropTypes","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AA4BO,IAAMA,0BAA0B,GAAG,wBAAnC;AAEP;;;;;AAGO,IAAMC,iBAAiB,GAAG,4BAC/BC,QAD+B,EAE/B;AACEC,EAAAA,SAAS,EAAEH,0BADb;AAEEI,EAAAA,WAAW,EAAE,mBAFf;AAGEC,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAK;AAC/BC,MAAAA,QAAQ,EAAED,KAAK,CAACC,QADe;AAE/BC,MAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFe;AAG/BC,MAAAA,SAAS,EAAEH,KAAK,CAACG,SAHc;AAI/BC,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MAJiB;AAK/BC,MAAAA,OAAO,EAAEL,KAAK,CAACK,OALgB;AAM/BC,MAAAA,UAAU,EAAEN,KAAK,CAACM;AANa,KAAL;AAAA,GAH9B;AAWEC,EAAAA,YAAY,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,WAAzB,EAAsC,QAAtC,EAAgD,SAAhD,EAA2D,YAA3D,CAXhB;AAaEC,EAAAA,cAAc,EAAE,IAblB;AAcEC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE;AADG;AAdnB,CAF+B,CAA1B;;AAsBPf,iBAAiB,CAACgB,YAAlB,GAAiC;AAC/BC,EAAAA,EAAE,EAAE,MAD2B;AAE/BC,EAAAA,aAAa,EAAEC;AAFgB,CAAjC;AAIAnB,iBAAiB,CAACoB,SAAlB,qBACKC,uBAAgBC,YAAhB,EADL;AAEEhB,EAAAA,QAAQ,EAAEiB,SAAS,CAACC,IAFtB;AAGEjB,EAAAA,QAAQ,EAAEgB,SAAS,CAACC,IAHtB;AAIEhB,EAAAA,SAAS,EAAEe,SAAS,CAACC,IAJvB;AAKEf,EAAAA,MAAM,EAAEc,SAAS,CAACC,IALpB;AAMEd,EAAAA,OAAO,EAAEa,SAAS,CAACC,IANrB;AAOEb,EAAAA,UAAU,EAAEY,SAAS,CAACC;AAPxB","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport { indicatorBehavior } from '@fluentui/accessibility';\nimport * as PropTypes from 'prop-types';\n\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemIndicatorOwnProps {\n  /** Indicates if the parent menu item may have just icons. */\n  iconOnly?: boolean;\n\n  /** Indicates whether the parent menu item is inside vertical menu. */\n  vertical?: boolean;\n\n  /** Indicates whether the parent menu item is part of submenu. */\n  inSubmenu?: boolean;\n\n  /** Indicates whether the parent menu item is active. */\n  active?: boolean;\n\n  /** Indicates whether the parent menu item is primary. */\n  primary?: boolean;\n\n  /** Indicates whether the parent menu item is underlined. */\n  underlined?: boolean;\n}\n\nexport interface MenuItemIndicatorProps extends BoxProps, MenuItemIndicatorOwnProps {}\nexport type MenuItemIndicatorStylesProps = Pick<\n  MenuItemIndicatorProps,\n  'iconOnly' | 'vertical' | 'inSubmenu' | 'active' | 'primary' | 'underlined'\n>;\n\nexport const menuItemIndicatorClassName = 'ui-menu__itemindicator';\n\n/**\n * A MenuItemIndicator allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemIndicator = compose<'span', MenuItemIndicatorProps, MenuItemIndicatorStylesProps, BoxProps, {}>(\n  Box,\n  {\n    className: menuItemIndicatorClassName,\n    displayName: 'MenuItemIndicator',\n    mapPropsToStylesProps: props => ({\n      iconOnly: props.iconOnly,\n      vertical: props.vertical,\n      inSubmenu: props.inSubmenu,\n      active: props.active,\n      primary: props.primary,\n      underlined: props.underlined,\n    }),\n    handledProps: ['iconOnly', 'vertical', 'inSubmenu', 'active', 'primary', 'underlined'],\n\n    overrideStyles: true,\n    shorthandConfig: {\n      mappedProp: 'content',\n    },\n  },\n);\n\nMenuItemIndicator.defaultProps = {\n  as: 'span',\n  accessibility: indicatorBehavior,\n};\nMenuItemIndicator.propTypes = {\n  ...commonPropTypes.createCommon(),\n  iconOnly: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n  active: PropTypes.bool,\n  primary: PropTypes.bool,\n  underlined: PropTypes.bool,\n};\n"],"file":"MenuItemIndicator.js"}