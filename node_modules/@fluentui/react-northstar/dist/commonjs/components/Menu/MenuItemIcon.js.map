{"version":3,"sources":["components/Menu/MenuItemIcon.tsx"],"names":["menuItemIconClassName","MenuItemIcon","Box","className","displayName","mapPropsToStylesProps","props","hasContent","iconOnly","handledProps","overrideStyles","shorthandConfig","mappedProp","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","bool"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAaO,IAAMA,qBAAqB,GAAG,mBAA9B;AAEP;;;;;AAGO,IAAMC,YAAY,GAAG,4BAA0EC,QAA1E,EAA+E;AACzGC,EAAAA,SAAS,EAAEH,qBAD8F;AAEzGI,EAAAA,WAAW,EAAE,cAF4F;AAGzGC,EAAAA,qBAAqB,EAAE,+BAAAC,KAAK;AAAA,WAAK;AAAEC,MAAAA,UAAU,EAAED,KAAK,CAACC,UAApB;AAAgCC,MAAAA,QAAQ,EAAEF,KAAK,CAACE;AAAhD,KAAL;AAAA,GAH6E;AAIzGC,EAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,UAAf,CAJ2F;AAMzGC,EAAAA,cAAc,EAAE,IANyF;AAOzGC,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE;AADG;AAPwF,CAA/E,CAArB;;AAYPX,YAAY,CAACY,YAAb,GAA4B;AAC1BC,EAAAA,EAAE,EAAE;AADsB,CAA5B;AAGAb,YAAY,CAACc,SAAb,qBACKC,uBAAgBC,YAAhB,EADL;AAEEV,EAAAA,UAAU,EAAEW,SAAS,CAACC,IAFxB;AAGEX,EAAAA,QAAQ,EAAEU,SAAS,CAACC;AAHtB","sourcesContent":["import { compose } from '@fluentui/react-bindings';\nimport * as PropTypes from 'prop-types';\nimport { commonPropTypes } from '../../utils';\nimport { Box, BoxProps } from '../Box/Box';\n\ninterface MenuItemIconOwnProps {\n  /** Indicates if the parent menu item may have just icons. */\n  iconOnly?: boolean;\n\n  /** Indicates if the parent menu item has content. */\n  hasContent?: boolean;\n}\n\nexport interface MenuItemIconProps extends BoxProps, MenuItemIconOwnProps {}\nexport type MenuItemIconStylesProps = Pick<MenuItemIconProps, 'hasContent' | 'iconOnly'>;\n\nexport const menuItemIconClassName = 'ui-menu__itemicon';\n\n/**\n * A MenuItemIcon allows a user to have a dedicated component that can be targeted from the theme.\n */\nexport const MenuItemIcon = compose<'span', MenuItemIconProps, MenuItemIconStylesProps, BoxProps, {}>(Box, {\n  className: menuItemIconClassName,\n  displayName: 'MenuItemIcon',\n  mapPropsToStylesProps: props => ({ hasContent: props.hasContent, iconOnly: props.iconOnly }),\n  handledProps: ['hasContent', 'iconOnly'],\n\n  overrideStyles: true,\n  shorthandConfig: {\n    mappedProp: 'content',\n  },\n});\n\nMenuItemIcon.defaultProps = {\n  as: 'span',\n};\nMenuItemIcon.propTypes = {\n  ...commonPropTypes.createCommon(),\n  hasContent: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n};\n"],"file":"MenuItemIcon.js"}