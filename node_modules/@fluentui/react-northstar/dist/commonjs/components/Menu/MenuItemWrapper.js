"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.MenuItemWrapper = exports.menuItemWrapperClassName = void 0;

var _reactBindings = require("@fluentui/react-bindings");

var customPropTypes = _interopRequireWildcard(require("@fluentui/react-proptypes"));

var PropTypes = _interopRequireWildcard(require("prop-types"));

var _utils = require("../../utils");

var _Box = require("../Box/Box");

var menuItemWrapperClassName = 'ui-menu__itemwrapper';
/**
 * A MenuItemWrapper allows a user to have a dedicated component that can be targeted from the theme.
 */

exports.menuItemWrapperClassName = menuItemWrapperClassName;
var MenuItemWrapper = (0, _reactBindings.compose)(_Box.Box, {
  className: menuItemWrapperClassName,
  displayName: 'MenuItemWrapper',
  mapPropsToStylesProps: function mapPropsToStylesProps(props) {
    return {
      active: props.active,
      disabled: props.disabled,
      iconOnly: props.iconOnly,
      isFromKeyboard: props.isFromKeyboard,
      pills: props.pills,
      pointing: props.pointing,
      secondary: props.secondary,
      underlined: props.underlined,
      vertical: props.vertical,
      primary: props.primary
    };
  },
  handledProps: ['active', 'disabled', 'iconOnly', 'isFromKeyboard', 'pills', 'pointing', 'secondary', 'underlined', 'vertical', 'primary'],
  overrideStyles: true,
  shorthandConfig: {
    mappedProp: 'content'
  }
});
exports.MenuItemWrapper = MenuItemWrapper;
MenuItemWrapper.defaultProps = {
  as: 'li'
};
MenuItemWrapper.propTypes = Object.assign({}, _utils.commonPropTypes.createCommon(), {
  active: PropTypes.bool,
  disabled: PropTypes.bool,
  iconOnly: PropTypes.bool,
  isFromKeyboard: PropTypes.bool,
  pills: PropTypes.bool,
  pointing: PropTypes.oneOf(['start', 'end', true, false]),
  primary: customPropTypes.every([customPropTypes.disallow(['secondary']), PropTypes.bool]),
  secondary: customPropTypes.every([customPropTypes.disallow(['primary']), PropTypes.bool]),
  underlined: PropTypes.bool,
  vertical: PropTypes.bool
});
//# sourceMappingURL=MenuItemWrapper.js.map
