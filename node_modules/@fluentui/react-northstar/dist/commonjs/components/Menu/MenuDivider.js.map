{"version":3,"sources":["components/Menu/MenuDivider.tsx"],"names":["menuDividerClassName","MenuDivider","inputProps","ref","composeOptions","context","displayName","telemetry","setStart","setEnd","parentProps","MenuContext","variables","v","slotProps","divider","accessibility","behaviors","props","menuDividerBehavior","children","content","vertical","inSubmenu","pills","pointing","primary","className","design","styles","secondary","getA11yProps","debugName","rtl","mapPropsToStyles","hasContent","mapPropsToInlineStyles","unstable_props","classes","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","shorthandConfig","mappedProp","defaultProps","as","propTypes","commonPropTypes","createCommon","PropTypes","bool","oneOf","create","Component"],"mappings":"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","sourcesContent":["import { Accessibility, MenuDividerBehaviorProps, menuDividerBehavior } from '@fluentui/accessibility';\nimport {\n  compose,\n  ComponentWithAs,\n  getElementType,\n  mergeVariablesOverrides,\n  useFluentContext,\n  useAccessibility,\n  useTelemetry,\n  useStyles,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport { useContextSelectors } from '@fluentui/react-context-selector';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  createShorthandFactory,\n  UIComponentProps,\n  commonPropTypes,\n  childrenExist,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  rtlTextContainer,\n  ShorthandFactory,\n} from '../../utils';\nimport { MenuContext, MenuDividerSubscribedValue } from './menuContext';\n\nexport interface MenuDividerProps extends UIComponentProps, ChildrenComponentProps, ContentComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<MenuDividerBehaviorProps>;\n\n  inSubmenu?: boolean;\n  secondary?: boolean;\n  pills?: boolean;\n  pointing?: boolean | 'start' | 'end';\n  primary?: boolean;\n  vertical?: boolean;\n}\n\nexport type MenuDividerStylesProps = Required<\n  Pick<MenuDividerProps, 'vertical' | 'inSubmenu' | 'pills' | 'primary' | 'pointing' | 'secondary'>\n> & {\n  hasContent: boolean;\n};\n\nexport const menuDividerClassName = 'ui-menu__divider';\n\n/**\n * A MenuDivider is non-actionable element that visually segments items of Menu.\n */\nexport const MenuDivider = compose<'li', MenuDividerProps, MenuDividerStylesProps, {}, {}>(\n  (inputProps, ref, composeOptions) => {\n    const context = useFluentContext();\n    const { setStart, setEnd } = useTelemetry(composeOptions.displayName, context.telemetry);\n    setStart();\n\n    const parentProps = (useContextSelectors(MenuContext, {\n      variables: v => v.variables,\n      slotProps: v => v.slotProps.divider,\n      accessibility: v => v.behaviors.divider,\n    }) as unknown) as MenuDividerSubscribedValue; // TODO: we should improve typings for the useContextSelectors\n\n    const props = {\n      ...parentProps.slotProps,\n      accessibility: parentProps.accessibility,\n      variables: parentProps.variables,\n      ...inputProps,\n    };\n\n    const {\n      accessibility = menuDividerBehavior,\n      children,\n      content,\n      vertical,\n      inSubmenu,\n      pills,\n      pointing,\n      primary,\n      className,\n      design,\n      styles,\n      secondary,\n      variables,\n    } = props;\n\n    const getA11yProps = useAccessibility(accessibility, {\n      debugName: composeOptions.displayName,\n      rtl: context.rtl,\n    });\n\n    const { classes } = useStyles<MenuDividerStylesProps>(composeOptions.displayName, {\n      className: composeOptions.className,\n      composeOptions,\n      mapPropsToStyles: () => ({\n        hasContent: !!content || !!children,\n        pills,\n        pointing,\n        vertical,\n        inSubmenu,\n        primary,\n        secondary,\n      }),\n      mapPropsToInlineStyles: () => ({\n        className,\n        design,\n        styles,\n        variables: mergeVariablesOverrides(variables, parentProps.variables),\n      }),\n      rtl: context.rtl,\n      unstable_props: props,\n    });\n\n    const ElementType = getElementType(props);\n    const unhandledProps = useUnhandledProps(composeOptions.handledProps, props);\n\n    const element = (\n      <ElementType\n        {...getA11yProps('root', {\n          className: classes.root,\n          ...rtlTextContainer.getAttributes({ forElements: [children, content] }),\n          ...unhandledProps,\n          ref,\n        })}\n      >\n        {childrenExist(children) ? children : content}\n      </ElementType>\n    );\n    setEnd();\n\n    return element;\n  },\n  {\n    className: menuDividerClassName,\n    displayName: 'MenuDivider',\n\n    handledProps: [\n      'accessibility',\n      'as',\n      'children',\n      'className',\n      'content',\n      'design',\n      'styles',\n      'variables',\n\n      'pointing',\n      'inSubmenu',\n      'primary',\n      'secondary',\n      'vertical',\n    ],\n    shorthandConfig: { mappedProp: 'content' },\n  },\n) as ComponentWithAs<'li', MenuDividerProps> & {\n  create: ShorthandFactory<MenuDividerProps>;\n};\n\nMenuDivider.defaultProps = {\n  as: 'li',\n};\n\nMenuDivider.propTypes = {\n  ...commonPropTypes.createCommon(),\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  vertical: PropTypes.bool,\n  inSubmenu: PropTypes.bool,\n  pointing: PropTypes.oneOf(['start', 'end', true, false]),\n};\n\nMenuDivider.create = createShorthandFactory({ Component: MenuDivider, mappedProp: 'content' });\n"],"file":"MenuDivider.js"}