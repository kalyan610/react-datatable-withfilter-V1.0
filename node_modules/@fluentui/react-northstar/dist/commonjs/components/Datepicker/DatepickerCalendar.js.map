{"version":3,"sources":["components/Datepicker/DatepickerCalendar.tsx"],"names":["datepickerCalendarClassName","normalizeDateInGrid","date","result","Date","getTime","setDate","DatepickerCalendar","props","context","displayName","telemetry","setStart","setEnd","className","design","styles","variables","calendarHeaderCell","calendarCell","calendarCellButton","calendarGrid","calendarGridRow","header","selectedDate","navigatedDate","firstDayOfWeek","today","formatMonthDayYear","formatMonthYear","shortDays","days","minDate","maxDate","restrictedDates","restrictedDatesOptions","ElementType","unhandledProps","handledProps","updateNavigatedDate","shouldFocusInDayGrid","setShouldFocusInDayGrid","setGridNavigatedDate","getA11yProps","accessibility","debugName","actionHandlers","addWeek","e","preventDefault","newNavigatedDate","gridNavigatedDate","subtractWeek","addDay","subtractDay","moveToStartOfWeek","targetDate","moveToEndOfWeek","moveToStartOfColumn","targetDayOfWeek","getDay","visibleGrid","day","originalDate","moveToEndOfColumn","length","rtl","React","useState","normalizedGridDate","setNormalizedGridDate","mapPropsToInlineStyles","classes","useMemo","dayGridOptions","weeksToShow","firstWeekOfYear","dateRangeType","daysToSelectInDayView","showWeekNumbers","workWeekDays","grid","slice","useEffect","newNormalizedDate","gridContainsNavigatedDate","find","week","dateFormatting","months","shortMonths","focusDateRef","useRef","changeMonth","nextMonth","prevMonthOutOfBounds","nextMonthOutOfBounds","current","focus","renderCell","content","DatepickerCalendarCell","defaultProps","key","selected","isSelected","disabled","isInBounds","quiet","isInMonth","renderCellButton","DatepickerCalendarCellButton","overrideProps","predefinedProps","onFocus","onClick","value","ref","renderWeekRow","element","root","DatepickerCalendarHeader","label","disabledNextButton","disabledPreviousButton","prevMonthAriaLabel","nextMonthAriaLabel","onPreviousClick","data","onNextClick","DatepickerCalendarGrid","DatepickerCalendarGridRow","children","DAYS_IN_WEEK","dayNumber","DatepickerCalendarHeaderCell","propTypes","commonPropTypes","createCommon","customPropTypes","itemShorthand","onDateChange","PropTypes","func","instanceOf","arrayOf","oneOf","Object","keys","DayOfWeek","map","name","FirstWeekOfYear","DateRangeType","number","bool","formatDay","formatYear","parseDate","string","isRequiredErrorMessage","invalidInputErrorMessage","isOutOfBoundsErrorMessage","goToToday","openCalendarTitle","inputPlaceholder","prevYearAriaLabel","nextYearAriaLabel","prevYearRangeAriaLabel","nextYearRangeAriaLabel","monthPickerHeaderAriaLabel","yearPickerHeaderAriaLabel","closeButtonAriaLabel","weekNumberFormatString","selectedDateFormatString","todayDateFormatString","inputAriaLabel","inputBoundedFormatString","inputMinBoundedFormatString","inputMaxBoundedFormatString","datepickerCalendarBehavior","Monday","FirstDay","Day","DEFAULT_CALENDAR_STRINGS"],"mappings":"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","sourcesContent":["import { Accessibility, datepickerCalendarBehavior, DatepickerCalendarBehaviorProps } from '@fluentui/accessibility';\nimport {\n  DateRangeType,\n  DayOfWeek,\n  DAYS_IN_WEEK,\n  FirstWeekOfYear,\n  getDayGrid,\n  IDay,\n  DEFAULT_CALENDAR_STRINGS,\n  ICalendarStrings,\n  IDayGridOptions,\n  IDateGridStrings,\n  IRestrictedDatesOptions,\n  compareDates,\n  compareDatePart,\n  getMonthStart,\n  getMonthEnd,\n  getStartDateOfWeek,\n  getEndDateOfWeek,\n} from '../../utils/date-time-utilities';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n  useUnhandledProps,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { ComponentEventHandler, FluentComponentStaticProps, ShorthandValue } from '../../types';\nimport { commonPropTypes, createShorthand, UIComponentProps } from '../../utils';\nimport { DatepickerCalendarGrid, DatepickerCalendarGridProps } from './DatepickerCalendarGrid';\nimport { DatepickerCalendarGridRow, DatepickerCalendarGridRowProps } from './DatepickerCalendarGridRow';\nimport { DatepickerCalendarHeader, DatepickerCalendarHeaderProps } from './DatepickerCalendarHeader';\nimport { DatepickerCalendarCellProps, DatepickerCalendarCell } from './DatepickerCalendarCell';\nimport { DatepickerCalendarCellButtonProps, DatepickerCalendarCellButton } from './DatepickerCalendarCellButton';\nimport { DatepickerCalendarHeaderCellProps, DatepickerCalendarHeaderCell } from './DatepickerCalendarHeaderCell';\nimport { navigateToNewDate, contstraintNavigatedDate } from './navigateToNewDate';\n\nexport interface DatepickerCalendarProps extends UIComponentProps, Partial<ICalendarStrings>, Partial<IDayGridOptions> {\n  /** Calendar can have header. */\n  header?: ShorthandValue<DatepickerCalendarHeaderProps>;\n\n  /** A render function to customize how cells are rendered in the Calendar. */\n  calendarCell?: ShorthandValue<DatepickerCalendarCellProps>;\n\n  /** A render function to customize how cell's buttons are rendered in the Calendar. */\n  calendarCellButton?: ShorthandValue<DatepickerCalendarCellButtonProps>;\n\n  /** A render function to customize how header cells are rendered in the Calendar. */\n  calendarHeaderCell?: ShorthandValue<DatepickerCalendarHeaderCellProps>;\n\n  /** A render function to customize how the calendar grid is rendered. */\n  calendarGrid?: ShorthandValue<DatepickerCalendarGridProps>;\n\n  /** A render function to customize how the calendar grid row is rendered. */\n  calendarGridRow?: ShorthandValue<DatepickerCalendarGridRowProps>;\n\n  /**\n   * The currently selected date.\n   */\n  selectedDate?: Date;\n  /**\n   * The currently navigated date.\n   */\n  navigatedDate?: Date;\n\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<DatepickerCalendarBehaviorProps>;\n\n  /**\n   * Called on change of the date.\n   *\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props and proposed value.\n   */\n  onDateChange?: ComponentEventHandler<DatepickerCalendarProps & { value: IDay }>;\n}\n\nexport type DatepickerCalendarStylesProps = never;\n\nexport const datepickerCalendarClassName = 'ui-datepicker__calendar';\n\nconst normalizeDateInGrid = (date: Date): Date => {\n  const result = new Date(date.getTime());\n  result.setDate(1);\n  return result;\n};\n\n/**\n * A DatepickerCalendar is used to display dates in sematically grouped way.\n */\nexport const DatepickerCalendar: ComponentWithAs<'div', DatepickerCalendarProps> &\n  FluentComponentStaticProps<DatepickerCalendarProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(DatepickerCalendar.displayName, context.telemetry);\n  setStart();\n\n  const {\n    className,\n    design,\n    styles,\n    variables,\n    calendarHeaderCell,\n    calendarCell,\n    calendarCellButton,\n    calendarGrid,\n    calendarGridRow,\n    header,\n    selectedDate,\n    navigatedDate,\n    firstDayOfWeek,\n    today,\n    formatMonthDayYear,\n    formatMonthYear,\n    shortDays,\n    days,\n    minDate,\n    maxDate,\n    restrictedDates,\n  } = props;\n\n  const restrictedDatesOptions: IRestrictedDatesOptions = {\n    minDate,\n    maxDate,\n    restrictedDates,\n  };\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(DatepickerCalendar.handledProps, props);\n\n  const updateNavigatedDate = (date: Date) => {\n    if (!!date) {\n      if (!shouldFocusInDayGrid) {\n        setShouldFocusInDayGrid(true);\n      }\n      setGridNavigatedDate(date);\n    }\n  };\n  const getA11yProps = useAccessibility(props.accessibility, {\n    debugName: DatepickerCalendar.displayName,\n    actionHandlers: {\n      addWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractWeek: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Week', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      addDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', 1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      subtractDay: e => {\n        e.preventDefault();\n        const newNavigatedDate = navigateToNewDate(gridNavigatedDate, 'Day', -1, restrictedDatesOptions, true);\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getStartDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfWeek: e => {\n        e.preventDefault();\n        const targetDate = getEndDateOfWeek(gridNavigatedDate, firstDayOfWeek);\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToStartOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(visibleGrid[0], day => day.originalDate.getDay() === targetDayOfWeek)?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n      moveToEndOfColumn: e => {\n        e.preventDefault();\n        const targetDayOfWeek = gridNavigatedDate.getDay();\n        const targetDate = _.find(\n          visibleGrid[visibleGrid.length - 1],\n          day => day.originalDate.getDay() === targetDayOfWeek,\n        )?.originalDate;\n\n        const newNavigatedDate = contstraintNavigatedDate(\n          gridNavigatedDate,\n          targetDate,\n          -1,\n          restrictedDatesOptions,\n          true,\n        );\n\n        updateNavigatedDate(newNavigatedDate);\n      },\n    },\n    rtl: context.rtl,\n  });\n\n  const [gridNavigatedDate, setGridNavigatedDate] = React.useState<Date>(\n    () => new Date((navigatedDate || today || new Date()).getTime()),\n  );\n  const [normalizedGridDate, setNormalizedGridDate] = React.useState<Date>(() =>\n    normalizeDateInGrid(gridNavigatedDate),\n  );\n\n  const [shouldFocusInDayGrid, setShouldFocusInDayGrid] = React.useState<boolean>(true);\n\n  const { classes } = useStyles<DatepickerCalendarStylesProps>(DatepickerCalendar.displayName, {\n    className: datepickerCalendarClassName,\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const visibleGrid = React.useMemo<IDay[][]>(() => {\n    const dayGridOptions: IDayGridOptions = {\n      selectedDate,\n      navigatedDate: normalizedGridDate,\n      weeksToShow: props.weeksToShow,\n      firstDayOfWeek: props.firstDayOfWeek,\n      firstWeekOfYear: props.firstWeekOfYear,\n      dateRangeType: props.dateRangeType,\n      daysToSelectInDayView: props.daysToSelectInDayView,\n      today: props.today,\n      showWeekNumbers: props.showWeekNumbers,\n      workWeekDays: props.workWeekDays,\n      minDate: props.minDate,\n      maxDate: props.maxDate,\n      restrictedDates: props.restrictedDates,\n    };\n    const grid = getDayGrid(dayGridOptions);\n    return grid.slice(1, grid.length - 1); // slicing off first and last weeks, cause we don't use them for transitions\n  }, [selectedDate, normalizedGridDate, props]);\n\n  React.useEffect(() => {\n    const newNormalizedDate = normalizeDateInGrid(gridNavigatedDate);\n\n    if (compareDatePart(newNormalizedDate, normalizedGridDate)) {\n      // Do not change the grid immediately the month changes but only once the date stops being visible.\n      const gridContainsNavigatedDate = visibleGrid.find(week =>\n        week.find(day => compareDatePart(day.originalDate, gridNavigatedDate) === 0),\n      );\n      if (!gridContainsNavigatedDate) {\n        setNormalizedGridDate(newNormalizedDate);\n      }\n    }\n  }, [gridNavigatedDate, visibleGrid, normalizedGridDate]);\n\n  const dateFormatting: IDateGridStrings = {\n    months: props.months,\n    shortMonths: props.shortMonths,\n    days: props.days,\n    shortDays: props.shortDays,\n  };\n\n  const focusDateRef = React.useRef(null);\n\n  const changeMonth = (nextMonth: boolean) => {\n    const newNavigatedDate = navigateToNewDate(\n      normalizedGridDate,\n      'Month',\n      nextMonth ? 1 : -1,\n      restrictedDatesOptions,\n      true,\n    );\n    if (!!newNavigatedDate) {\n      setGridNavigatedDate(newNavigatedDate);\n      setShouldFocusInDayGrid(false);\n      setNormalizedGridDate(normalizeDateInGrid(newNavigatedDate));\n    }\n  };\n\n  const prevMonthOutOfBounds = minDate ? compareDatePart(minDate, getMonthStart(normalizedGridDate)) >= 0 : false;\n  const nextMonthOutOfBounds = maxDate ? compareDatePart(getMonthEnd(normalizedGridDate), maxDate) >= 0 : false;\n  React.useEffect(() => {\n    if (shouldFocusInDayGrid) {\n      focusDateRef.current?.focus();\n    }\n  }, [gridNavigatedDate, normalizedGridDate, shouldFocusInDayGrid]);\n\n  const renderCell = (day: IDay, content) =>\n    createShorthand(DatepickerCalendarCell, calendarCell, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content,\n          key: day.key,\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n    });\n\n  const renderCellButton = (day: IDay) =>\n    createShorthand(DatepickerCalendarCellButton, calendarCellButton, {\n      defaultProps: () =>\n        getA11yProps('calendarCell', {\n          content: day.date,\n          'aria-label': formatMonthDayYear(day.originalDate, dateFormatting),\n          selected: day.isSelected,\n          disabled: !day.isInBounds,\n          quiet: !day.isInMonth,\n          today: compareDates(day.originalDate, props.today ?? new Date()),\n        }),\n      overrideProps: (\n        predefinedProps: DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> },\n      ): DatepickerCalendarCellButtonProps & { ref: React.Ref<HTMLButtonElement> } => ({\n        onFocus: e => {\n          setGridNavigatedDate(day.originalDate);\n          _.invoke(predefinedProps, 'onFocus', e, predefinedProps);\n        },\n        onClick: e => {\n          _.invoke(props, 'onDateChange', e, { ...props, value: day });\n          _.invoke(predefinedProps, 'onClick', e, predefinedProps);\n        },\n        ref: compareDates(gridNavigatedDate, day.originalDate) ? focusDateRef : null,\n      }),\n    });\n  const renderWeekRow = (week: IDay[]) => _.map(week, (day: IDay) => renderCell(day, renderCellButton(day)));\n\n  const element = (\n    <ElementType\n      {...getA11yProps('root', {\n        className: classes.root,\n        ...unhandledProps,\n      })}\n    >\n      {createShorthand(DatepickerCalendarHeader, header, {\n        defaultProps: () => ({\n          label: formatMonthYear(normalizedGridDate, dateFormatting),\n          'aria-label': formatMonthYear(normalizedGridDate, dateFormatting),\n          disabledNextButton: nextMonthOutOfBounds,\n          disabledPreviousButton: prevMonthOutOfBounds,\n          prevMonthAriaLabel: props.prevMonthAriaLabel,\n          nextMonthAriaLabel: props.nextMonthAriaLabel,\n        }),\n        overrideProps: (predefinedProps: DatepickerCalendarHeaderProps): DatepickerCalendarHeaderProps => ({\n          onPreviousClick: (e, data) => {\n            changeMonth(false);\n            _.invoke(predefinedProps, 'onPreviousClick', e, data);\n          },\n          onNextClick: (e, data) => {\n            changeMonth(true);\n            _.invoke(predefinedProps, 'onNextClick', e, data);\n          },\n        }),\n      })}\n      {createShorthand(DatepickerCalendarGrid, calendarGrid, {\n        defaultProps: () =>\n          getA11yProps('calendarGrid', {\n            content: (\n              <>\n                <thead>\n                  {createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                    defaultProps: () =>\n                      getA11yProps('calendarGridRow', {\n                        children: _.times(DAYS_IN_WEEK, dayNumber =>\n                          createShorthand(DatepickerCalendarHeaderCell, calendarHeaderCell, {\n                            defaultProps: () =>\n                              getA11yProps('calendarHeaderCell', {\n                                'aria-label': days[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                content: shortDays[(dayNumber + firstDayOfWeek) % DAYS_IN_WEEK],\n                                key: dayNumber,\n                              }),\n                          }),\n                        ),\n                      }),\n                  })}\n                </thead>\n                <tbody>\n                  {_.map(visibleGrid, week =>\n                    createShorthand(DatepickerCalendarGridRow, calendarGridRow, {\n                      defaultProps: () =>\n                        getA11yProps('calendarGridRow', {\n                          children: renderWeekRow(week),\n                          key: week[0].key,\n                        }),\n                    }),\n                  )}\n                </tbody>\n              </>\n            ),\n          }),\n      })}\n    </ElementType>\n  );\n  setEnd();\n  return element;\n};\n\nDatepickerCalendar.displayName = 'DatepickerCalendar';\n\nDatepickerCalendar.propTypes = {\n  ...commonPropTypes.createCommon(),\n  calendarCell: customPropTypes.itemShorthand,\n  calendarCellButton: customPropTypes.itemShorthand,\n  calendarHeaderCell: customPropTypes.itemShorthand,\n  header: customPropTypes.itemShorthand,\n  calendarGrid: customPropTypes.itemShorthand,\n  calendarGridRow: customPropTypes.itemShorthand,\n  onDateChange: PropTypes.func,\n  selectedDate: PropTypes.instanceOf(Date),\n  navigatedDate: PropTypes.instanceOf(Date),\n\n  minDate: PropTypes.instanceOf(Date),\n  maxDate: PropTypes.instanceOf(Date),\n  restrictedDates: PropTypes.arrayOf(PropTypes.instanceOf(Date)),\n\n  firstDayOfWeek: PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name])),\n  firstWeekOfYear: PropTypes.oneOf(Object.keys(FirstWeekOfYear).map(name => FirstWeekOfYear[name])),\n  dateRangeType: PropTypes.oneOf(Object.keys(DateRangeType).map(name => DateRangeType[name])),\n  daysToSelectInDayView: PropTypes.number,\n  today: PropTypes.instanceOf(Date),\n  showWeekNumbers: PropTypes.bool,\n  workWeekDays: PropTypes.arrayOf(PropTypes.oneOf(Object.keys(DayOfWeek).map(name => DayOfWeek[name]))),\n  weeksToShow: PropTypes.number,\n\n  formatDay: PropTypes.func,\n  formatYear: PropTypes.func,\n  formatMonthDayYear: PropTypes.func,\n  formatMonthYear: PropTypes.func,\n\n  parseDate: PropTypes.func,\n\n  months: PropTypes.arrayOf(PropTypes.string),\n  shortMonths: PropTypes.arrayOf(PropTypes.string),\n  days: PropTypes.arrayOf(PropTypes.string),\n  shortDays: PropTypes.arrayOf(PropTypes.string),\n\n  isRequiredErrorMessage: PropTypes.string,\n  invalidInputErrorMessage: PropTypes.string,\n  isOutOfBoundsErrorMessage: PropTypes.string,\n  goToToday: PropTypes.string,\n  openCalendarTitle: PropTypes.string,\n  inputPlaceholder: PropTypes.string,\n  prevMonthAriaLabel: PropTypes.string,\n  nextMonthAriaLabel: PropTypes.string,\n  prevYearAriaLabel: PropTypes.string,\n  nextYearAriaLabel: PropTypes.string,\n  prevYearRangeAriaLabel: PropTypes.string,\n  nextYearRangeAriaLabel: PropTypes.string,\n  monthPickerHeaderAriaLabel: PropTypes.string,\n  yearPickerHeaderAriaLabel: PropTypes.string,\n  closeButtonAriaLabel: PropTypes.string,\n  weekNumberFormatString: PropTypes.string,\n  selectedDateFormatString: PropTypes.string,\n  todayDateFormatString: PropTypes.string,\n\n  inputAriaLabel: PropTypes.string,\n  inputBoundedFormatString: PropTypes.string,\n  inputMinBoundedFormatString: PropTypes.string,\n  inputMaxBoundedFormatString: PropTypes.string,\n};\n\nDatepickerCalendar.defaultProps = {\n  accessibility: datepickerCalendarBehavior,\n  firstDayOfWeek: DayOfWeek.Monday,\n  firstWeekOfYear: FirstWeekOfYear.FirstDay,\n  dateRangeType: DateRangeType.Day,\n  header: {},\n  calendarCell: {},\n  calendarCellButton: {},\n  calendarHeaderCell: {},\n  calendarGrid: {},\n  calendarGridRow: {},\n  ...DEFAULT_CALENDAR_STRINGS,\n};\n\nDatepickerCalendar.handledProps = Object.keys(DatepickerCalendar.propTypes) as any;\n"],"file":"DatepickerCalendar.js"}