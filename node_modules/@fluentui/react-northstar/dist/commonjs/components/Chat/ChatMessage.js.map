{"version":3,"sources":["components/Chat/ChatMessage.tsx"],"names":["chatMessageClassName","chatMessageSlotClassNames","actionMenu","author","timestamp","badge","content","reactionGroup","ChatMessage","props","context","displayName","telemetry","setStart","setEnd","parentAttached","ChatItemContext","v","attached","accessibility","badgePosition","children","className","design","mine","positionActionMenu","reactionGroupPosition","styles","variables","header","details","overflow","unstable_overflow","positioningProps","React","useState","focused","setFocused","messageNode","setMessageNode","updateActionsMenuPosition","useRef","getA11Props","actionHandlers","preventDefault","event","currentTarget","target","focus","stopPropagation","mapPropsToStyles","hasBadge","hasReactionGroup","mapPropsToInlineStyles","rtl","classes","resolvedStyles","handleFocus","e","handleBlur","shouldPreserveFocusState","relatedTarget","handleMouseEnter","renderActionMenu","actionMenuElement","Menu","create","defaultProps","IS_FOCUSABLE_ATTRIBUTE","menuAsToolbarBehavior","modifiers","name","options","fallbackPlacements","boundary","scheduleUpdate","current","childrenPropExists","rootClasses","root","ElementType","unhandledProps","handledProps","badgeElement","Label","reactionGroupElement","Reaction","Group","authorElement","Text","size","timestampElement","messageContent","Box","detailsElement","ChatMessageDetails","headerElement","ChatMessageHeader","overrideProps","element","unstable_wrapWithFocusZone","onBlur","onFocus","onMouseEnter","rtlTextContainer","getAttributes","forElements","chatMessageBehavior","propTypes","commonPropTypes","createCommon","PropTypes","oneOfType","customPropTypes","itemShorthand","collectionShorthand","bool","oneOf","func","Object","keys","Component","mappedProp"],"mappings":"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","sourcesContent":["import {\n  Accessibility,\n  IS_FOCUSABLE_ATTRIBUTE,\n  chatMessageBehavior,\n  menuAsToolbarBehavior,\n  ChatMessageBehaviorProps,\n} from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useFluentContext,\n  useStyles,\n  useTelemetry,\n} from '@fluentui/react-bindings';\nimport { useContextSelector } from '@fluentui/react-context-selector';\nimport { Ref } from '@fluentui/react-component-ref';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport {\n  getScrollParent,\n  Popper,\n  PopperShorthandProps,\n  partitionPopperPropsFromShorthand,\n  PopperModifiers,\n} from '../../utils/positioner';\nimport {\n  childrenExist,\n  createShorthandFactory,\n  UIComponentProps,\n  ChildrenComponentProps,\n  ContentComponentProps,\n  commonPropTypes,\n  rtlTextContainer,\n  createShorthand,\n} from '../../utils';\nimport { ShorthandValue, ComponentEventHandler, ShorthandCollection, FluentComponentStaticProps } from '../../types';\nimport { Box, BoxProps } from '../Box/Box';\nimport { Label, LabelProps } from '../Label/Label';\nimport { Menu, MenuProps } from '../Menu/Menu';\nimport { MenuItemProps } from '../Menu/MenuItem';\nimport { Text, TextProps } from '../Text/Text';\nimport { Reaction, ReactionProps } from '../Reaction/Reaction';\nimport { ReactionGroupProps } from '../Reaction/ReactionGroup';\nimport { ChatItemContext } from './chatItemContext';\nimport { ChatMessageHeader, ChatMessageHeaderProps } from './ChatMessageHeader';\nimport { ChatMessageDetails, ChatMessageDetailsProps } from './ChatMessageDetails';\n\nexport interface ChatMessageSlotClassNames {\n  actionMenu: string;\n  author: string;\n  timestamp: string;\n  badge: string;\n  content: string;\n  reactionGroup: string;\n}\n\nexport interface ChatMessageProps\n  extends UIComponentProps,\n    ChildrenComponentProps,\n    ContentComponentProps<ShorthandValue<BoxProps>> {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<ChatMessageBehaviorProps>;\n\n  /** Menu with actions of the message. */\n  actionMenu?: ShorthandValue<MenuProps & { popper?: PopperShorthandProps }> | ShorthandCollection<MenuItemProps>;\n\n  /** Controls messages's relation to other chat messages. Is automatically set by the ChatItem. */\n  attached?: boolean | 'top' | 'bottom';\n\n  /** Author of the message. */\n  author?: ShorthandValue<TextProps>;\n\n  /** Indicates whether message belongs to the current user. */\n  mine?: boolean;\n\n  /** A message cane have a custom header */\n  header?: ShorthandValue<ChatMessageHeaderProps>;\n\n  /** Timestamp of the message. */\n  timestamp?: ShorthandValue<TextProps>;\n\n  /** Message details info slot for the header. */\n  details?: ShorthandValue<ChatMessageDetailsProps>;\n\n  /** Badge attached to the message. */\n  badge?: ShorthandValue<LabelProps>;\n\n  /** A message can format the badge to appear at the start or the end of the message. */\n  badgePosition?: 'start' | 'end';\n\n  /**\n   * Called after user's blur.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onBlur?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user's focus.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onFocus?: ComponentEventHandler<ChatMessageProps>;\n\n  /**\n   * Called after user enters by mouse.\n   * @param event - React's original SyntheticEvent.\n   * @param data - All props.\n   */\n  onMouseEnter?: ComponentEventHandler<ChatMessageProps>;\n\n  /** Allows suppression of action menu positioning for performance reasons */\n  positionActionMenu?: boolean;\n\n  /** Reaction group applied to the message. */\n  reactionGroup?: ShorthandValue<ReactionGroupProps> | ShorthandCollection<ReactionProps>;\n\n  /** A message can format the reactions group to appear at the start or the end of the message. */\n  reactionGroupPosition?: 'start' | 'end';\n\n  /** Positions an actionMenu slot in \"fixed\" mode. */\n  unstable_overflow?: boolean;\n}\n\nexport type ChatMessageStylesProps = Pick<ChatMessageProps, 'attached' | 'badgePosition' | 'mine'> & {\n  focused: boolean;\n  hasBadge: boolean;\n  hasReactionGroup: boolean;\n};\n\nexport const chatMessageClassName = 'ui-chat__message';\nexport const chatMessageSlotClassNames: ChatMessageSlotClassNames = {\n  actionMenu: `${chatMessageClassName}__actions`,\n  author: `${chatMessageClassName}__author`,\n  timestamp: `${chatMessageClassName}__timestamp`,\n  badge: `${chatMessageClassName}__badge`,\n  content: `${chatMessageClassName}__content`,\n  reactionGroup: `${chatMessageClassName}__reactions`,\n};\n\n/**\n * A ChatMessage represents a single message in chat.\n */\nexport const ChatMessage: ComponentWithAs<'div', ChatMessageProps> &\n  FluentComponentStaticProps<ChatMessageProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(ChatMessage.displayName, context.telemetry);\n  setStart();\n\n  const parentAttached = useContextSelector(ChatItemContext, v => v.attached);\n  const {\n    accessibility,\n    attached = parentAttached,\n    author,\n    badge,\n    badgePosition,\n    children,\n    className,\n    content,\n    design,\n    mine,\n    positionActionMenu,\n    reactionGroup,\n    reactionGroupPosition,\n    timestamp,\n    styles,\n    variables,\n    header,\n    details,\n    unstable_overflow: overflow,\n  } = props;\n  const [actionMenu, positioningProps] = partitionPopperPropsFromShorthand(props.actionMenu);\n\n  const [focused, setFocused] = React.useState<boolean>(false);\n  const [messageNode, setMessageNode] = React.useState<HTMLElement | null>(null);\n\n  const updateActionsMenuPosition = React.useRef<(() => void) | null>(null);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      // prevents default FocusZone behavior, e.g., in ChatMessageBehavior, it prevents FocusZone from using arrow keys\n      // as navigation (only Tab key should work)\n      preventDefault: event => {\n        // preventDefault only if event coming from inside the message\n        if (event.currentTarget !== event.target) {\n          event.preventDefault();\n        }\n      },\n\n      focus: event => {\n        if (messageNode) {\n          messageNode.focus();\n          event.stopPropagation();\n        }\n      },\n    },\n  });\n  const { classes, styles: resolvedStyles } = useStyles<ChatMessageStylesProps>(ChatMessage.displayName, {\n    className: chatMessageClassName,\n    mapPropsToStyles: () => ({\n      attached,\n      badgePosition,\n      focused,\n      mine,\n      hasBadge: !!badge,\n      hasReactionGroup: !!reactionGroup,\n    }),\n    mapPropsToInlineStyles: () => ({\n      className,\n      design,\n      styles,\n      variables,\n    }),\n    rtl: context.rtl,\n  });\n\n  const handleFocus = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n\n    setFocused(true);\n    _.invoke(props, 'onFocus', e, props);\n  };\n\n  const handleBlur = (e: React.SyntheticEvent) => {\n    // `focused` controls is focused the whole `ChatMessage` or any of its children. When we're navigating\n    // with keyboard the focused element will be changed and there is no way to use `:focus` selector\n    const shouldPreserveFocusState = _.invoke(e, 'currentTarget.contains', (e as any).relatedTarget);\n\n    setFocused(shouldPreserveFocusState);\n    _.invoke(props, 'onBlur', e, props);\n  };\n\n  const handleMouseEnter = (e: React.SyntheticEvent) => {\n    _.invoke(updateActionsMenuPosition, 'current');\n    _.invoke(props, 'onMouseEnter', e, props);\n  };\n\n  const renderActionMenu = () => {\n    const actionMenuElement = Menu.create(actionMenu, {\n      defaultProps: () => ({\n        [IS_FOCUSABLE_ATTRIBUTE]: true,\n        accessibility: menuAsToolbarBehavior,\n        className: chatMessageSlotClassNames.actionMenu,\n        styles: resolvedStyles.actionMenu,\n      }),\n    });\n\n    if (!actionMenuElement) {\n      return actionMenuElement;\n    }\n\n    const modifiers: PopperModifiers | undefined = positionActionMenu && [\n      // https://popper.js.org/docs/v2/modifiers/flip/\n      // Forces to flip only in \"top-*\" positions\n      { name: 'flip', options: { fallbackPlacements: ['top'] } },\n      overflow && {\n        name: 'preventOverflow',\n        options: { boundary: getScrollParent(messageNode) },\n      },\n    ];\n\n    return (\n      <Popper\n        enabled={positionActionMenu}\n        align=\"end\"\n        modifiers={modifiers}\n        position=\"above\"\n        positionFixed={overflow}\n        targetRef={messageNode}\n        {...positioningProps}\n      >\n        {({ scheduleUpdate }) => {\n          updateActionsMenuPosition.current = scheduleUpdate;\n\n          return actionMenuElement;\n        }}\n      </Popper>\n    );\n  };\n\n  const childrenPropExists = childrenExist(children);\n  const rootClasses = childrenPropExists ? cx(classes.root, classes.content) : classes.root;\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(ChatMessage.handledProps, props);\n\n  const badgeElement = Label.create(badge, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.badge,\n      styles: resolvedStyles.badge,\n    }),\n  });\n\n  const reactionGroupElement = Reaction.Group.create(reactionGroup, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.reactionGroup,\n      styles: resolvedStyles.reactionGroup,\n    }),\n  });\n\n  const actionMenuElement = renderActionMenu();\n\n  const authorElement = Text.create(author, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.author,\n      className: chatMessageSlotClassNames.author,\n    }),\n  });\n\n  const timestampElement = Text.create(timestamp, {\n    defaultProps: () => ({\n      size: 'small',\n      styles: resolvedStyles.timestamp,\n      timestamp: true,\n      className: chatMessageSlotClassNames.timestamp,\n    }),\n  });\n\n  const messageContent = Box.create(content, {\n    defaultProps: () => ({\n      className: chatMessageSlotClassNames.content,\n      styles: resolvedStyles.content,\n    }),\n  });\n\n  const detailsElement = createShorthand(ChatMessageDetails, details, {\n    defaultProps: () => ({ mine }),\n  });\n\n  const headerElement = createShorthand(ChatMessageHeader, header || {}, {\n    overrideProps: () => ({\n      content: (\n        <>\n          {authorElement}\n          {timestampElement}\n          {detailsElement}\n          {reactionGroupPosition === 'start' && reactionGroupElement}\n        </>\n      ),\n    }),\n  });\n\n  const element = (\n    <Ref innerRef={setMessageNode}>\n      {getA11Props.unstable_wrapWithFocusZone(\n        <ElementType\n          {...getA11Props('root', {\n            className: rootClasses,\n            onBlur: handleBlur,\n            onFocus: handleFocus,\n            onMouseEnter: handleMouseEnter,\n            ...rtlTextContainer.getAttributes({ forElements: [children] }),\n            ...unhandledProps,\n          })}\n        >\n          {childrenPropExists ? (\n            children\n          ) : (\n            <>\n              {actionMenuElement}\n              {badgePosition === 'start' && badgeElement}\n              {headerElement}\n              {messageContent}\n              {reactionGroupPosition === 'end' && reactionGroupElement}\n              {badgePosition === 'end' && badgeElement}\n            </>\n          )}\n        </ElementType>,\n      )}\n    </Ref>\n  );\n  setEnd();\n\n  return element;\n};\n\nChatMessage.displayName = 'ChatMessage';\n\nChatMessage.defaultProps = {\n  accessibility: chatMessageBehavior,\n  badgePosition: 'end',\n  positionActionMenu: true,\n  reactionGroupPosition: 'start',\n};\n\nChatMessage.propTypes = {\n  ...commonPropTypes.createCommon({ content: 'shorthand' }),\n  actionMenu: PropTypes.oneOfType([customPropTypes.itemShorthand, customPropTypes.collectionShorthand]),\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf<'top' | 'bottom'>(['top', 'bottom'])]),\n  author: customPropTypes.itemShorthand,\n  badge: customPropTypes.itemShorthand,\n  details: customPropTypes.itemShorthand,\n  badgePosition: PropTypes.oneOf(['start', 'end']),\n  header: customPropTypes.itemShorthand,\n  mine: PropTypes.bool,\n  timestamp: customPropTypes.itemShorthand,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  positionActionMenu: PropTypes.bool,\n  reactionGroup: PropTypes.oneOfType([customPropTypes.collectionShorthand, customPropTypes.itemShorthand]),\n  reactionGroupPosition: PropTypes.oneOf(['start', 'end']),\n  unstable_overflow: PropTypes.bool,\n};\n\nChatMessage.handledProps = Object.keys(ChatMessage.propTypes) as any;\n\nChatMessage.create = createShorthandFactory({ Component: ChatMessage, mappedProp: 'content' });\n"],"file":"ChatMessage.js"}