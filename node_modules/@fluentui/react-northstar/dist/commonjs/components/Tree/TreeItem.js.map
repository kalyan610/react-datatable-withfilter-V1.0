{"version":3,"sources":["components/Tree/TreeItem.tsx"],"names":["treeItemClassName","TreeItem","props","context","displayName","telemetry","setStart","setEnd","accessibility","children","className","contentRef","design","title","renderItemTitle","expanded","level","index","styles","variables","treeSize","selectionIndicator","selectableParent","selected","selectable","indeterminate","id","hasSubtreeItem","React","useContext","TreeContext","onFocusParent","onSiblingsExpand","onFocusFirstChild","onTitleClick","getA11Props","actionHandlers","performClick","e","preventDefault","stopPropagation","handleTitleClick","focusParent","handleFocusParent","collapse","expand","focusFirstChild","handleFocusFirstChild","expandSiblings","handleSiblingsExpand","performSelection","handleSelection","debugName","mapPropsToBehavior","hasSubtree","rtl","mapPropsToStyles","mapPropsToInlineStyles","classes","parent","handleTitleOverrides","predefinedProps","onClick","titleProps","target","includes","treeTitleSlotClassNames","indicator","ElementType","unhandledProps","handledProps","element","root","rtlTextContainer","getAttributes","forElements","TreeTitle","create","defaultProps","as","render","overrideProps","elementWithRef","propTypes","commonPropTypes","createCommon","content","customPropTypes","ref","PropTypes","string","isRequired","number","items","collectionShorthand","func","bool","itemShorthand","shorthandAllowingChildren","treeItemBehavior","Object","keys","Component","mappedProp"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AASA;;AAEA;;AACA;;AAEA;;AAEA;;AAeA;;AAEA;;AAuEO,IAAMA,iBAAiB,GAAG,eAA1B;AAEP;;;;;;;;;AAMO,IAAMC,QAA2F,GAAG,SAA9FA,QAA8F,CAAAC,KAAK,EAAI;AAClH,MAAMC,OAAO,GAAG,sCAAhB;;AADkH,sBAErF,iCAAaF,QAAQ,CAACG,WAAtB,EAAmCD,OAAO,CAACE,SAA3C,CAFqF;AAAA,MAE1GC,QAF0G,iBAE1GA,QAF0G;AAAA,MAEhGC,MAFgG,iBAEhGA,MAFgG;;AAGlHD,EAAAA,QAAQ;AAH0G,MAMhHE,aANgH,GAyB9GN,KAzB8G,CAMhHM,aANgH;AAAA,MAOhHC,QAPgH,GAyB9GP,KAzB8G,CAOhHO,QAPgH;AAAA,MAQhHC,SARgH,GAyB9GR,KAzB8G,CAQhHQ,SARgH;AAAA,MAShHC,UATgH,GAyB9GT,KAzB8G,CAShHS,UATgH;AAAA,MAUhHC,MAVgH,GAyB9GV,KAzB8G,CAUhHU,MAVgH;AAAA,MAWhHC,KAXgH,GAyB9GX,KAzB8G,CAWhHW,KAXgH;AAAA,MAYhHC,eAZgH,GAyB9GZ,KAzB8G,CAYhHY,eAZgH;AAAA,MAahHC,QAbgH,GAyB9Gb,KAzB8G,CAahHa,QAbgH;AAAA,MAchHC,KAdgH,GAyB9Gd,KAzB8G,CAchHc,KAdgH;AAAA,MAehHC,KAfgH,GAyB9Gf,KAzB8G,CAehHe,KAfgH;AAAA,MAgBhHC,MAhBgH,GAyB9GhB,KAzB8G,CAgBhHgB,MAhBgH;AAAA,MAiBhHC,SAjBgH,GAyB9GjB,KAzB8G,CAiBhHiB,SAjBgH;AAAA,MAkBhHC,QAlBgH,GAyB9GlB,KAzB8G,CAkBhHkB,QAlBgH;AAAA,MAmBhHC,kBAnBgH,GAyB9GnB,KAzB8G,CAmBhHmB,kBAnBgH;AAAA,MAoBhHC,gBApBgH,GAyB9GpB,KAzB8G,CAoBhHoB,gBApBgH;AAAA,MAqBhHC,QArBgH,GAyB9GrB,KAzB8G,CAqBhHqB,QArBgH;AAAA,MAsBhHC,UAtBgH,GAyB9GtB,KAzB8G,CAsBhHsB,UAtBgH;AAAA,MAuBhHC,aAvBgH,GAyB9GvB,KAzB8G,CAuBhHuB,aAvBgH;AAAA,MAwBhHC,EAxBgH,GAyB9GxB,KAzB8G,CAwBhHwB,EAxBgH;AA2BlH,MAAMC,cAAc,GAAG,wBAAWzB,KAAX,CAAvB;;AA3BkH,0BA6BrC0B,KAAK,CAACC,UAAN,CAAiBC,mBAAjB,CA7BqC;AAAA,MA6B1GC,aA7B0G,qBA6B1GA,aA7B0G;AAAA,MA6B3FC,gBA7B2F,qBA6B3FA,gBA7B2F;AAAA,MA6BzEC,iBA7ByE,qBA6BzEA,iBA7ByE;AAAA,MA6BtDC,YA7BsD,qBA6BtDA,YA7BsD;;AA+BlH,MAAMC,WAAW,GAAG,qCAAiB3B,aAAjB,EAAgC;AAClD4B,IAAAA,cAAc,EAAE;AACdC,MAAAA,YAAY,EAAE,sBAAAC,CAAC,EAAI;AACjBA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AAEAC,QAAAA,gBAAgB,CAACH,CAAD,CAAhB;AACD,OANa;AAOdI,MAAAA,WAAW,EAAE,qBAAAJ,CAAC,EAAI;AAChBA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AAEAG,QAAAA,iBAAiB,CAACL,CAAD,CAAjB;AACD,OAZa;AAadM,MAAAA,QAAQ,EAAE,kBAAAN,CAAC,EAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AAEAC,QAAAA,gBAAgB,CAACH,CAAD,CAAhB;AACD,OAlBa;AAmBdO,MAAAA,MAAM,EAAE,gBAAAP,CAAC,EAAI;AACXA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AAEAC,QAAAA,gBAAgB,CAACH,CAAD,CAAhB;AACD,OAxBa;AAyBdQ,MAAAA,eAAe,EAAE,yBAAAR,CAAC,EAAI;AACpBA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AAEAO,QAAAA,qBAAqB,CAACT,CAAD,CAArB;AACD,OA9Ba;AA+BdU,MAAAA,cAAc,EAAE,wBAAAV,CAAC,EAAI;AACnBA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AAEAS,QAAAA,oBAAoB,CAACX,CAAD,CAApB;AACD,OApCa;AAqCdY,MAAAA,gBAAgB,EAAE,0BAAAZ,CAAC,EAAI;AACrBA,QAAAA,CAAC,CAACC,cAAF;AACAD,QAAAA,CAAC,CAACE,eAAF;AACAW,QAAAA,eAAe,CAACb,CAAD,CAAf;AACD;AAzCa,KADkC;AA4ClDc,IAAAA,SAAS,EAAEnD,QAAQ,CAACG,WA5C8B;AA6ClDiD,IAAAA,kBAAkB,EAAE;AAAA,aAAO;AACzBtC,QAAAA,QAAQ,EAARA,QADyB;AAEzBC,QAAAA,KAAK,EAALA,KAFyB;AAGzBC,QAAAA,KAAK,EAALA,KAHyB;AAIzBqC,QAAAA,UAAU,EAAE3B,cAJa;AAKzBP,QAAAA,QAAQ,EAARA,QALyB;AAMzBG,QAAAA,QAAQ,EAARA,QANyB;AAOzBC,QAAAA,UAAU,EAAVA,UAPyB;AAQzBF,QAAAA,gBAAgB,EAAhBA;AARyB,OAAP;AAAA,KA7C8B;AAuDlDiC,IAAAA,GAAG,EAAEpD,OAAO,CAACoD;AAvDqC,GAAhC,CAApB;;AA/BkH,mBAwF9F,8BAA+BtD,QAAQ,CAACG,WAAxC,EAAqD;AACvEM,IAAAA,SAAS,EAAEV,iBAD4D;AAEvEwD,IAAAA,gBAAgB,EAAE;AAAA,aAAO;AACvBxC,QAAAA,KAAK,EAALA;AADuB,OAAP;AAAA,KAFqD;AAKvEyC,IAAAA,sBAAsB,EAAE;AAAA,aAAO;AAAE/C,QAAAA,SAAS,EAATA,SAAF;AAAaE,QAAAA,MAAM,EAANA,MAAb;AAAqBM,QAAAA,MAAM,EAANA,MAArB;AAA6BC,QAAAA,SAAS,EAATA;AAA7B,OAAP;AAAA,KAL+C;AAMvEoC,IAAAA,GAAG,EAAEpD,OAAO,CAACoD;AAN0D,GAArD,CAxF8F;AAAA,MAwF1GG,OAxF0G,cAwF1GA,OAxF0G;;AAiGlH,MAAMP,eAAe,GAAG,SAAlBA,eAAkB,CAAAb,CAAC,EAAI;AAC3BJ,IAAAA,YAAY,CAACI,CAAD,EAAIpC,KAAJ,EAAW,IAAX,CAAZ;AACA,0BAASA,KAAT,EAAgB,cAAhB,EAAgCoC,CAAhC,EAAmCpC,KAAnC;AACD,GAHD;;AAKA,MAAMuC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAH,CAAC,EAAI;AAC5BJ,IAAAA,YAAY,CAACI,CAAD,EAAIpC,KAAJ,CAAZ;AACA,0BAASA,KAAT,EAAgB,cAAhB,EAAgCoC,CAAhC,EAAmCpC,KAAnC;AACD,GAHD;;AAIA,MAAM6C,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAT,CAAC,EAAI;AACjC,0BAASpC,KAAT,EAAgB,mBAAhB,EAAqCoC,CAArC,EAAwCpC,KAAxC;AACA+B,IAAAA,iBAAiB,CAAC/B,KAAK,CAACwB,EAAP,CAAjB;AACD,GAHD;;AAIA,MAAMiB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAL,CAAC,EAAI;AAC7B,0BAASpC,KAAT,EAAgB,eAAhB,EAAiCoC,CAAjC,EAAoCpC,KAApC;AACA6B,IAAAA,aAAa,CAAC7B,KAAK,CAACyD,MAAP,CAAb;AACD,GAHD;;AAIA,MAAMV,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAX,CAAC,EAAI;AAChC,0BAASpC,KAAT,EAAgB,kBAAhB,EAAoCoC,CAApC,EAAuCpC,KAAvC;AACA8B,IAAAA,gBAAgB,CAACM,CAAD,EAAIpC,KAAJ,CAAhB;AACD,GAHD;;AAIA,MAAM0D,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,eAAD;AAAA,WAAsC;AACjEC,MAAAA,OAAO,EAAE,iBAACxB,CAAD,EAA0ByB,UAA1B,EAAyC;AAAA;;AAChD,YAAIvC,UAAU,aAAKc,CAAL,oBAAKA,CAAC,CAAE0B,MAAR,uCAAI,KAA4BtD,SAAhC,qBAAI,eAAuCuD,QAAvC,CAAgDC,mCAAwBC,SAAxE,CAAJ,CAAd,EAAsG;AACpGhB,UAAAA,eAAe,CAACb,CAAD,CAAf;AACD,SAFD,MAEO;AACLG,UAAAA,gBAAgB,CAACH,CAAD,CAAhB;AACD;;AACD,8BAASuB,eAAT,EAA0B,SAA1B,EAAqCvB,CAArC,EAAwCyB,UAAxC;AACD;AARgE,KAAtC;AAAA,GAA7B;;AAWA,MAAMK,WAAW,GAAG,mCAAelE,KAAf,CAApB;AACA,MAAMmE,cAAc,GAAG,sCAAkBpE,QAAQ,CAACqE,YAA3B,EAAyCpE,KAAzC,CAAvB;AACA,MAAMqE,OAAO,gBACX,oBAAC,WAAD,EACMpC,WAAW,CAAC,MAAD;AACbzB,IAAAA,SAAS,EAAEgD,OAAO,CAACc,IADN;AAEb9C,IAAAA,EAAE,EAAFA,EAFa;AAGbH,IAAAA,QAAQ,EAARA;AAHa,KAIVkD,wBAAiBC,aAAjB,CAA+B;AAAEC,IAAAA,WAAW,EAAE,CAAClE,QAAD;AAAf,GAA/B,CAJU,EAKV4D,cALU,EADjB,EASG,0BAAc5D,QAAd,IACGA,QADH,GAEGmE,qBAAUC,MAAV,CAAiBhE,KAAjB,EAAwB;AACtBiE,IAAAA,YAAY,EAAE;AAAA,aACZ3C,WAAW,CAAC,OAAD;AACTmB,QAAAA,UAAU,EAAE3B,cADH;AAEToD,QAAAA,EAAE,EAAEpD,cAAc,GAAG,MAAH,GAAY,GAFrB;AAGTX,QAAAA,KAAK,EAALA,KAHS;AAITI,QAAAA,QAAQ,EAARA,QAJS;AAKTL,QAAAA,QAAQ,EAARA,QALS;AAMTE,QAAAA,KAAK,EAALA,KANS;AAOTM,QAAAA,QAAQ,EAARA,QAPS;AAQTC,QAAAA,UAAU,EAAVA;AARS,SASLG,cAAc,IAAI,CAACL,gBAAnB,IAAuC;AAAEE,QAAAA,UAAU,EAAE;AAAd,OATlC,EAULF,gBAAgB,IAAI;AAAEG,QAAAA,aAAa,EAAbA;AAAF,OAVf;AAWTH,QAAAA,gBAAgB,EAAhBA,gBAXS;AAYTD,QAAAA,kBAAkB,EAAlBA;AAZS,SADC;AAAA,KADQ;AAgBtB2D,IAAAA,MAAM,EAAElE,eAhBc;AAiBtBmE,IAAAA,aAAa,EAAErB;AAjBO,GAAxB,CAXN,CADF;AAkCA,MAAMsB,cAAc,GAAGvE,UAAU,gBAAG,oBAAC,sBAAD;AAAK,IAAA,QAAQ,EAAEA;AAAf,KAA4B4D,OAA5B,CAAH,GAAgDA,OAAjF;AACAhE,EAAAA,MAAM;AAEN,SAAO2E,cAAP;AACD,CAzKM;;;AA2KPjF,QAAQ,CAACG,WAAT,GAAuB,UAAvB;AAEAH,QAAQ,CAACkF,SAAT,qBACKC,uBAAgBC,YAAhB,CAA6B;AAC9BC,EAAAA,OAAO,EAAE;AADqB,CAA7B,CADL;AAIE3E,EAAAA,UAAU,EAAE4E,eAAe,CAACC,GAJ9B;AAKE9D,EAAAA,EAAE,EAAE+D,SAAS,CAACC,MAAV,CAAiBC,UALvB;AAME1E,EAAAA,KAAK,EAAEwE,SAAS,CAACG,MANnB;AAOEC,EAAAA,KAAK,EAAEN,eAAe,CAACO,mBAPzB;AAQE9E,EAAAA,KAAK,EAAEyE,SAAS,CAACG,MARnB;AASE3D,EAAAA,iBAAiB,EAAEwD,SAAS,CAACM,IAT/B;AAUEhE,EAAAA,aAAa,EAAE0D,SAAS,CAACM,IAV3B;AAWE7D,EAAAA,YAAY,EAAEuD,SAAS,CAACM,IAX1B;AAYE/D,EAAAA,gBAAgB,EAAEyD,SAAS,CAACM,IAZ9B;AAaEhF,EAAAA,QAAQ,EAAE0E,SAAS,CAACO,IAbtB;AAcErC,EAAAA,MAAM,EAAE8B,SAAS,CAACC,MAdpB;AAeE5E,EAAAA,eAAe,EAAE2E,SAAS,CAACM,IAf7B;AAgBE3E,EAAAA,QAAQ,EAAEqE,SAAS,CAACG,MAhBtB;AAiBE/E,EAAAA,KAAK,EAAE0E,eAAe,CAACU,aAjBzB;AAkBE5E,EAAAA,kBAAkB,EAAEkE,eAAe,CAACW,yBAlBtC;AAmBE3E,EAAAA,QAAQ,EAAEkE,SAAS,CAACO,IAnBtB;AAoBExE,EAAAA,UAAU,EAAEiE,SAAS,CAACO,IApBxB;AAqBE1E,EAAAA,gBAAgB,EAAEmE,SAAS,CAACO,IArB9B;AAsBEvE,EAAAA,aAAa,EAAEgE,SAAS,CAACO;AAtB3B;AAwBA/F,QAAQ,CAAC6E,YAAT,GAAwB;AACtBtE,EAAAA,aAAa,EAAE2F;AADO,CAAxB;AAGAlG,QAAQ,CAACqE,YAAT,GAAwB8B,MAAM,CAACC,IAAP,CAAYpG,QAAQ,CAACkF,SAArB,CAAxB;AAEAlF,QAAQ,CAAC4E,MAAT,GAAkB,mCAAuB;AACvCyB,EAAAA,SAAS,EAAErG,QAD4B;AAEvCsG,EAAAA,UAAU,EAAE;AAF2B,CAAvB,CAAlB","sourcesContent":["import { Accessibility, treeItemBehavior, TreeItemBehaviorProps } from '@fluentui/accessibility';\nimport {\n  ComponentWithAs,\n  getElementType,\n  useUnhandledProps,\n  useAccessibility,\n  useStyles,\n  useTelemetry,\n  useFluentContext,\n} from '@fluentui/react-bindings';\nimport * as customPropTypes from '@fluentui/react-proptypes';\nimport * as _ from 'lodash';\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\n\nimport { Ref } from '@fluentui/react-component-ref';\n\nimport {\n  childrenExist,\n  createShorthandFactory,\n  commonPropTypes,\n  UIComponentProps,\n  ChildrenComponentProps,\n  rtlTextContainer,\n} from '../../utils';\nimport {\n  ComponentEventHandler,\n  ShorthandRenderFunction,\n  ShorthandValue,\n  ShorthandCollection,\n  FluentComponentStaticProps,\n} from '../../types';\nimport { TreeTitle, TreeTitleProps, treeTitleSlotClassNames } from './TreeTitle';\nimport { BoxProps } from '../Box/Box';\nimport { hasSubtree, TreeContext } from './utils';\n\nexport interface TreeItemProps extends UIComponentProps, ChildrenComponentProps {\n  /** Accessibility behavior if overridden by the user. */\n  accessibility?: Accessibility<TreeItemBehaviorProps>;\n\n  /** Ref for the item DOM element. */\n  contentRef?: React.Ref<HTMLElement>;\n\n  /** Id needed to identify this item inside the Tree. */\n  id: string;\n\n  /** The index of the item among its siblings. Count starts at 1. */\n  index?: number;\n\n  /** Array of props for sub tree. */\n  items?: ShorthandCollection<TreeItemProps>;\n\n  /** Level of the tree/subtree that contains this item. */\n  level?: number;\n\n  /** Called when the item's first child is about to be focused. */\n  onFocusFirstChild?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's parent is about to be focused. */\n  onFocusParent?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when a tree title is clicked. */\n  onTitleClick?: ComponentEventHandler<TreeItemProps>;\n\n  /** Called when the item's siblings are about to be expanded. */\n  onSiblingsExpand?: ComponentEventHandler<TreeItemProps>;\n\n  /** Whether or not the item is in the expanded state. Only makes sense if item has children items. If set to true, item is initialy expanded. */\n  expanded?: boolean;\n\n  /** The id of the parent tree item, if any. */\n  parent?: string;\n\n  /**\n   * A custom render iterator for rendering each tree title.\n   * The default component, props, and children are available for each tree title.\n   *\n   * @param Component - The computed component for this slot.\n   * @param props - The computed props for this slot.\n   * @param children - The computed children for this slot.\n   */\n  renderItemTitle?: ShorthandRenderFunction<TreeTitleProps>;\n\n  /** Size of the tree/subtree that contains this item. */\n  treeSize?: number;\n\n  /** Properties for TreeTitle. */\n  title?: ShorthandValue<TreeTitleProps>;\n\n  /** Whether or not the item can be selectable. */\n  selectable?: boolean;\n\n  /** A state of selection indicator. */\n  selected?: boolean;\n\n  /** A selection indicator icon can be customized. */\n  selectionIndicator?: ShorthandValue<BoxProps>;\n\n  /** Whether or not tree item is part of the selectable parent. */\n  selectableParent?: boolean;\n\n  indeterminate?: boolean;\n}\n\nexport type TreeItemStylesProps = Required<Pick<TreeItemProps, 'level'>>;\nexport const treeItemClassName = 'ui-tree__item';\n\n/**\n * A TreeItem renders an item of a Tree.\n *\n * @accessibility\n * Implements [ARIA TreeView](https://www.w3.org/TR/wai-aria-practices-1.1/#TreeView) design pattern.\n */\nexport const TreeItem: ComponentWithAs<'div', TreeItemProps> & FluentComponentStaticProps<TreeItemProps> = props => {\n  const context = useFluentContext();\n  const { setStart, setEnd } = useTelemetry(TreeItem.displayName, context.telemetry);\n  setStart();\n\n  const {\n    accessibility,\n    children,\n    className,\n    contentRef,\n    design,\n    title,\n    renderItemTitle,\n    expanded,\n    level,\n    index,\n    styles,\n    variables,\n    treeSize,\n    selectionIndicator,\n    selectableParent,\n    selected,\n    selectable,\n    indeterminate,\n    id,\n  } = props;\n\n  const hasSubtreeItem = hasSubtree(props);\n\n  const { onFocusParent, onSiblingsExpand, onFocusFirstChild, onTitleClick } = React.useContext(TreeContext);\n\n  const getA11Props = useAccessibility(accessibility, {\n    actionHandlers: {\n      performClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusParent: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusParent(e);\n      },\n      collapse: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      expand: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleTitleClick(e);\n      },\n      focusFirstChild: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleFocusFirstChild(e);\n      },\n      expandSiblings: e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        handleSiblingsExpand(e);\n      },\n      performSelection: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        handleSelection(e);\n      },\n    },\n    debugName: TreeItem.displayName,\n    mapPropsToBehavior: () => ({\n      expanded,\n      level,\n      index,\n      hasSubtree: hasSubtreeItem,\n      treeSize,\n      selected,\n      selectable,\n      selectableParent,\n    }),\n    rtl: context.rtl,\n  });\n  const { classes } = useStyles<TreeItemStylesProps>(TreeItem.displayName, {\n    className: treeItemClassName,\n    mapPropsToStyles: () => ({\n      level,\n    }),\n    mapPropsToInlineStyles: () => ({ className, design, styles, variables }),\n    rtl: context.rtl,\n  });\n\n  const handleSelection = e => {\n    onTitleClick(e, props, true);\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n\n  const handleTitleClick = e => {\n    onTitleClick(e, props);\n    _.invoke(props, 'onTitleClick', e, props);\n  };\n  const handleFocusFirstChild = e => {\n    _.invoke(props, 'onFocusFirstChild', e, props);\n    onFocusFirstChild(props.id);\n  };\n  const handleFocusParent = e => {\n    _.invoke(props, 'onFocusParent', e, props);\n    onFocusParent(props.parent);\n  };\n  const handleSiblingsExpand = e => {\n    _.invoke(props, 'onSiblingsExpand', e, props);\n    onSiblingsExpand(e, props);\n  };\n  const handleTitleOverrides = (predefinedProps: TreeTitleProps) => ({\n    onClick: (e: React.SyntheticEvent, titleProps) => {\n      if (selectable && (e?.target as HTMLElement)?.className?.includes(treeTitleSlotClassNames.indicator)) {\n        handleSelection(e);\n      } else {\n        handleTitleClick(e);\n      }\n      _.invoke(predefinedProps, 'onClick', e, titleProps);\n    },\n  });\n\n  const ElementType = getElementType(props);\n  const unhandledProps = useUnhandledProps(TreeItem.handledProps, props);\n  const element = (\n    <ElementType\n      {...getA11Props('root', {\n        className: classes.root,\n        id,\n        selected,\n        ...rtlTextContainer.getAttributes({ forElements: [children] }),\n        ...unhandledProps,\n      })}\n    >\n      {childrenExist(children)\n        ? children\n        : TreeTitle.create(title, {\n            defaultProps: () =>\n              getA11Props('title', {\n                hasSubtree: hasSubtreeItem,\n                as: hasSubtreeItem ? 'span' : 'a',\n                level,\n                treeSize,\n                expanded,\n                index,\n                selected,\n                selectable,\n                ...(hasSubtreeItem && !selectableParent && { selectable: false }),\n                ...(selectableParent && { indeterminate }),\n                selectableParent,\n                selectionIndicator,\n              }),\n            render: renderItemTitle,\n            overrideProps: handleTitleOverrides,\n          })}\n    </ElementType>\n  );\n\n  const elementWithRef = contentRef ? <Ref innerRef={contentRef}>{element}</Ref> : element;\n  setEnd();\n\n  return elementWithRef;\n};\n\nTreeItem.displayName = 'TreeItem';\n\nTreeItem.propTypes = {\n  ...commonPropTypes.createCommon({\n    content: false,\n  }),\n  contentRef: customPropTypes.ref,\n  id: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  items: customPropTypes.collectionShorthand,\n  level: PropTypes.number,\n  onFocusFirstChild: PropTypes.func,\n  onFocusParent: PropTypes.func,\n  onTitleClick: PropTypes.func,\n  onSiblingsExpand: PropTypes.func,\n  expanded: PropTypes.bool,\n  parent: PropTypes.string,\n  renderItemTitle: PropTypes.func,\n  treeSize: PropTypes.number,\n  title: customPropTypes.itemShorthand,\n  selectionIndicator: customPropTypes.shorthandAllowingChildren,\n  selected: PropTypes.bool,\n  selectable: PropTypes.bool,\n  selectableParent: PropTypes.bool,\n  indeterminate: PropTypes.bool,\n};\nTreeItem.defaultProps = {\n  accessibility: treeItemBehavior,\n};\nTreeItem.handledProps = Object.keys(TreeItem.propTypes) as any;\n\nTreeItem.create = createShorthandFactory({\n  Component: TreeItem,\n  mappedProp: 'title',\n});\n"],"file":"TreeItem.js"}