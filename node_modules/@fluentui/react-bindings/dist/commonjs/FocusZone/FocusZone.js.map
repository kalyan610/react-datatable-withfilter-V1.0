{"version":3,"sources":["FocusZone/FocusZone.tsx"],"names":["TABINDEX","NO_VERTICAL_WRAP","NO_HORIZONTAL_WRAP","LARGE_DISTANCE_FROM_CENTER","LARGE_NEGATIVE_DISTANCE_FROM_CENTER","_allInstances","_outerZones","Set","ALLOWED_INPUT_TYPES","ALLOW_VIRTUAL_ELEMENTS","_onKeyDownCapture","ev","keyboardKey","Tab","forEach","zone","updateTabIndexes","FocusZone","getOuterZones","size","props","_root","current","_id","_activeElement","_lastIndexPath","_isParked","_parkedTabIndex","_defaultFocusElement","_focusAlignment","_isInnerZone","_processingTabKey","windowElement","setRef","elem","ReactDOM","findDOMNode","_onBlur","setParkedFocus","_onFocus","onActiveElementChanged","stopFocusPropagation","shouldFocusInnerElementWhenReceivedFocus","defaultTabbableElement","newActiveElement","isImmediateDescendant","isImmediateDescendantOfZone","target","parentElement","maybeElementToFocus","focus","setFocusAlignment","stopPropagation","_onMouseDown","disabled","path","push","length","pop","setActiveElement","_onKeyDown","direction","shouldEnterInnerZone","pagingSupportDisabled","undefined","doc","onKeyDown","activeElement","isDefaultPrevented","innerZone","getFirstInnerZone","focusElement","firstChild","altKey","SpacebarKey","tryInvokeClickForFocusable","ArrowLeft","FocusZoneDirection","vertical","preventDefaultWhenHandled","moveFocusLeft","ArrowRight","moveFocusRight","ArrowUp","horizontal","moveFocusUp","ArrowDown","moveFocusDown","PageDown","moveFocusPaging","PageUp","handleTabKey","FocusZoneTabbableElements","all","inputOnly","isElementInput","focusChanged","shouldWrapFocus","shiftKey","tabWithDirection","isRtl","shouldResetActiveElementWhenTabFromZone","Home","isContentEditableElement","shouldInputLoseFocus","End","lastChild","Enter","preventDefault","getHorizontalDistanceFromCenter","isForward","activeRect","targetRect","leftAlignment","left","targetRectTop","Math","floor","top","activeRectBottom","bottom","targetRectBottom","activeRectTop","isValidCandidateOnpagingDown","isValidCandidateOnpagingUp","width","abs","componentDidMount","body","nodeType","add","addEventListener","getDocument","querySelector","shouldFocusOnMount","componentDidUpdate","preventFocusRestoration","elementToFocus","componentWillUnmount","delete","removeEventListener","render","className","ElementType","unhandledProps","propTypes","evaluateFocusBeforeRender","children","forceIntoFirstElement","getAttribute","IS_FOCUSABLE_ATTRIBUTE","ownerZoneElement","getOwnerZone","ownerZone","FOCUSZONE_ID_ATTRIBUTE","focusLast","element","shouldReceiveFocus","focusedElement","shouldRestoreFocus","isParked","allowFocusRoot","setAttribute","removeAttribute","forceAlignemnt","previousActiveElement","tabIndex","targetElement","shouldRaiseClicks","tagName","IS_ENTER_DISABLED_ATTRIBUTE","forRootElement","rootElement","child","firstElementChild","match","nextElementSibling","moveFocus","getDistanceFromCenter","useDefaultWrap","candidateDistance","candidateElement","changedFocus","isBidirectional","bidirectional","getBoundingClientRect","elementDistance","isCircularNavigation","lastElementChild","targetTop","distance","shouldWrap","topBottomComparison","parseFloat","toFixed","right","scrollableParent","targetBottom","pagesize","clientHeight","isElementPassedPageSizeOnPagingDown","isElementPassedPageSizeOnPagingUp","isHorizontal","isVertical","rect","height","onElement","childNodes","childIndex","toLowerCase","type","indexOf","selectionStart","selectionEnd","isRangeSelected","inputValue","value","isReadonly","readOnly","shouldInputLoseFocusOnArrowKey","noWrapDataAttribute","checkForNoWrap","React","Component","PropTypes","string","number","func","bool","as","elementType","onFocus","defaultProps","displayName"],"mappings":"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","sourcesContent":["import {\n  FocusZoneDirection,\n  FocusZoneTabbableElements,\n  IS_ENTER_DISABLED_ATTRIBUTE,\n  IS_FOCUSABLE_ATTRIBUTE,\n} from '@fluentui/accessibility';\nimport * as React from 'react';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\nimport { getCode, keyboardKey, SpacebarKey } from '@fluentui/keyboard-key';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\n\nimport {\n  elementContains,\n  findScrollableParent,\n  getDocument,\n  getParent,\n  getWindow,\n  raiseClick,\n  shouldWrapFocus,\n} from '@uifabric/utilities';\n\nimport { getElementType } from '../utils/getElementType';\nimport { getUnhandledProps } from '../utils/getUnhandledProps';\nimport { FocusZoneProps, IFocusZone } from './FocusZone.types';\nimport {\n  getNextElement,\n  getPreviousElement,\n  isElementFocusZone,\n  isElementFocusSubZone,\n  isElementTabbable,\n  getElementIndexPath,\n  getFocusableByIndexPath,\n  FOCUSZONE_ID_ATTRIBUTE,\n} from './focusUtilities';\n\nconst TABINDEX = 'tabindex';\nconst NO_VERTICAL_WRAP = 'data-no-vertical-wrap';\nconst NO_HORIZONTAL_WRAP = 'data-no-horizontal-wrap';\nconst LARGE_DISTANCE_FROM_CENTER = 999999999;\nconst LARGE_NEGATIVE_DISTANCE_FROM_CENTER = -999999999;\n\nconst _allInstances: {\n  [key: string]: FocusZone;\n} = {};\n\nconst _outerZones: Set<FocusZone> = new Set();\n\ninterface Point {\n  left: number;\n  top: number;\n}\nconst ALLOWED_INPUT_TYPES = ['text', 'number', 'password', 'email', 'tel', 'url', 'search'];\n\nconst ALLOW_VIRTUAL_ELEMENTS = false;\n\n/**\n * Handle global tab presses so that we can patch tabindexes on the fly.\n */\nfunction _onKeyDownCapture(ev: KeyboardEvent) {\n  if (getCode(ev) === keyboardKey.Tab) {\n    _outerZones.forEach(zone => zone.updateTabIndexes());\n  }\n}\n\nexport class FocusZone extends React.Component<FocusZoneProps> implements IFocusZone {\n  static propTypes = {\n    className: PropTypes.string,\n    direction: PropTypes.number,\n    defaultTabbableElement: PropTypes.func,\n    shouldFocusOnMount: PropTypes.bool,\n    shouldResetActiveElementWhenTabFromZone: PropTypes.bool,\n    shouldRaiseClicks: PropTypes.bool,\n    shouldFocusInnerElementWhenReceivedFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    as: PropTypes.elementType as PropTypes.Requireable<React.ElementType>,\n    isCircularNavigation: PropTypes.bool,\n    shouldEnterInnerZone: PropTypes.func,\n    onActiveElementChanged: PropTypes.func,\n    shouldReceiveFocus: PropTypes.func,\n    handleTabKey: PropTypes.number,\n    shouldInputLoseFocusOnArrowKey: PropTypes.func,\n    stopFocusPropagation: PropTypes.bool,\n    onFocus: PropTypes.func,\n    preventDefaultWhenHandled: PropTypes.bool,\n    isRtl: PropTypes.bool,\n    preventFocusRestoration: PropTypes.bool,\n    pagingSupportDisabled: PropTypes.bool,\n  };\n\n  static defaultProps: FocusZoneProps = {\n    isCircularNavigation: false,\n    direction: FocusZoneDirection.bidirectional,\n    as: 'div',\n    preventDefaultWhenHandled: true,\n    shouldRaiseClicks: false,\n  };\n\n  static displayName = 'FocusZone';\n  static className = 'ms-FocusZone';\n\n  /** Used for testing purposes only. */\n  static getOuterZones(): number {\n    return _outerZones.size;\n  }\n\n  _root: { current: HTMLElement | null } = { current: null };\n  _id: string;\n  /** The most recently focused child element. */\n  _activeElement: HTMLElement | null;\n\n  /**\n   * The index path to the last focused child element.\n   */\n  _lastIndexPath: number[] | undefined;\n\n  /**\n   * Flag to define when we've intentionally parked focus on the root element to temporarily\n   * hold focus until items appear within the zone.\n   */\n  _isParked: boolean = false;\n  _parkedTabIndex: string | null | undefined;\n\n  /** The child element with tabindex=0. */\n  _defaultFocusElement: HTMLElement | null;\n  _focusAlignment: Point;\n  _isInnerZone: boolean;\n\n  /** Used to allow us to move to next focusable element even when we're focusing on a input element when pressing tab */\n  _processingTabKey: boolean;\n\n  windowElement: Window | null;\n\n  constructor(props: FocusZoneProps) {\n    super(props);\n\n    this._id = _.uniqueId('FocusZone');\n\n    this._focusAlignment = {\n      left: 0,\n      top: 0,\n    };\n\n    this._processingTabKey = false;\n  }\n\n  componentDidMount(): void {\n    _allInstances[this._id] = this;\n\n    this.setRef(this); // called here to support functional components, we only need HTMLElement ref anyway\n\n    if (!this._root.current) {\n      return;\n    }\n\n    // @ts-ignore\n    this.windowElement = getWindow(this._root.current);\n    let parentElement = getParent(this._root.current, ALLOW_VIRTUAL_ELEMENTS);\n    const doc = getDocument(this._root.current);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== doc.body && parentElement.nodeType === 1) {\n      if (isElementFocusZone(parentElement)) {\n        this._isInnerZone = true;\n        break;\n      }\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    if (!this._isInnerZone) {\n      _outerZones.add(this);\n\n      if (this.windowElement && _outerZones.size === 1) {\n        this.windowElement.addEventListener('keydown', _onKeyDownCapture, true);\n      }\n    }\n\n    this._root.current.addEventListener('blur', this._onBlur, true);\n\n    // Assign initial tab indexes so that we can set initial focus as appropriate.\n    this.updateTabIndexes();\n\n    if (this.props.defaultTabbableElement && typeof this.props.defaultTabbableElement === 'string') {\n      this._activeElement = this.getDocument().querySelector(this.props.defaultTabbableElement) as HTMLElement;\n    }\n\n    if (this.props.shouldFocusOnMount) {\n      this.focus();\n    }\n  }\n\n  componentDidUpdate(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (\n      doc &&\n      this._lastIndexPath &&\n      (doc.activeElement === doc.body ||\n        doc.activeElement === null ||\n        (!this.props.preventFocusRestoration && doc.activeElement === this._root.current))\n    ) {\n      // The element has been removed after the render, attempt to restore focus.\n      const elementToFocus = getFocusableByIndexPath(this._root.current as HTMLElement, this._lastIndexPath);\n\n      if (elementToFocus) {\n        this.setActiveElement(elementToFocus, true);\n        elementToFocus.focus();\n        this.setParkedFocus(false);\n      } else {\n        // We had a focus path to restore, but now that path is unresolvable. Park focus\n        // on the container until we can try again.\n        this.setParkedFocus(true);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    delete _allInstances[this._id];\n\n    if (!this._isInnerZone) {\n      _outerZones.delete(this);\n\n      if (this.windowElement && _outerZones.size === 0) {\n        this.windowElement.removeEventListener('keydown', _onKeyDownCapture, true);\n      }\n    }\n\n    if (this._root.current) {\n      this._root.current.removeEventListener('blur', this._onBlur, true);\n    }\n\n    this._activeElement = null;\n    this._defaultFocusElement = null;\n  }\n\n  render() {\n    const { className } = this.props;\n\n    const ElementType = getElementType(this.props);\n    const unhandledProps = getUnhandledProps(_.keys(FocusZone.propTypes) as any, this.props);\n\n    // Note, right before rendering/reconciling proceeds, we need to record if focus\n    // was in the zone before the update. This helper will track this and, if focus\n    // was actually in the zone, what the index path to the element is at this time.\n    // Then, later in componentDidUpdate, we can evaluate if we need to restore it in\n    // the case the element was removed.\n    this.evaluateFocusBeforeRender();\n\n    return (\n      <ElementType\n        {...unhandledProps}\n        className={cx(FocusZone.className, className)}\n        data-focuszone-id={this._id}\n        onKeyDown={this._onKeyDown}\n        onFocus={this._onFocus}\n        onMouseDownCapture={this._onMouseDown}\n      >\n        {this.props.children}\n      </ElementType>\n    );\n  }\n\n  /**\n   * Sets focus to the first tabbable item in the zone.\n   * @param forceIntoFirstElement - If true, focus will be forced into the first element, even if focus is already in the focus zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focus(forceIntoFirstElement: boolean = false): boolean {\n    if (this._root.current) {\n      if (\n        !forceIntoFirstElement &&\n        this._root.current.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        this._isInnerZone\n      ) {\n        const ownerZoneElement = this.getOwnerZone(this._root.current) as HTMLElement;\n\n        if (ownerZoneElement !== this._root.current) {\n          const ownerZone = _allInstances[ownerZoneElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n\n          return !!ownerZone && ownerZone.focusElement(this._root.current);\n        }\n\n        return false;\n      }\n      if (\n        !forceIntoFirstElement &&\n        this._activeElement &&\n        elementContains(this._root.current, this._activeElement, ALLOW_VIRTUAL_ELEMENTS) &&\n        isElementTabbable(this._activeElement)\n      ) {\n        this._activeElement.focus();\n        return true;\n      }\n\n      const firstChild = this._root.current.firstChild as HTMLElement;\n\n      return this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement);\n    }\n    return false;\n  }\n\n  /**\n   * Sets focus to the last tabbable item in the zone.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusLast(): boolean {\n    if (this._root.current) {\n      const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n\n      return this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement);\n    }\n\n    return false;\n  }\n\n  /**\n   * Sets focus to a specific child element within the zone. This can be used in conjunction with\n   * shouldReceiveFocus to create delayed focus scenarios (like animate the scroll position to the correct\n   * location and then focus.)\n   * @param element - The child element within the zone to focus.\n   * @returns True if focus could be set to an active element, false if no operation was taken.\n   */\n  focusElement(element: HTMLElement): boolean {\n    const { shouldReceiveFocus } = this.props;\n\n    if (shouldReceiveFocus && !shouldReceiveFocus(element)) {\n      return false;\n    }\n\n    if (element) {\n      this.setActiveElement(element);\n      if (this._activeElement) {\n        this._activeElement.focus();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  setRef = (elem: React.ReactInstance): void => {\n    // findDOMNode needed to get correct DOM ref with react-hot-loader, see https://github.com/gaearon/react-hot-loader/issues/964\n    this._root.current = ReactDOM.findDOMNode(elem) as HTMLElement;\n  };\n\n  // Record if focus was in the zone, what the index path to the element is at this time.\n  evaluateFocusBeforeRender(): void {\n    if (!this._root.current) {\n      return;\n    }\n    const doc = getDocument(this._root.current);\n\n    if (!doc) {\n      return;\n    }\n\n    const focusedElement = doc.activeElement as HTMLElement;\n\n    // Only update the index path if we are not parked on the root.\n    if (focusedElement !== this._root.current) {\n      const shouldRestoreFocus = elementContains(this._root.current, focusedElement, ALLOW_VIRTUAL_ELEMENTS);\n\n      this._lastIndexPath = shouldRestoreFocus\n        ? getElementIndexPath(this._root.current as HTMLElement, doc.activeElement as HTMLElement)\n        : undefined;\n    }\n  }\n\n  /**\n   * When focus is in the zone at render time but then all focusable elements are removed,\n   * we \"park\" focus temporarily on the root. Once we update with focusable children, we restore\n   * focus to the closest path from previous. If the user tabs away from the parked container,\n   * we restore focusability to the pre-parked state.\n   */\n  setParkedFocus(isParked: boolean): void {\n    if (this._root.current && this._isParked !== isParked) {\n      this._isParked = isParked;\n\n      if (isParked) {\n        if (!this.props.allowFocusRoot) {\n          this._parkedTabIndex = this._root.current.getAttribute('tabindex');\n          this._root.current.setAttribute('tabindex', '-1');\n        }\n        this._root.current.focus();\n      } else if (!this.props.allowFocusRoot) {\n        if (this._parkedTabIndex) {\n          this._root.current.setAttribute('tabindex', this._parkedTabIndex);\n          this._parkedTabIndex = undefined;\n        } else {\n          this._root.current.removeAttribute('tabindex');\n        }\n      }\n    }\n  }\n\n  _onBlur = () => {\n    this.setParkedFocus(false);\n  };\n\n  _onFocus = (ev: React.FocusEvent<HTMLElement>): void => {\n    const {\n      onActiveElementChanged,\n      stopFocusPropagation,\n      shouldFocusInnerElementWhenReceivedFocus,\n      defaultTabbableElement,\n    } = this.props;\n\n    let newActiveElement: HTMLElement | null | undefined;\n    const isImmediateDescendant = this.isImmediateDescendantOfZone(ev.target as HTMLElement);\n\n    if (isImmediateDescendant) {\n      newActiveElement = ev.target as HTMLElement;\n    } else {\n      let parentElement = ev.target as HTMLElement;\n\n      while (parentElement && parentElement !== this._root.current) {\n        if (isElementTabbable(parentElement) && this.isImmediateDescendantOfZone(parentElement)) {\n          newActiveElement = parentElement;\n          break;\n        }\n        parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n      }\n    }\n\n    // If an inner focusable element should be focused when FocusZone container receives focus\n    if (shouldFocusInnerElementWhenReceivedFocus && ev.target === this._root.current) {\n      const maybeElementToFocus =\n        defaultTabbableElement &&\n        typeof defaultTabbableElement === 'function' &&\n        defaultTabbableElement(this._root.current);\n\n      // try to focus defaultTabbable element\n      if (maybeElementToFocus && isElementTabbable(maybeElementToFocus)) {\n        newActiveElement = maybeElementToFocus;\n        maybeElementToFocus.focus();\n      } else {\n        // force focus on first focusable element\n        this.focus(true);\n        if (this._activeElement) {\n          // set to null as new active element was handled in method above\n\n          newActiveElement = null;\n        }\n      }\n    }\n\n    if (newActiveElement && newActiveElement !== this._activeElement) {\n      this._activeElement = newActiveElement;\n\n      if (isImmediateDescendant) {\n        this.setFocusAlignment(this._activeElement);\n        this.updateTabIndexes();\n      }\n    }\n\n    if (onActiveElementChanged) {\n      onActiveElementChanged(this._activeElement as HTMLElement, ev);\n    }\n\n    if (stopFocusPropagation) {\n      ev.stopPropagation();\n    }\n\n    _.invoke(this.props, 'onFocus', ev);\n  };\n\n  _onMouseDown = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { disabled } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    let target = ev.target as HTMLElement;\n    const path: HTMLElement[] = [];\n\n    while (target && target !== this._root.current) {\n      path.push(target);\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    }\n\n    while (path.length) {\n      target = path.pop() as HTMLElement;\n\n      if (target && isElementTabbable(target)) {\n        this.setActiveElement(target, true);\n      }\n\n      if (isElementFocusZone(target)) {\n        // Stop here since the focus zone will take care of its own children.\n        break;\n      }\n    }\n  };\n\n  setActiveElement(element: HTMLElement, forceAlignemnt?: boolean): void {\n    const previousActiveElement = this._activeElement;\n\n    this._activeElement = element;\n\n    if (previousActiveElement) {\n      if (isElementFocusZone(previousActiveElement)) {\n        this.updateTabIndexes(previousActiveElement);\n      }\n\n      previousActiveElement.tabIndex = -1;\n    }\n\n    if (this._activeElement) {\n      if (!this._focusAlignment || forceAlignemnt) {\n        this.setFocusAlignment(element, true, true);\n      }\n\n      this._activeElement.tabIndex = 0;\n    }\n  }\n\n  preventDefaultWhenHandled(ev: React.KeyboardEvent<HTMLElement>): void {\n    this.props.preventDefaultWhenHandled && ev.preventDefault();\n  }\n\n  /**\n   * Handle the keystrokes.\n   */\n  _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean | undefined => {\n    const { direction, disabled, shouldEnterInnerZone, pagingSupportDisabled } = this.props;\n\n    if (disabled) {\n      return undefined;\n    }\n\n    const doc = getDocument(this._root.current);\n\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(ev);\n    }\n\n    // @ts-ignore\n    if (doc.activeElement === this._root.current && this._isInnerZone) {\n      // If this element has focus, it is being controlled by a parent.\n      // Ignore the keystroke.\n      return undefined;\n    }\n\n    // If the default has been prevented, do not process keyboard events.\n    if (ev.isDefaultPrevented()) {\n      return undefined;\n    }\n\n    if (\n      shouldEnterInnerZone &&\n      shouldEnterInnerZone(ev) &&\n      this.isImmediateDescendantOfZone(ev.target as HTMLElement)\n    ) {\n      // Try to focus\n      const innerZone = this.getFirstInnerZone();\n\n      if (innerZone) {\n        if (!innerZone.focus(true)) {\n          return undefined;\n        }\n      } else if (isElementFocusSubZone(ev.target as HTMLElement)) {\n        if (\n          !this.focusElement(\n            getNextElement(\n              ev.target as HTMLElement,\n              (ev.target as HTMLElement).firstChild as HTMLElement,\n              true,\n            ) as HTMLElement,\n          )\n        ) {\n          return undefined;\n        }\n      } else {\n        return undefined;\n      }\n    } else if (ev.altKey) {\n      return undefined;\n    } else {\n      switch (getCode(ev)) {\n        case SpacebarKey:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.ArrowLeft:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusLeft()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowRight:\n          if (direction !== FocusZoneDirection.vertical) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusRight()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowUp:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusUp()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.ArrowDown:\n          if (direction !== FocusZoneDirection.horizontal) {\n            this.preventDefaultWhenHandled(ev);\n            if (this.moveFocusDown()) {\n              break;\n            }\n          }\n          return undefined;\n\n        case keyboardKey.PageDown:\n          if (!pagingSupportDisabled && this.moveFocusPaging(true)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.PageUp:\n          if (!pagingSupportDisabled && this.moveFocusPaging(false)) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Tab:\n          if (\n            this.props.handleTabKey === FocusZoneTabbableElements.all ||\n            (this.props.handleTabKey === FocusZoneTabbableElements.inputOnly &&\n              this.isElementInput(ev.target as HTMLElement))\n          ) {\n            let focusChanged = false;\n            this._processingTabKey = true;\n            if (\n              direction === FocusZoneDirection.vertical ||\n              !this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP)\n            ) {\n              focusChanged = ev.shiftKey ? this.moveFocusUp() : this.moveFocusDown();\n            } else {\n              const tabWithDirection = this.props.isRtl ? !ev.shiftKey : ev.shiftKey;\n              focusChanged = tabWithDirection ? this.moveFocusLeft() : this.moveFocusRight();\n            }\n            this._processingTabKey = false;\n            if (focusChanged) {\n              break;\n            }\n          } else if (this.props.shouldResetActiveElementWhenTabFromZone) {\n            this._activeElement = null;\n          }\n          return undefined;\n\n        case keyboardKey.Home:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n          const firstChild = this._root.current && (this._root.current.firstChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            firstChild &&\n            this.focusElement(getNextElement(this._root.current, firstChild, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.End:\n          if (\n            this.isContentEditableElement(ev.target as HTMLElement) ||\n            (this.isElementInput(ev.target as HTMLElement) &&\n              !this.shouldInputLoseFocus(ev.target as HTMLInputElement, false))\n          ) {\n            return false;\n          }\n\n          const lastChild = this._root.current && (this._root.current.lastChild as HTMLElement | null);\n          if (\n            this._root.current &&\n            this.focusElement(getPreviousElement(this._root.current, lastChild, true, true, true) as HTMLElement)\n          ) {\n            break;\n          }\n          return undefined;\n\n        case keyboardKey.Enter:\n          // @ts-ignore\n          if (this.tryInvokeClickForFocusable(ev.target as HTMLElement)) {\n            break;\n          }\n          return undefined;\n\n        default:\n          return undefined;\n      }\n    }\n\n    ev.preventDefault();\n    ev.stopPropagation();\n\n    return undefined;\n  };\n\n  /**\n   * Walk up the dom try to find a focusable element.\n   */\n  tryInvokeClickForFocusable(targetElement: HTMLElement): boolean {\n    let target = targetElement;\n\n    if (target === this._root.current || !this.props.shouldRaiseClicks) {\n      return false;\n    }\n\n    do {\n      if (\n        target.tagName === 'BUTTON' ||\n        target.tagName === 'A' ||\n        target.tagName === 'INPUT' ||\n        target.tagName === 'TEXTAREA'\n      ) {\n        return false;\n      }\n\n      if (\n        this.isImmediateDescendantOfZone(target) &&\n        target.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true' &&\n        target.getAttribute(IS_ENTER_DISABLED_ATTRIBUTE) !== 'true'\n      ) {\n        raiseClick(target);\n        return true;\n      }\n\n      target = getParent(target, ALLOW_VIRTUAL_ELEMENTS) as HTMLElement;\n    } while (target !== this._root.current);\n\n    return false;\n  }\n\n  /**\n   * Traverse to find first child zone.\n   */\n  getFirstInnerZone(forRootElement?: HTMLElement | null): FocusZone | null {\n    const rootElement = forRootElement || this._activeElement || this._root.current;\n\n    if (!rootElement) {\n      return null;\n    }\n\n    if (isElementFocusZone(rootElement)) {\n      return _allInstances[rootElement.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n    }\n\n    let child = rootElement.firstElementChild as HTMLElement | null;\n\n    while (child) {\n      if (isElementFocusZone(child)) {\n        return _allInstances[child.getAttribute(FOCUSZONE_ID_ATTRIBUTE) as string];\n      }\n      const match = this.getFirstInnerZone(child);\n\n      if (match) {\n        return match;\n      }\n\n      child = child.nextElementSibling as HTMLElement | null;\n    }\n\n    return null;\n  }\n\n  moveFocus(\n    isForward: boolean,\n    getDistanceFromCenter: (activeRect: ClientRect, targetRect: ClientRect) => number,\n    // @ts-ignore\n    ev?: Event,\n    useDefaultWrap: boolean = true,\n  ): boolean {\n    let element = this._activeElement;\n    let candidateDistance = -1;\n    let candidateElement: HTMLElement | undefined = undefined;\n    let changedFocus = false;\n    const isBidirectional = this.props.direction === FocusZoneDirection.bidirectional;\n\n    if (!element || !this._root.current) {\n      return false;\n    }\n\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n\n    const activeRect = isBidirectional ? element.getBoundingClientRect() : null;\n\n    do {\n      element = (isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element)) as HTMLElement;\n\n      if (isBidirectional) {\n        if (element) {\n          const targetRect = element.getBoundingClientRect();\n          const elementDistance = getDistanceFromCenter(activeRect as ClientRect, targetRect);\n\n          if (elementDistance === -1 && candidateDistance === -1) {\n            candidateElement = element;\n            break;\n          }\n\n          if (elementDistance > -1 && (candidateDistance === -1 || elementDistance < candidateDistance)) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n\n          if (candidateDistance >= 0 && elementDistance < 0) {\n            break;\n          }\n        }\n      } else {\n        candidateElement = element;\n        break;\n      }\n    } while (element);\n\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n\n    return changedFocus;\n  }\n\n  moveFocusDown(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(true, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n\n        if (targetRectTop < activeRectBottom) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectTop >= activeRectBottom) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusUp(): boolean {\n    let targetTop = -1;\n    const leftAlignment = this._focusAlignment.left;\n\n    if (\n      this.moveFocus(false, (activeRect: ClientRect, targetRect: ClientRect) => {\n        let distance = -1;\n        // ClientRect values can be floats that differ by very small fractions of a decimal.\n        // If the difference between top and bottom are within a pixel then we should treat\n        // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n        // but without Math.Floor they will be handled incorrectly.\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectTop = Math.floor(activeRect.top);\n\n        if (targetRectBottom > activeRectTop) {\n          if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n            return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n          return LARGE_DISTANCE_FROM_CENTER;\n        }\n\n        if ((targetTop === -1 && targetRectBottom <= activeRectTop) || targetRectTop === targetTop) {\n          targetTop = targetRectTop;\n          if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n            distance = 0;\n          } else {\n            distance = Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n          }\n        }\n\n        return distance;\n      })\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, true);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusLeft(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        // @ts-ignore\n        this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusRight for LTR.\n            // Going left at a leftmost rectangle will go down a line instead of up a line like in LTR.\n            // This is important, because we want to be comparing the top of the target rect\n            // with the bottom of the active rect.\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.right <= activeRect.right &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = activeRect.right - targetRect.right;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  moveFocusRight(): boolean {\n    const shouldWrap = this.shouldWrapFocus(this._activeElement as HTMLElement, NO_HORIZONTAL_WRAP);\n    if (\n      this.moveFocus(\n        !this.props.isRtl,\n        (activeRect: ClientRect, targetRect: ClientRect) => {\n          let distance = -1;\n          let topBottomComparison;\n\n          if (this.props.isRtl) {\n            // When in RTL, this comparison should be the same as the one in moveFocusLeft for LTR.\n            // Going right at a rightmost rectangle will go up a line instead of down a line like in LTR.\n            // This is important, because we want to be comparing the bottom of the target rect\n            // with the top of the active rect.\n            topBottomComparison = parseFloat(targetRect.bottom.toFixed(3)) > parseFloat(activeRect.top.toFixed(3));\n          } else {\n            topBottomComparison = parseFloat(targetRect.top.toFixed(3)) < parseFloat(activeRect.bottom.toFixed(3));\n          }\n\n          if (\n            topBottomComparison &&\n            targetRect.left >= activeRect.left &&\n            this.props.direction !== FocusZoneDirection.vertical\n          ) {\n            distance = targetRect.left - activeRect.left;\n          } else if (!shouldWrap) {\n            distance = LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n          }\n\n          return distance;\n        },\n        undefined /* ev */,\n        shouldWrap,\n      )\n    ) {\n      this.setFocusAlignment(this._activeElement as HTMLElement, true, false);\n      return true;\n    }\n\n    return false;\n  }\n\n  getHorizontalDistanceFromCenter = (isForward: boolean, activeRect: ClientRect, targetRect: ClientRect): number => {\n    const leftAlignment = this._focusAlignment.left;\n    // ClientRect values can be floats that differ by very small fractions of a decimal.\n    // If the difference between top and bottom are within a pixel then we should treat\n    // them as equivalent by using Math.floor. For instance 5.2222 and 5.222221 should be equivalent,\n    // but without Math.Floor they will be handled incorrectly.\n    const targetRectTop = Math.floor(targetRect.top);\n    const activeRectBottom = Math.floor(activeRect.bottom);\n    const targetRectBottom = Math.floor(targetRect.bottom);\n    const activeRectTop = Math.floor(activeRect.top);\n    const isValidCandidateOnpagingDown = isForward && targetRectTop > activeRectBottom;\n    const isValidCandidateOnpagingUp = !isForward && targetRectBottom < activeRectTop;\n\n    if (isValidCandidateOnpagingDown || isValidCandidateOnpagingUp) {\n      if (leftAlignment >= targetRect.left && leftAlignment <= targetRect.left + targetRect.width) {\n        return 0;\n      }\n      return Math.abs(targetRect.left + targetRect.width / 2 - leftAlignment);\n    }\n\n    if (!this.shouldWrapFocus(this._activeElement as HTMLElement, NO_VERTICAL_WRAP)) {\n      return LARGE_NEGATIVE_DISTANCE_FROM_CENTER;\n    }\n    return LARGE_DISTANCE_FROM_CENTER;\n  };\n\n  moveFocusPaging(isForward: boolean, useDefaultWrap: boolean = true): boolean {\n    let element = this._activeElement;\n    if (!element || !this._root.current) {\n      return false;\n    }\n    if (this.isElementInput(element)) {\n      if (!this.shouldInputLoseFocus(element as HTMLInputElement, isForward)) {\n        return false;\n      }\n    }\n    const scrollableParent = findScrollableParent(element);\n    if (!scrollableParent) {\n      return false;\n    }\n    let candidateDistance = -1;\n    let candidateElement = undefined;\n    let targetTop = -1;\n    let targetBottom = -1;\n    const pagesize = (scrollableParent as HTMLElement).clientHeight;\n    const activeRect = element.getBoundingClientRect();\n    do {\n      element = isForward\n        ? getNextElement(this._root.current, element)\n        : getPreviousElement(this._root.current, element);\n      if (element) {\n        const targetRect = element.getBoundingClientRect();\n        const targetRectTop = Math.floor(targetRect.top);\n        const activeRectBottom = Math.floor(activeRect.bottom);\n        const targetRectBottom = Math.floor(targetRect.bottom);\n        const activeRectTop = Math.floor(activeRect.top);\n        const elementDistance = this.getHorizontalDistanceFromCenter(isForward, activeRect, targetRect);\n        const isElementPassedPageSizeOnPagingDown = isForward && targetRectTop > activeRectBottom + pagesize;\n        const isElementPassedPageSizeOnPagingUp = !isForward && targetRectBottom < activeRectTop - pagesize;\n\n        if (isElementPassedPageSizeOnPagingDown || isElementPassedPageSizeOnPagingUp) {\n          break;\n        }\n        if (elementDistance > -1) {\n          // for paging down\n          if (isForward && targetRectTop > targetTop) {\n            targetTop = targetRectTop;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (!isForward && targetRectBottom < targetBottom) {\n            // for paging up\n            targetBottom = targetRectBottom;\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          } else if (candidateDistance === -1 || elementDistance <= candidateDistance) {\n            candidateDistance = elementDistance;\n            candidateElement = element;\n          }\n        }\n      }\n    } while (element);\n\n    let changedFocus = false;\n    // Focus the closest candidate\n    if (candidateElement && candidateElement !== this._activeElement) {\n      changedFocus = true;\n      this.focusElement(candidateElement);\n      this.setFocusAlignment(candidateElement as HTMLElement, false, true);\n    } else if (this.props.isCircularNavigation && useDefaultWrap) {\n      if (isForward) {\n        return this.focusElement(\n          getNextElement(this._root.current, this._root.current.firstElementChild as HTMLElement, true) as HTMLElement,\n        );\n      }\n      return this.focusElement(\n        getPreviousElement(\n          this._root.current,\n          this._root.current.lastElementChild as HTMLElement,\n          true,\n          true,\n          true,\n        ) as HTMLElement,\n      );\n    }\n    return changedFocus;\n  }\n\n  setFocusAlignment(element: HTMLElement, isHorizontal?: boolean, isVertical?: boolean) {\n    if (\n      this.props.direction === FocusZoneDirection.bidirectional &&\n      (!this._focusAlignment || isHorizontal || isVertical)\n    ) {\n      const rect = element.getBoundingClientRect();\n      const left = rect.left + rect.width / 2;\n      const top = rect.top + rect.height / 2;\n\n      if (!this._focusAlignment) {\n        this._focusAlignment = { left, top };\n      }\n\n      if (isHorizontal) {\n        this._focusAlignment.left = left;\n      }\n\n      if (isVertical) {\n        this._focusAlignment.top = top;\n      }\n    }\n  }\n\n  isImmediateDescendantOfZone(element?: HTMLElement): boolean {\n    return this.getOwnerZone(element) === this._root.current;\n  }\n\n  getOwnerZone(element?: HTMLElement): HTMLElement | null {\n    const doc = getDocument(this._root.current);\n    let parentElement = getParent(element as HTMLElement, ALLOW_VIRTUAL_ELEMENTS);\n\n    // @ts-ignore\n    while (parentElement && parentElement !== this._root.current && parentElement !== doc.body) {\n      if (isElementFocusZone(parentElement)) {\n        return parentElement;\n      }\n\n      parentElement = getParent(parentElement, ALLOW_VIRTUAL_ELEMENTS);\n    }\n\n    return this._root.current;\n  }\n\n  updateTabIndexes(onElement?: HTMLElement) {\n    let element = onElement;\n\n    if (\n      !this._activeElement &&\n      this.props.defaultTabbableElement &&\n      typeof this.props.defaultTabbableElement === 'function'\n    ) {\n      this._activeElement = this.props.defaultTabbableElement(this._root.current as HTMLElement);\n    }\n\n    if (!element && this._root.current) {\n      this._defaultFocusElement = null;\n      element = this._root.current;\n      if (this._activeElement && !elementContains(element, this._activeElement, ALLOW_VIRTUAL_ELEMENTS)) {\n        this._activeElement = null;\n      }\n    }\n\n    // If active element changes state to disabled, set it to null.\n    // Otherwise, we lose keyboard accessibility to other elements in focus zone.\n    if (this._activeElement && !isElementTabbable(this._activeElement)) {\n      this._activeElement = null;\n    }\n\n    const childNodes = element && element.children;\n\n    for (let childIndex = 0; childNodes && childIndex < childNodes.length; childIndex++) {\n      const child = childNodes[childIndex] as HTMLElement;\n\n      if (!isElementFocusZone(child)) {\n        // If the item is explicitly set to not be focusable then TABINDEX needs to be set to -1.\n        if (child.getAttribute && child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'false') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n\n        if (isElementTabbable(child)) {\n          if (this.props.disabled) {\n            child.setAttribute(TABINDEX, '-1');\n          } else if (\n            !this._isInnerZone &&\n            ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n          ) {\n            this._defaultFocusElement = child;\n            if (child.getAttribute(TABINDEX) !== '0') {\n              child.setAttribute(TABINDEX, '0');\n            }\n          } else if (child.getAttribute(TABINDEX) !== '-1') {\n            child.setAttribute(TABINDEX, '-1');\n          }\n        } else if (child.tagName === 'svg' && child.getAttribute('focusable') !== 'false') {\n          // Disgusting IE hack. Sad face.\n          child.setAttribute('focusable', 'false');\n        }\n      } else if (child.getAttribute(IS_FOCUSABLE_ATTRIBUTE) === 'true') {\n        if (\n          !this._isInnerZone &&\n          ((!this._activeElement && !this._defaultFocusElement) || this._activeElement === child)\n        ) {\n          this._defaultFocusElement = child;\n          if (child.getAttribute(TABINDEX) !== '0') {\n            child.setAttribute(TABINDEX, '0');\n          }\n        } else if (child.getAttribute(TABINDEX) !== '-1') {\n          child.setAttribute(TABINDEX, '-1');\n        }\n      }\n\n      this.updateTabIndexes(child);\n    }\n  }\n\n  isContentEditableElement(element: HTMLElement): boolean {\n    return element && element.getAttribute('contenteditable') === 'true';\n  }\n\n  isElementInput(element: HTMLElement): boolean {\n    if (\n      element &&\n      element.tagName &&\n      (element.tagName.toLowerCase() === 'input' || element.tagName.toLowerCase() === 'textarea')\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  shouldInputLoseFocus(element: HTMLInputElement, isForward?: boolean) {\n    // If a tab was used, we want to focus on the next element.\n    if (\n      !this._processingTabKey &&\n      element &&\n      element.type &&\n      ALLOWED_INPUT_TYPES.indexOf(element.type.toLowerCase()) > -1\n    ) {\n      const selectionStart = element.selectionStart;\n      const selectionEnd = element.selectionEnd;\n      const isRangeSelected = selectionStart !== selectionEnd;\n      const inputValue = element.value;\n      const isReadonly = element.readOnly;\n\n      // We shouldn't lose focus in the following cases:\n      // 1. There is range selected.\n      // 2. When selection start is larger than 0 and it is backward and not readOnly.\n      // 3. when selection start is not the end of length and it is forward and not readOnly.\n      // 4. We press any of the arrow keys when our handleTabKey isn't none or undefined (only losing focus if we hit tab)\n      // and if shouldInputLoseFocusOnArrowKey is defined, if scenario prefers to not loose the focus which is determined by calling the\n      // callback shouldInputLoseFocusOnArrowKey\n      if (\n        isRangeSelected ||\n        (selectionStart! > 0 && !isForward && !isReadonly) ||\n        (selectionStart !== inputValue.length && isForward && !isReadonly) ||\n        (!!this.props.handleTabKey &&\n          !(this.props.shouldInputLoseFocusOnArrowKey && this.props.shouldInputLoseFocusOnArrowKey(element)))\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  shouldWrapFocus(\n    element: HTMLElement,\n    noWrapDataAttribute: 'data-no-vertical-wrap' | 'data-no-horizontal-wrap',\n  ): boolean {\n    return !!this.props.checkForNoWrap ? shouldWrapFocus(element, noWrapDataAttribute) : true;\n  }\n\n  getDocument(): Document {\n    return getDocument(this._root.current)!;\n  }\n}\n"],"file":"FocusZone.js"}