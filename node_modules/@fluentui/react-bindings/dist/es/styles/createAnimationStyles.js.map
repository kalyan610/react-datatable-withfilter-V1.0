{"version":3,"sources":["styles/createAnimationStyles.tsx"],"names":["createAnimationStyles","animation","theme","animationCSSProp","animations","animationName","name","keyframe","duration","delay","direction","fillMode","iterationCount","playState","timingFunction","keyframeParams","animationThemeKeyframeParams","animationPropKeyframeParams","mergedKeyframeParams","keyframeDefinition","params","animationDelay","animationDirection","animationDuration","animationFillMode","animationIterationCount","animationPlayState","animationTimingFunction"],"mappings":"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","sourcesContent":["import { ICSSInJSStyle, ThemePrepared } from '@fluentui/styles';\nimport { ComponentAnimationProp } from '../styles/types';\n\n// Notice:\n// This temporary lives here, will be remove once `animation` prop will be dropped\nexport const createAnimationStyles = (animation: ComponentAnimationProp, theme: ThemePrepared) => {\n  let animationCSSProp: ICSSInJSStyle = {};\n  const { animations = {} } = theme;\n\n  if (animation) {\n    const animationName = typeof animation === 'string' ? animation : animation.name;\n    if (animations[animationName]) {\n      const {\n        keyframe,\n        duration,\n        delay,\n        direction,\n        fillMode,\n        iterationCount,\n        playState,\n        timingFunction,\n        keyframeParams,\n      } = animations[animationName];\n\n      const animationThemeKeyframeParams = keyframeParams || {};\n      const animationPropKeyframeParams = (animation as any).keyframeParams;\n\n      const mergedKeyframeParams =\n        typeof animation === 'string' || !animationPropKeyframeParams\n          ? animationThemeKeyframeParams\n          : { ...animationThemeKeyframeParams, ...(animationPropKeyframeParams || {}) };\n\n      const keyframeDefinition = typeof keyframe === 'string' ? keyframe : { keyframe, params: mergedKeyframeParams };\n\n      if (typeof animation === 'string') {\n        animationCSSProp = {\n          animationName: keyframeDefinition,\n          animationDelay: delay,\n          animationDirection: direction,\n          animationDuration: duration,\n          animationFillMode: fillMode,\n          animationIterationCount: iterationCount,\n          animationPlayState: playState,\n          animationTimingFunction: timingFunction,\n        };\n      } else {\n        animationCSSProp = {\n          animationName: keyframeDefinition,\n          animationDelay: animation.delay || delay,\n          animationDirection: animation.direction || direction,\n          animationDuration: animation.duration || duration,\n          animationFillMode: animation.fillMode || fillMode,\n          animationIterationCount: animation.iterationCount || iterationCount,\n          animationPlayState: animation.playState || playState,\n          animationTimingFunction: animation.timingFunction || timingFunction,\n        };\n      }\n    } else {\n      // animations was not found in the theme object\n\n      // TS issue, it's impossible to assign without this condition\n      // eslint-disable-next-line no-lonely-if\n      if (typeof animation === 'string') {\n        animationCSSProp = { animationName: animation };\n      } else {\n        animationCSSProp = {\n          animationName: animation.name,\n          ...(animation.delay && { animationDelay: animation.delay }),\n          ...(animation.direction && { animationDirection: animation.direction }),\n          ...(animation.duration && { animationDuration: animation.duration }),\n          ...(animation.fillMode && { animationFillMode: animation.fillMode }),\n          ...(animation.iterationCount && {\n            animationIterationCount: animation.iterationCount,\n          }),\n          ...(animation.playState && { animationPlayState: animation.playState }),\n          ...(animation.timingFunction && {\n            animationTimingFunction: animation.timingFunction,\n          }),\n        };\n      }\n    }\n  }\n  return animationCSSProp;\n};\n"],"file":"createAnimationStyles.js"}