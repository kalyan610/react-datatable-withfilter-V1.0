{"version":3,"sources":["styles/resolveStyles.ts"],"names":["isDebugEnabled","mergeComponentStyles","withDebugId","cx","classesCache","WeakMap","stylesCache","resolveStyles","options","resolvedVariables","allDisplayNames","componentClassName","className","theme","primaryDisplayName","componentProps","inlineStylesProps","rtl","disableAnimations","renderer","performanceFlags","performance","telemetry","design","styles","variables","noInlineStylesOverrides","noVariableOverrides","enableBooleanVariablesCaching","process","env","NODE_ENV","enableStylesCaching","Error","hasOnlyBooleanVariables","Object","keys","every","variableName","cacheEnabled","mergedStyles","length","componentStyles","root","map","displayName","filter","Boolean","styleParam","props","rendererParam","direction","join","sanitizeCss","enableSanitizeCssPlugin","resolvedStyles","resolvedStylesDebug","classes","has","set","propsCacheKey","JSON","stringify","variablesCacheKey","componentCacheKey","forEach","slotName","lazyEvaluationKey","slotCacheKey","defineProperty","enumerable","configurable","val","get","stylesThemeCache","telemetryPartStart","enabled","now","msResolveStylesTotal","classesThemeCache","stylesRootCacheHits","stylesSlotsCacheHits","styleObj","renderRule","resultClassName","msRenderStylesTotal"],"mappings":"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","sourcesContent":["import { RendererParam } from '@fluentui/react-northstar-styles-renderer';\nimport {\n  ComponentSlotStylesInput,\n  ComponentSlotStylesPrepared,\n  ComponentSlotStylesResolved,\n  ComponentStyleFunctionParam,\n  ComponentVariablesObject,\n  ICSSInJSStyle,\n  isDebugEnabled,\n  mergeComponentStyles,\n  ThemePrepared,\n  withDebugId,\n} from '@fluentui/styles';\nimport cx from 'classnames';\nimport * as _ from 'lodash';\n\nimport { ComponentSlotClasses, ResolveStylesOptions } from './types';\n\nexport type ResolveStylesResult = {\n  resolvedStyles: ComponentSlotStylesResolved;\n  resolvedStylesDebug: Record<string, { styles: Object }[]>;\n  classes: ComponentSlotClasses;\n};\n\n// this weak map is used as cache for the classes\nconst classesCache = new WeakMap<ThemePrepared, Record<string, string>>();\n\n// this weak map is used as cache for the styles\nconst stylesCache = new WeakMap<ThemePrepared, Record<string, ICSSInJSStyle>>();\n\n/**\n * Both resolvedStyles and classes are objects of getters with lazy evaluation\n *\n * Additionally if the cacheEnabled option is provided, than the resolved styles\n * and classes are caching the results in WeakMaps. The key of the maps contains the following:\n * - theme\n * - displayName\n * - slot name\n * - styling props\n * - rtl mode\n * - disable animations mode\n */\nexport const resolveStyles = (\n  options: ResolveStylesOptions,\n  resolvedVariables: ComponentVariablesObject,\n): ResolveStylesResult => {\n  const {\n    allDisplayNames,\n    className: componentClassName,\n    theme,\n    primaryDisplayName,\n    componentProps,\n    inlineStylesProps,\n    rtl,\n    disableAnimations,\n    renderer,\n    performance: performanceFlags,\n    telemetry,\n  } = options;\n\n  const { className, design, styles, variables } = inlineStylesProps;\n  const noInlineStylesOverrides = !(design || styles);\n\n  let noVariableOverrides = performanceFlags.enableBooleanVariablesCaching || !variables;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    if (!performanceFlags.enableStylesCaching && performanceFlags.enableBooleanVariablesCaching) {\n      throw new Error(\n        '@fluentui/react-northstar: Please check your \"performance\" settings on \"Provider\", to enable \"enableBooleanVariablesCaching\" you need to enable \"enableStylesCaching\"',\n      );\n    }\n  }\n\n  if (performanceFlags.enableBooleanVariablesCaching) {\n    if (_.isPlainObject(variables)) {\n      const hasOnlyBooleanVariables = Object.keys(variables).every(\n        variableName =>\n          variables[variableName] === null ||\n          typeof variables[variableName] === 'undefined' ||\n          typeof variables[variableName] === 'boolean',\n      );\n\n      if (!hasOnlyBooleanVariables) {\n        noVariableOverrides = false;\n      }\n    } else if (!_.isNil(variables)) {\n      noVariableOverrides = false;\n    }\n  }\n\n  const cacheEnabled = performanceFlags.enableStylesCaching && noInlineStylesOverrides && noVariableOverrides;\n\n  // Merge theme styles with inline overrides if any\n  let mergedStyles: ComponentSlotStylesPrepared;\n\n  if (allDisplayNames.length === 1) {\n    mergedStyles = theme.componentStyles[allDisplayNames[0]] || { root: () => ({}) };\n  } else {\n    const styles = allDisplayNames.map(displayName => theme.componentStyles[displayName]).filter(Boolean);\n\n    if (styles.length > 0) {\n      mergedStyles = mergeComponentStyles(...styles);\n    } else {\n      mergedStyles = { root: () => ({}) };\n    }\n  }\n\n  if (!noInlineStylesOverrides) {\n    mergedStyles = mergeComponentStyles(\n      mergedStyles,\n      design && withDebugId({ root: design }, 'props.design'),\n      styles && withDebugId({ root: styles } as ComponentSlotStylesInput, 'props.styles'),\n    );\n  }\n\n  const styleParam: ComponentStyleFunctionParam = {\n    props: componentProps,\n    variables: resolvedVariables,\n    theme,\n    rtl,\n    disableAnimations,\n  };\n\n  // Heads Up! Keep in sync with Design.tsx render logic\n  const rendererParam: RendererParam = {\n    direction: rtl ? 'rtl' : 'ltr',\n    disableAnimations,\n    displayName: allDisplayNames.join(':'), // does not affect styles, only used by useEnhancedRenderer in docs\n    sanitizeCss: performanceFlags.enableSanitizeCssPlugin,\n  };\n\n  const resolvedStyles: Record<string, ICSSInJSStyle> = {};\n  const resolvedStylesDebug: Record<string, { styles: Object }[]> = {};\n  const classes: Record<string, string> = {};\n\n  if (cacheEnabled && theme) {\n    if (!stylesCache.has(theme)) {\n      stylesCache.set(theme, {});\n    }\n    if (!classesCache.has(theme)) {\n      classesCache.set(theme, {});\n    }\n  }\n\n  const propsCacheKey = cacheEnabled ? JSON.stringify(componentProps) : '';\n  const variablesCacheKey =\n    cacheEnabled && performanceFlags.enableBooleanVariablesCaching ? JSON.stringify(variables) : '';\n  const componentCacheKey = cacheEnabled\n    ? `${allDisplayNames.join(':')}:${propsCacheKey}:${variablesCacheKey}:${styleParam.rtl}${\n        styleParam.disableAnimations\n      }`\n    : '';\n\n  Object.keys(mergedStyles).forEach(slotName => {\n    // resolve/render slot styles once and cache\n    const lazyEvaluationKey = `${slotName}__return`;\n    const slotCacheKey = componentCacheKey + slotName;\n\n    Object.defineProperty(resolvedStyles, slotName, {\n      enumerable: false,\n      configurable: false,\n      set(val: ICSSInJSStyle) {\n        // Add to the cache if it's enabled\n        if (cacheEnabled && theme) {\n          stylesCache.set(theme, {\n            ...stylesCache.get(theme),\n            [slotCacheKey]: val,\n          });\n        }\n\n        resolvedStyles[lazyEvaluationKey] = val;\n      },\n      get(): ICSSInJSStyle {\n        // If caching enabled and entry exists, get from cache, avoid lazy evaluation\n        if (cacheEnabled && theme) {\n          const stylesThemeCache = stylesCache.get(theme) || {};\n          if (stylesThemeCache[slotCacheKey]) {\n            return stylesThemeCache[slotCacheKey];\n          }\n        }\n\n        if (resolvedStyles[lazyEvaluationKey]) {\n          return resolvedStyles[lazyEvaluationKey];\n        }\n\n        const telemetryPartStart = telemetry?.enabled ? performance.now() : 0;\n\n        // resolve/render slot styles once and cache\n        resolvedStyles[lazyEvaluationKey] = mergedStyles[slotName](styleParam);\n\n        if (cacheEnabled && theme) {\n          stylesCache.set(theme, {\n            ...stylesCache.get(theme),\n            [slotCacheKey]: resolvedStyles[lazyEvaluationKey],\n          });\n        }\n\n        if (process.env.NODE_ENV !== 'production' && isDebugEnabled) {\n          resolvedStylesDebug[slotName] = resolvedStyles[slotName]['_debug'];\n          delete resolvedStyles[slotName]['_debug'];\n        }\n\n        if (telemetry?.enabled && telemetry.performance[primaryDisplayName]) {\n          telemetry.performance[primaryDisplayName].msResolveStylesTotal += performance.now() - telemetryPartStart;\n        }\n\n        return resolvedStyles[lazyEvaluationKey];\n      },\n    });\n\n    Object.defineProperty(classes, slotName, {\n      enumerable: false,\n      configurable: false,\n      set(val: string) {\n        if (cacheEnabled && theme) {\n          classesCache.set(theme, {\n            ...classesCache.get(theme),\n            [slotCacheKey]: val,\n          });\n        }\n\n        classes[lazyEvaluationKey] = val;\n      },\n      get(): string {\n        if (cacheEnabled && theme) {\n          const classesThemeCache = classesCache.get(theme) || {};\n\n          //\n          // Cached styles\n          //\n\n          if (classesThemeCache[slotCacheKey] || classesThemeCache[slotCacheKey] === '') {\n            if (telemetry?.performance[primaryDisplayName]) {\n              if (slotName === 'root') {\n                telemetry.performance[primaryDisplayName].stylesRootCacheHits++;\n              } else {\n                telemetry.performance[primaryDisplayName].stylesSlotsCacheHits++;\n              }\n            }\n\n            return slotName === 'root'\n              ? cx(componentClassName, classesThemeCache[slotCacheKey], className)\n              : classesThemeCache[slotCacheKey];\n          }\n        }\n\n        //\n        // Lazy eval\n        //\n\n        if (classes[lazyEvaluationKey]) {\n          return slotName === 'root'\n            ? cx(componentClassName, classes[lazyEvaluationKey], className)\n            : classes[lazyEvaluationKey];\n        }\n\n        // this resolves the getter magic\n        const styleObj = resolvedStyles[slotName];\n        const telemetryPartStart = telemetry?.enabled ? performance.now() : 0;\n\n        if (styleObj) {\n          classes[lazyEvaluationKey] = renderer.renderRule(styleObj, rendererParam);\n\n          if (cacheEnabled && theme) {\n            classesCache.set(theme, {\n              ...classesCache.get(theme),\n              [slotCacheKey]: classes[lazyEvaluationKey],\n            });\n          }\n        }\n\n        const resultClassName =\n          slotName === 'root'\n            ? cx(componentClassName, classes[lazyEvaluationKey], className)\n            : classes[lazyEvaluationKey];\n\n        if (telemetry?.enabled && telemetry.performance[primaryDisplayName]) {\n          telemetry.performance[primaryDisplayName].msRenderStylesTotal += performance.now() - telemetryPartStart;\n        }\n\n        return resultClassName;\n      },\n    });\n  });\n\n  return {\n    resolvedStyles,\n    resolvedStylesDebug,\n    classes,\n  };\n};\n"],"file":"resolveStyles.js"}